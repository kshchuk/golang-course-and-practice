
ADC_Interfacing.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003e30  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000370  08003fd0  08003fd0  00004fd0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004340  08004340  000061d0  2**0
                  CONTENTS
  4 .ARM          00000008  08004340  08004340  00005340  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004348  08004348  000061d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004348  08004348  00005348  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800434c  0800434c  0000534c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d0  20000000  08004350  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000208  200001d0  08004520  000061d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003d8  08004520  000063d8  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000061d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000060b1  00000000  00000000  000061fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000e37  00000000  00000000  0000c2ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000005b0  00000000  00000000  0000d0e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000461  00000000  00000000  0000d698  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016e05  00000000  00000000  0000daf9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000068c0  00000000  00000000  000248fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00092b4b  00000000  00000000  0002b1be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000bdd09  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000026ac  00000000  00000000  000bdd4c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  000c03f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d0 	.word	0x200001d0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08003fb8 	.word	0x08003fb8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d4 	.word	0x200001d4
 80001dc:	08003fb8 	.word	0x08003fb8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_fmul>:
 8000290:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000294:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000298:	bf1e      	ittt	ne
 800029a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800029e:	ea92 0f0c 	teqne	r2, ip
 80002a2:	ea93 0f0c 	teqne	r3, ip
 80002a6:	d06f      	beq.n	8000388 <__aeabi_fmul+0xf8>
 80002a8:	441a      	add	r2, r3
 80002aa:	ea80 0c01 	eor.w	ip, r0, r1
 80002ae:	0240      	lsls	r0, r0, #9
 80002b0:	bf18      	it	ne
 80002b2:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80002b6:	d01e      	beq.n	80002f6 <__aeabi_fmul+0x66>
 80002b8:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 80002bc:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80002c0:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80002c4:	fba0 3101 	umull	r3, r1, r0, r1
 80002c8:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 80002cc:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 80002d0:	bf3e      	ittt	cc
 80002d2:	0049      	lslcc	r1, r1, #1
 80002d4:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80002d8:	005b      	lslcc	r3, r3, #1
 80002da:	ea40 0001 	orr.w	r0, r0, r1
 80002de:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 80002e2:	2afd      	cmp	r2, #253	@ 0xfd
 80002e4:	d81d      	bhi.n	8000322 <__aeabi_fmul+0x92>
 80002e6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80002ea:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80002ee:	bf08      	it	eq
 80002f0:	f020 0001 	biceq.w	r0, r0, #1
 80002f4:	4770      	bx	lr
 80002f6:	f090 0f00 	teq	r0, #0
 80002fa:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 80002fe:	bf08      	it	eq
 8000300:	0249      	lsleq	r1, r1, #9
 8000302:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000306:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 800030a:	3a7f      	subs	r2, #127	@ 0x7f
 800030c:	bfc2      	ittt	gt
 800030e:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000312:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000316:	4770      	bxgt	lr
 8000318:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 800031c:	f04f 0300 	mov.w	r3, #0
 8000320:	3a01      	subs	r2, #1
 8000322:	dc5d      	bgt.n	80003e0 <__aeabi_fmul+0x150>
 8000324:	f112 0f19 	cmn.w	r2, #25
 8000328:	bfdc      	itt	le
 800032a:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 800032e:	4770      	bxle	lr
 8000330:	f1c2 0200 	rsb	r2, r2, #0
 8000334:	0041      	lsls	r1, r0, #1
 8000336:	fa21 f102 	lsr.w	r1, r1, r2
 800033a:	f1c2 0220 	rsb	r2, r2, #32
 800033e:	fa00 fc02 	lsl.w	ip, r0, r2
 8000342:	ea5f 0031 	movs.w	r0, r1, rrx
 8000346:	f140 0000 	adc.w	r0, r0, #0
 800034a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800034e:	bf08      	it	eq
 8000350:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000354:	4770      	bx	lr
 8000356:	f092 0f00 	teq	r2, #0
 800035a:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 800035e:	bf02      	ittt	eq
 8000360:	0040      	lsleq	r0, r0, #1
 8000362:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000366:	3a01      	subeq	r2, #1
 8000368:	d0f9      	beq.n	800035e <__aeabi_fmul+0xce>
 800036a:	ea40 000c 	orr.w	r0, r0, ip
 800036e:	f093 0f00 	teq	r3, #0
 8000372:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000376:	bf02      	ittt	eq
 8000378:	0049      	lsleq	r1, r1, #1
 800037a:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 800037e:	3b01      	subeq	r3, #1
 8000380:	d0f9      	beq.n	8000376 <__aeabi_fmul+0xe6>
 8000382:	ea41 010c 	orr.w	r1, r1, ip
 8000386:	e78f      	b.n	80002a8 <__aeabi_fmul+0x18>
 8000388:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800038c:	ea92 0f0c 	teq	r2, ip
 8000390:	bf18      	it	ne
 8000392:	ea93 0f0c 	teqne	r3, ip
 8000396:	d00a      	beq.n	80003ae <__aeabi_fmul+0x11e>
 8000398:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 800039c:	bf18      	it	ne
 800039e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 80003a2:	d1d8      	bne.n	8000356 <__aeabi_fmul+0xc6>
 80003a4:	ea80 0001 	eor.w	r0, r0, r1
 80003a8:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80003ac:	4770      	bx	lr
 80003ae:	f090 0f00 	teq	r0, #0
 80003b2:	bf17      	itett	ne
 80003b4:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 80003b8:	4608      	moveq	r0, r1
 80003ba:	f091 0f00 	teqne	r1, #0
 80003be:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 80003c2:	d014      	beq.n	80003ee <__aeabi_fmul+0x15e>
 80003c4:	ea92 0f0c 	teq	r2, ip
 80003c8:	d101      	bne.n	80003ce <__aeabi_fmul+0x13e>
 80003ca:	0242      	lsls	r2, r0, #9
 80003cc:	d10f      	bne.n	80003ee <__aeabi_fmul+0x15e>
 80003ce:	ea93 0f0c 	teq	r3, ip
 80003d2:	d103      	bne.n	80003dc <__aeabi_fmul+0x14c>
 80003d4:	024b      	lsls	r3, r1, #9
 80003d6:	bf18      	it	ne
 80003d8:	4608      	movne	r0, r1
 80003da:	d108      	bne.n	80003ee <__aeabi_fmul+0x15e>
 80003dc:	ea80 0001 	eor.w	r0, r0, r1
 80003e0:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80003e4:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80003e8:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80003ec:	4770      	bx	lr
 80003ee:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80003f2:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 80003f6:	4770      	bx	lr

080003f8 <__aeabi_drsub>:
 80003f8:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80003fc:	e002      	b.n	8000404 <__adddf3>
 80003fe:	bf00      	nop

08000400 <__aeabi_dsub>:
 8000400:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000404 <__adddf3>:
 8000404:	b530      	push	{r4, r5, lr}
 8000406:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800040a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800040e:	ea94 0f05 	teq	r4, r5
 8000412:	bf08      	it	eq
 8000414:	ea90 0f02 	teqeq	r0, r2
 8000418:	bf1f      	itttt	ne
 800041a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800041e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000422:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000426:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800042a:	f000 80e2 	beq.w	80005f2 <__adddf3+0x1ee>
 800042e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000432:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000436:	bfb8      	it	lt
 8000438:	426d      	neglt	r5, r5
 800043a:	dd0c      	ble.n	8000456 <__adddf3+0x52>
 800043c:	442c      	add	r4, r5
 800043e:	ea80 0202 	eor.w	r2, r0, r2
 8000442:	ea81 0303 	eor.w	r3, r1, r3
 8000446:	ea82 0000 	eor.w	r0, r2, r0
 800044a:	ea83 0101 	eor.w	r1, r3, r1
 800044e:	ea80 0202 	eor.w	r2, r0, r2
 8000452:	ea81 0303 	eor.w	r3, r1, r3
 8000456:	2d36      	cmp	r5, #54	@ 0x36
 8000458:	bf88      	it	hi
 800045a:	bd30      	pophi	{r4, r5, pc}
 800045c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000460:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000464:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000468:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800046c:	d002      	beq.n	8000474 <__adddf3+0x70>
 800046e:	4240      	negs	r0, r0
 8000470:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000474:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000478:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800047c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000480:	d002      	beq.n	8000488 <__adddf3+0x84>
 8000482:	4252      	negs	r2, r2
 8000484:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000488:	ea94 0f05 	teq	r4, r5
 800048c:	f000 80a7 	beq.w	80005de <__adddf3+0x1da>
 8000490:	f1a4 0401 	sub.w	r4, r4, #1
 8000494:	f1d5 0e20 	rsbs	lr, r5, #32
 8000498:	db0d      	blt.n	80004b6 <__adddf3+0xb2>
 800049a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800049e:	fa22 f205 	lsr.w	r2, r2, r5
 80004a2:	1880      	adds	r0, r0, r2
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	fa03 f20e 	lsl.w	r2, r3, lr
 80004ac:	1880      	adds	r0, r0, r2
 80004ae:	fa43 f305 	asr.w	r3, r3, r5
 80004b2:	4159      	adcs	r1, r3
 80004b4:	e00e      	b.n	80004d4 <__adddf3+0xd0>
 80004b6:	f1a5 0520 	sub.w	r5, r5, #32
 80004ba:	f10e 0e20 	add.w	lr, lr, #32
 80004be:	2a01      	cmp	r2, #1
 80004c0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80004c4:	bf28      	it	cs
 80004c6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80004ca:	fa43 f305 	asr.w	r3, r3, r5
 80004ce:	18c0      	adds	r0, r0, r3
 80004d0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80004d4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004d8:	d507      	bpl.n	80004ea <__adddf3+0xe6>
 80004da:	f04f 0e00 	mov.w	lr, #0
 80004de:	f1dc 0c00 	rsbs	ip, ip, #0
 80004e2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80004e6:	eb6e 0101 	sbc.w	r1, lr, r1
 80004ea:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80004ee:	d31b      	bcc.n	8000528 <__adddf3+0x124>
 80004f0:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80004f4:	d30c      	bcc.n	8000510 <__adddf3+0x10c>
 80004f6:	0849      	lsrs	r1, r1, #1
 80004f8:	ea5f 0030 	movs.w	r0, r0, rrx
 80004fc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000500:	f104 0401 	add.w	r4, r4, #1
 8000504:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000508:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 800050c:	f080 809a 	bcs.w	8000644 <__adddf3+0x240>
 8000510:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000514:	bf08      	it	eq
 8000516:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800051a:	f150 0000 	adcs.w	r0, r0, #0
 800051e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000522:	ea41 0105 	orr.w	r1, r1, r5
 8000526:	bd30      	pop	{r4, r5, pc}
 8000528:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800052c:	4140      	adcs	r0, r0
 800052e:	eb41 0101 	adc.w	r1, r1, r1
 8000532:	3c01      	subs	r4, #1
 8000534:	bf28      	it	cs
 8000536:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800053a:	d2e9      	bcs.n	8000510 <__adddf3+0x10c>
 800053c:	f091 0f00 	teq	r1, #0
 8000540:	bf04      	itt	eq
 8000542:	4601      	moveq	r1, r0
 8000544:	2000      	moveq	r0, #0
 8000546:	fab1 f381 	clz	r3, r1
 800054a:	bf08      	it	eq
 800054c:	3320      	addeq	r3, #32
 800054e:	f1a3 030b 	sub.w	r3, r3, #11
 8000552:	f1b3 0220 	subs.w	r2, r3, #32
 8000556:	da0c      	bge.n	8000572 <__adddf3+0x16e>
 8000558:	320c      	adds	r2, #12
 800055a:	dd08      	ble.n	800056e <__adddf3+0x16a>
 800055c:	f102 0c14 	add.w	ip, r2, #20
 8000560:	f1c2 020c 	rsb	r2, r2, #12
 8000564:	fa01 f00c 	lsl.w	r0, r1, ip
 8000568:	fa21 f102 	lsr.w	r1, r1, r2
 800056c:	e00c      	b.n	8000588 <__adddf3+0x184>
 800056e:	f102 0214 	add.w	r2, r2, #20
 8000572:	bfd8      	it	le
 8000574:	f1c2 0c20 	rsble	ip, r2, #32
 8000578:	fa01 f102 	lsl.w	r1, r1, r2
 800057c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000580:	bfdc      	itt	le
 8000582:	ea41 010c 	orrle.w	r1, r1, ip
 8000586:	4090      	lslle	r0, r2
 8000588:	1ae4      	subs	r4, r4, r3
 800058a:	bfa2      	ittt	ge
 800058c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000590:	4329      	orrge	r1, r5
 8000592:	bd30      	popge	{r4, r5, pc}
 8000594:	ea6f 0404 	mvn.w	r4, r4
 8000598:	3c1f      	subs	r4, #31
 800059a:	da1c      	bge.n	80005d6 <__adddf3+0x1d2>
 800059c:	340c      	adds	r4, #12
 800059e:	dc0e      	bgt.n	80005be <__adddf3+0x1ba>
 80005a0:	f104 0414 	add.w	r4, r4, #20
 80005a4:	f1c4 0220 	rsb	r2, r4, #32
 80005a8:	fa20 f004 	lsr.w	r0, r0, r4
 80005ac:	fa01 f302 	lsl.w	r3, r1, r2
 80005b0:	ea40 0003 	orr.w	r0, r0, r3
 80005b4:	fa21 f304 	lsr.w	r3, r1, r4
 80005b8:	ea45 0103 	orr.w	r1, r5, r3
 80005bc:	bd30      	pop	{r4, r5, pc}
 80005be:	f1c4 040c 	rsb	r4, r4, #12
 80005c2:	f1c4 0220 	rsb	r2, r4, #32
 80005c6:	fa20 f002 	lsr.w	r0, r0, r2
 80005ca:	fa01 f304 	lsl.w	r3, r1, r4
 80005ce:	ea40 0003 	orr.w	r0, r0, r3
 80005d2:	4629      	mov	r1, r5
 80005d4:	bd30      	pop	{r4, r5, pc}
 80005d6:	fa21 f004 	lsr.w	r0, r1, r4
 80005da:	4629      	mov	r1, r5
 80005dc:	bd30      	pop	{r4, r5, pc}
 80005de:	f094 0f00 	teq	r4, #0
 80005e2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80005e6:	bf06      	itte	eq
 80005e8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80005ec:	3401      	addeq	r4, #1
 80005ee:	3d01      	subne	r5, #1
 80005f0:	e74e      	b.n	8000490 <__adddf3+0x8c>
 80005f2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005f6:	bf18      	it	ne
 80005f8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005fc:	d029      	beq.n	8000652 <__adddf3+0x24e>
 80005fe:	ea94 0f05 	teq	r4, r5
 8000602:	bf08      	it	eq
 8000604:	ea90 0f02 	teqeq	r0, r2
 8000608:	d005      	beq.n	8000616 <__adddf3+0x212>
 800060a:	ea54 0c00 	orrs.w	ip, r4, r0
 800060e:	bf04      	itt	eq
 8000610:	4619      	moveq	r1, r3
 8000612:	4610      	moveq	r0, r2
 8000614:	bd30      	pop	{r4, r5, pc}
 8000616:	ea91 0f03 	teq	r1, r3
 800061a:	bf1e      	ittt	ne
 800061c:	2100      	movne	r1, #0
 800061e:	2000      	movne	r0, #0
 8000620:	bd30      	popne	{r4, r5, pc}
 8000622:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000626:	d105      	bne.n	8000634 <__adddf3+0x230>
 8000628:	0040      	lsls	r0, r0, #1
 800062a:	4149      	adcs	r1, r1
 800062c:	bf28      	it	cs
 800062e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000632:	bd30      	pop	{r4, r5, pc}
 8000634:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000638:	bf3c      	itt	cc
 800063a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800063e:	bd30      	popcc	{r4, r5, pc}
 8000640:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000644:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000648:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800064c:	f04f 0000 	mov.w	r0, #0
 8000650:	bd30      	pop	{r4, r5, pc}
 8000652:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000656:	bf1a      	itte	ne
 8000658:	4619      	movne	r1, r3
 800065a:	4610      	movne	r0, r2
 800065c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000660:	bf1c      	itt	ne
 8000662:	460b      	movne	r3, r1
 8000664:	4602      	movne	r2, r0
 8000666:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800066a:	bf06      	itte	eq
 800066c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000670:	ea91 0f03 	teqeq	r1, r3
 8000674:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000678:	bd30      	pop	{r4, r5, pc}
 800067a:	bf00      	nop

0800067c <__aeabi_ui2d>:
 800067c:	f090 0f00 	teq	r0, #0
 8000680:	bf04      	itt	eq
 8000682:	2100      	moveq	r1, #0
 8000684:	4770      	bxeq	lr
 8000686:	b530      	push	{r4, r5, lr}
 8000688:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800068c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000690:	f04f 0500 	mov.w	r5, #0
 8000694:	f04f 0100 	mov.w	r1, #0
 8000698:	e750      	b.n	800053c <__adddf3+0x138>
 800069a:	bf00      	nop

0800069c <__aeabi_i2d>:
 800069c:	f090 0f00 	teq	r0, #0
 80006a0:	bf04      	itt	eq
 80006a2:	2100      	moveq	r1, #0
 80006a4:	4770      	bxeq	lr
 80006a6:	b530      	push	{r4, r5, lr}
 80006a8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80006ac:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80006b0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80006b4:	bf48      	it	mi
 80006b6:	4240      	negmi	r0, r0
 80006b8:	f04f 0100 	mov.w	r1, #0
 80006bc:	e73e      	b.n	800053c <__adddf3+0x138>
 80006be:	bf00      	nop

080006c0 <__aeabi_f2d>:
 80006c0:	0042      	lsls	r2, r0, #1
 80006c2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80006c6:	ea4f 0131 	mov.w	r1, r1, rrx
 80006ca:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80006ce:	bf1f      	itttt	ne
 80006d0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80006d4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80006d8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80006dc:	4770      	bxne	lr
 80006de:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80006e2:	bf08      	it	eq
 80006e4:	4770      	bxeq	lr
 80006e6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80006ea:	bf04      	itt	eq
 80006ec:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80006f0:	4770      	bxeq	lr
 80006f2:	b530      	push	{r4, r5, lr}
 80006f4:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80006f8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80006fc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000700:	e71c      	b.n	800053c <__adddf3+0x138>
 8000702:	bf00      	nop

08000704 <__aeabi_ul2d>:
 8000704:	ea50 0201 	orrs.w	r2, r0, r1
 8000708:	bf08      	it	eq
 800070a:	4770      	bxeq	lr
 800070c:	b530      	push	{r4, r5, lr}
 800070e:	f04f 0500 	mov.w	r5, #0
 8000712:	e00a      	b.n	800072a <__aeabi_l2d+0x16>

08000714 <__aeabi_l2d>:
 8000714:	ea50 0201 	orrs.w	r2, r0, r1
 8000718:	bf08      	it	eq
 800071a:	4770      	bxeq	lr
 800071c:	b530      	push	{r4, r5, lr}
 800071e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000722:	d502      	bpl.n	800072a <__aeabi_l2d+0x16>
 8000724:	4240      	negs	r0, r0
 8000726:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800072a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800072e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000732:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000736:	f43f aed8 	beq.w	80004ea <__adddf3+0xe6>
 800073a:	f04f 0203 	mov.w	r2, #3
 800073e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000742:	bf18      	it	ne
 8000744:	3203      	addne	r2, #3
 8000746:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800074a:	bf18      	it	ne
 800074c:	3203      	addne	r2, #3
 800074e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000752:	f1c2 0320 	rsb	r3, r2, #32
 8000756:	fa00 fc03 	lsl.w	ip, r0, r3
 800075a:	fa20 f002 	lsr.w	r0, r0, r2
 800075e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000762:	ea40 000e 	orr.w	r0, r0, lr
 8000766:	fa21 f102 	lsr.w	r1, r1, r2
 800076a:	4414      	add	r4, r2
 800076c:	e6bd      	b.n	80004ea <__adddf3+0xe6>
 800076e:	bf00      	nop

08000770 <__aeabi_dmul>:
 8000770:	b570      	push	{r4, r5, r6, lr}
 8000772:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000776:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800077a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800077e:	bf1d      	ittte	ne
 8000780:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000784:	ea94 0f0c 	teqne	r4, ip
 8000788:	ea95 0f0c 	teqne	r5, ip
 800078c:	f000 f8de 	bleq	800094c <__aeabi_dmul+0x1dc>
 8000790:	442c      	add	r4, r5
 8000792:	ea81 0603 	eor.w	r6, r1, r3
 8000796:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800079a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800079e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80007a2:	bf18      	it	ne
 80007a4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80007a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80007ac:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80007b0:	d038      	beq.n	8000824 <__aeabi_dmul+0xb4>
 80007b2:	fba0 ce02 	umull	ip, lr, r0, r2
 80007b6:	f04f 0500 	mov.w	r5, #0
 80007ba:	fbe1 e502 	umlal	lr, r5, r1, r2
 80007be:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80007c2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80007c6:	f04f 0600 	mov.w	r6, #0
 80007ca:	fbe1 5603 	umlal	r5, r6, r1, r3
 80007ce:	f09c 0f00 	teq	ip, #0
 80007d2:	bf18      	it	ne
 80007d4:	f04e 0e01 	orrne.w	lr, lr, #1
 80007d8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80007dc:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80007e0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80007e4:	d204      	bcs.n	80007f0 <__aeabi_dmul+0x80>
 80007e6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80007ea:	416d      	adcs	r5, r5
 80007ec:	eb46 0606 	adc.w	r6, r6, r6
 80007f0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80007f4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80007f8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80007fc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000800:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000804:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000808:	bf88      	it	hi
 800080a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800080e:	d81e      	bhi.n	800084e <__aeabi_dmul+0xde>
 8000810:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000814:	bf08      	it	eq
 8000816:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800081a:	f150 0000 	adcs.w	r0, r0, #0
 800081e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000822:	bd70      	pop	{r4, r5, r6, pc}
 8000824:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000828:	ea46 0101 	orr.w	r1, r6, r1
 800082c:	ea40 0002 	orr.w	r0, r0, r2
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000838:	bfc2      	ittt	gt
 800083a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800083e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000842:	bd70      	popgt	{r4, r5, r6, pc}
 8000844:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000848:	f04f 0e00 	mov.w	lr, #0
 800084c:	3c01      	subs	r4, #1
 800084e:	f300 80ab 	bgt.w	80009a8 <__aeabi_dmul+0x238>
 8000852:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000856:	bfde      	ittt	le
 8000858:	2000      	movle	r0, #0
 800085a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800085e:	bd70      	pople	{r4, r5, r6, pc}
 8000860:	f1c4 0400 	rsb	r4, r4, #0
 8000864:	3c20      	subs	r4, #32
 8000866:	da35      	bge.n	80008d4 <__aeabi_dmul+0x164>
 8000868:	340c      	adds	r4, #12
 800086a:	dc1b      	bgt.n	80008a4 <__aeabi_dmul+0x134>
 800086c:	f104 0414 	add.w	r4, r4, #20
 8000870:	f1c4 0520 	rsb	r5, r4, #32
 8000874:	fa00 f305 	lsl.w	r3, r0, r5
 8000878:	fa20 f004 	lsr.w	r0, r0, r4
 800087c:	fa01 f205 	lsl.w	r2, r1, r5
 8000880:	ea40 0002 	orr.w	r0, r0, r2
 8000884:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000888:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800088c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000890:	fa21 f604 	lsr.w	r6, r1, r4
 8000894:	eb42 0106 	adc.w	r1, r2, r6
 8000898:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800089c:	bf08      	it	eq
 800089e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80008a2:	bd70      	pop	{r4, r5, r6, pc}
 80008a4:	f1c4 040c 	rsb	r4, r4, #12
 80008a8:	f1c4 0520 	rsb	r5, r4, #32
 80008ac:	fa00 f304 	lsl.w	r3, r0, r4
 80008b0:	fa20 f005 	lsr.w	r0, r0, r5
 80008b4:	fa01 f204 	lsl.w	r2, r1, r4
 80008b8:	ea40 0002 	orr.w	r0, r0, r2
 80008bc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80008c0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80008c4:	f141 0100 	adc.w	r1, r1, #0
 80008c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80008cc:	bf08      	it	eq
 80008ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80008d2:	bd70      	pop	{r4, r5, r6, pc}
 80008d4:	f1c4 0520 	rsb	r5, r4, #32
 80008d8:	fa00 f205 	lsl.w	r2, r0, r5
 80008dc:	ea4e 0e02 	orr.w	lr, lr, r2
 80008e0:	fa20 f304 	lsr.w	r3, r0, r4
 80008e4:	fa01 f205 	lsl.w	r2, r1, r5
 80008e8:	ea43 0302 	orr.w	r3, r3, r2
 80008ec:	fa21 f004 	lsr.w	r0, r1, r4
 80008f0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80008f4:	fa21 f204 	lsr.w	r2, r1, r4
 80008f8:	ea20 0002 	bic.w	r0, r0, r2
 80008fc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000900:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000904:	bf08      	it	eq
 8000906:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800090a:	bd70      	pop	{r4, r5, r6, pc}
 800090c:	f094 0f00 	teq	r4, #0
 8000910:	d10f      	bne.n	8000932 <__aeabi_dmul+0x1c2>
 8000912:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000916:	0040      	lsls	r0, r0, #1
 8000918:	eb41 0101 	adc.w	r1, r1, r1
 800091c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000920:	bf08      	it	eq
 8000922:	3c01      	subeq	r4, #1
 8000924:	d0f7      	beq.n	8000916 <__aeabi_dmul+0x1a6>
 8000926:	ea41 0106 	orr.w	r1, r1, r6
 800092a:	f095 0f00 	teq	r5, #0
 800092e:	bf18      	it	ne
 8000930:	4770      	bxne	lr
 8000932:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000936:	0052      	lsls	r2, r2, #1
 8000938:	eb43 0303 	adc.w	r3, r3, r3
 800093c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000940:	bf08      	it	eq
 8000942:	3d01      	subeq	r5, #1
 8000944:	d0f7      	beq.n	8000936 <__aeabi_dmul+0x1c6>
 8000946:	ea43 0306 	orr.w	r3, r3, r6
 800094a:	4770      	bx	lr
 800094c:	ea94 0f0c 	teq	r4, ip
 8000950:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000954:	bf18      	it	ne
 8000956:	ea95 0f0c 	teqne	r5, ip
 800095a:	d00c      	beq.n	8000976 <__aeabi_dmul+0x206>
 800095c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000960:	bf18      	it	ne
 8000962:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000966:	d1d1      	bne.n	800090c <__aeabi_dmul+0x19c>
 8000968:	ea81 0103 	eor.w	r1, r1, r3
 800096c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000970:	f04f 0000 	mov.w	r0, #0
 8000974:	bd70      	pop	{r4, r5, r6, pc}
 8000976:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800097a:	bf06      	itte	eq
 800097c:	4610      	moveq	r0, r2
 800097e:	4619      	moveq	r1, r3
 8000980:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000984:	d019      	beq.n	80009ba <__aeabi_dmul+0x24a>
 8000986:	ea94 0f0c 	teq	r4, ip
 800098a:	d102      	bne.n	8000992 <__aeabi_dmul+0x222>
 800098c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000990:	d113      	bne.n	80009ba <__aeabi_dmul+0x24a>
 8000992:	ea95 0f0c 	teq	r5, ip
 8000996:	d105      	bne.n	80009a4 <__aeabi_dmul+0x234>
 8000998:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800099c:	bf1c      	itt	ne
 800099e:	4610      	movne	r0, r2
 80009a0:	4619      	movne	r1, r3
 80009a2:	d10a      	bne.n	80009ba <__aeabi_dmul+0x24a>
 80009a4:	ea81 0103 	eor.w	r1, r1, r3
 80009a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80009ac:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80009b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80009b4:	f04f 0000 	mov.w	r0, #0
 80009b8:	bd70      	pop	{r4, r5, r6, pc}
 80009ba:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80009be:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80009c2:	bd70      	pop	{r4, r5, r6, pc}

080009c4 <__aeabi_ddiv>:
 80009c4:	b570      	push	{r4, r5, r6, lr}
 80009c6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80009ca:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80009ce:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80009d2:	bf1d      	ittte	ne
 80009d4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80009d8:	ea94 0f0c 	teqne	r4, ip
 80009dc:	ea95 0f0c 	teqne	r5, ip
 80009e0:	f000 f8a7 	bleq	8000b32 <__aeabi_ddiv+0x16e>
 80009e4:	eba4 0405 	sub.w	r4, r4, r5
 80009e8:	ea81 0e03 	eor.w	lr, r1, r3
 80009ec:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80009f4:	f000 8088 	beq.w	8000b08 <__aeabi_ddiv+0x144>
 80009f8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80009fc:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000a00:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000a04:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000a08:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000a0c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000a10:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000a14:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000a18:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000a1c:	429d      	cmp	r5, r3
 8000a1e:	bf08      	it	eq
 8000a20:	4296      	cmpeq	r6, r2
 8000a22:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000a26:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000a2a:	d202      	bcs.n	8000a32 <__aeabi_ddiv+0x6e>
 8000a2c:	085b      	lsrs	r3, r3, #1
 8000a2e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a32:	1ab6      	subs	r6, r6, r2
 8000a34:	eb65 0503 	sbc.w	r5, r5, r3
 8000a38:	085b      	lsrs	r3, r3, #1
 8000a3a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a3e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000a42:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000a46:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a4a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a4e:	bf22      	ittt	cs
 8000a50:	1ab6      	subcs	r6, r6, r2
 8000a52:	4675      	movcs	r5, lr
 8000a54:	ea40 000c 	orrcs.w	r0, r0, ip
 8000a58:	085b      	lsrs	r3, r3, #1
 8000a5a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a5e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a62:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a66:	bf22      	ittt	cs
 8000a68:	1ab6      	subcs	r6, r6, r2
 8000a6a:	4675      	movcs	r5, lr
 8000a6c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000a70:	085b      	lsrs	r3, r3, #1
 8000a72:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a76:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a7a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a7e:	bf22      	ittt	cs
 8000a80:	1ab6      	subcs	r6, r6, r2
 8000a82:	4675      	movcs	r5, lr
 8000a84:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000a88:	085b      	lsrs	r3, r3, #1
 8000a8a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a8e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a92:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a96:	bf22      	ittt	cs
 8000a98:	1ab6      	subcs	r6, r6, r2
 8000a9a:	4675      	movcs	r5, lr
 8000a9c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000aa0:	ea55 0e06 	orrs.w	lr, r5, r6
 8000aa4:	d018      	beq.n	8000ad8 <__aeabi_ddiv+0x114>
 8000aa6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000aaa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000aae:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000ab2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000ab6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000aba:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000abe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000ac2:	d1c0      	bne.n	8000a46 <__aeabi_ddiv+0x82>
 8000ac4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000ac8:	d10b      	bne.n	8000ae2 <__aeabi_ddiv+0x11e>
 8000aca:	ea41 0100 	orr.w	r1, r1, r0
 8000ace:	f04f 0000 	mov.w	r0, #0
 8000ad2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8000ad6:	e7b6      	b.n	8000a46 <__aeabi_ddiv+0x82>
 8000ad8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000adc:	bf04      	itt	eq
 8000ade:	4301      	orreq	r1, r0
 8000ae0:	2000      	moveq	r0, #0
 8000ae2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000ae6:	bf88      	it	hi
 8000ae8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000aec:	f63f aeaf 	bhi.w	800084e <__aeabi_dmul+0xde>
 8000af0:	ebb5 0c03 	subs.w	ip, r5, r3
 8000af4:	bf04      	itt	eq
 8000af6:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000afa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000afe:	f150 0000 	adcs.w	r0, r0, #0
 8000b02:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000b06:	bd70      	pop	{r4, r5, r6, pc}
 8000b08:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000b0c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000b10:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000b14:	bfc2      	ittt	gt
 8000b16:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000b1a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000b1e:	bd70      	popgt	{r4, r5, r6, pc}
 8000b20:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b24:	f04f 0e00 	mov.w	lr, #0
 8000b28:	3c01      	subs	r4, #1
 8000b2a:	e690      	b.n	800084e <__aeabi_dmul+0xde>
 8000b2c:	ea45 0e06 	orr.w	lr, r5, r6
 8000b30:	e68d      	b.n	800084e <__aeabi_dmul+0xde>
 8000b32:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000b36:	ea94 0f0c 	teq	r4, ip
 8000b3a:	bf08      	it	eq
 8000b3c:	ea95 0f0c 	teqeq	r5, ip
 8000b40:	f43f af3b 	beq.w	80009ba <__aeabi_dmul+0x24a>
 8000b44:	ea94 0f0c 	teq	r4, ip
 8000b48:	d10a      	bne.n	8000b60 <__aeabi_ddiv+0x19c>
 8000b4a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000b4e:	f47f af34 	bne.w	80009ba <__aeabi_dmul+0x24a>
 8000b52:	ea95 0f0c 	teq	r5, ip
 8000b56:	f47f af25 	bne.w	80009a4 <__aeabi_dmul+0x234>
 8000b5a:	4610      	mov	r0, r2
 8000b5c:	4619      	mov	r1, r3
 8000b5e:	e72c      	b.n	80009ba <__aeabi_dmul+0x24a>
 8000b60:	ea95 0f0c 	teq	r5, ip
 8000b64:	d106      	bne.n	8000b74 <__aeabi_ddiv+0x1b0>
 8000b66:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000b6a:	f43f aefd 	beq.w	8000968 <__aeabi_dmul+0x1f8>
 8000b6e:	4610      	mov	r0, r2
 8000b70:	4619      	mov	r1, r3
 8000b72:	e722      	b.n	80009ba <__aeabi_dmul+0x24a>
 8000b74:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000b78:	bf18      	it	ne
 8000b7a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000b7e:	f47f aec5 	bne.w	800090c <__aeabi_dmul+0x19c>
 8000b82:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000b86:	f47f af0d 	bne.w	80009a4 <__aeabi_dmul+0x234>
 8000b8a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000b8e:	f47f aeeb 	bne.w	8000968 <__aeabi_dmul+0x1f8>
 8000b92:	e712      	b.n	80009ba <__aeabi_dmul+0x24a>

08000b94 <__gedf2>:
 8000b94:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000b98:	e006      	b.n	8000ba8 <__cmpdf2+0x4>
 8000b9a:	bf00      	nop

08000b9c <__ledf2>:
 8000b9c:	f04f 0c01 	mov.w	ip, #1
 8000ba0:	e002      	b.n	8000ba8 <__cmpdf2+0x4>
 8000ba2:	bf00      	nop

08000ba4 <__cmpdf2>:
 8000ba4:	f04f 0c01 	mov.w	ip, #1
 8000ba8:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000bac:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000bb0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000bb4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000bb8:	bf18      	it	ne
 8000bba:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000bbe:	d01b      	beq.n	8000bf8 <__cmpdf2+0x54>
 8000bc0:	b001      	add	sp, #4
 8000bc2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000bc6:	bf0c      	ite	eq
 8000bc8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000bcc:	ea91 0f03 	teqne	r1, r3
 8000bd0:	bf02      	ittt	eq
 8000bd2:	ea90 0f02 	teqeq	r0, r2
 8000bd6:	2000      	moveq	r0, #0
 8000bd8:	4770      	bxeq	lr
 8000bda:	f110 0f00 	cmn.w	r0, #0
 8000bde:	ea91 0f03 	teq	r1, r3
 8000be2:	bf58      	it	pl
 8000be4:	4299      	cmppl	r1, r3
 8000be6:	bf08      	it	eq
 8000be8:	4290      	cmpeq	r0, r2
 8000bea:	bf2c      	ite	cs
 8000bec:	17d8      	asrcs	r0, r3, #31
 8000bee:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000bf2:	f040 0001 	orr.w	r0, r0, #1
 8000bf6:	4770      	bx	lr
 8000bf8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000bfc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c00:	d102      	bne.n	8000c08 <__cmpdf2+0x64>
 8000c02:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000c06:	d107      	bne.n	8000c18 <__cmpdf2+0x74>
 8000c08:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000c0c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c10:	d1d6      	bne.n	8000bc0 <__cmpdf2+0x1c>
 8000c12:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000c16:	d0d3      	beq.n	8000bc0 <__cmpdf2+0x1c>
 8000c18:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000c1c:	4770      	bx	lr
 8000c1e:	bf00      	nop

08000c20 <__aeabi_cdrcmple>:
 8000c20:	4684      	mov	ip, r0
 8000c22:	4610      	mov	r0, r2
 8000c24:	4662      	mov	r2, ip
 8000c26:	468c      	mov	ip, r1
 8000c28:	4619      	mov	r1, r3
 8000c2a:	4663      	mov	r3, ip
 8000c2c:	e000      	b.n	8000c30 <__aeabi_cdcmpeq>
 8000c2e:	bf00      	nop

08000c30 <__aeabi_cdcmpeq>:
 8000c30:	b501      	push	{r0, lr}
 8000c32:	f7ff ffb7 	bl	8000ba4 <__cmpdf2>
 8000c36:	2800      	cmp	r0, #0
 8000c38:	bf48      	it	mi
 8000c3a:	f110 0f00 	cmnmi.w	r0, #0
 8000c3e:	bd01      	pop	{r0, pc}

08000c40 <__aeabi_dcmpeq>:
 8000c40:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c44:	f7ff fff4 	bl	8000c30 <__aeabi_cdcmpeq>
 8000c48:	bf0c      	ite	eq
 8000c4a:	2001      	moveq	r0, #1
 8000c4c:	2000      	movne	r0, #0
 8000c4e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c52:	bf00      	nop

08000c54 <__aeabi_dcmplt>:
 8000c54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c58:	f7ff ffea 	bl	8000c30 <__aeabi_cdcmpeq>
 8000c5c:	bf34      	ite	cc
 8000c5e:	2001      	movcc	r0, #1
 8000c60:	2000      	movcs	r0, #0
 8000c62:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c66:	bf00      	nop

08000c68 <__aeabi_dcmple>:
 8000c68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c6c:	f7ff ffe0 	bl	8000c30 <__aeabi_cdcmpeq>
 8000c70:	bf94      	ite	ls
 8000c72:	2001      	movls	r0, #1
 8000c74:	2000      	movhi	r0, #0
 8000c76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c7a:	bf00      	nop

08000c7c <__aeabi_dcmpge>:
 8000c7c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c80:	f7ff ffce 	bl	8000c20 <__aeabi_cdrcmple>
 8000c84:	bf94      	ite	ls
 8000c86:	2001      	movls	r0, #1
 8000c88:	2000      	movhi	r0, #0
 8000c8a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c8e:	bf00      	nop

08000c90 <__aeabi_dcmpgt>:
 8000c90:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c94:	f7ff ffc4 	bl	8000c20 <__aeabi_cdrcmple>
 8000c98:	bf34      	ite	cc
 8000c9a:	2001      	movcc	r0, #1
 8000c9c:	2000      	movcs	r0, #0
 8000c9e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ca2:	bf00      	nop

08000ca4 <__aeabi_dcmpun>:
 8000ca4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ca8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000cac:	d102      	bne.n	8000cb4 <__aeabi_dcmpun+0x10>
 8000cae:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000cb2:	d10a      	bne.n	8000cca <__aeabi_dcmpun+0x26>
 8000cb4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000cb8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000cbc:	d102      	bne.n	8000cc4 <__aeabi_dcmpun+0x20>
 8000cbe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000cc2:	d102      	bne.n	8000cca <__aeabi_dcmpun+0x26>
 8000cc4:	f04f 0000 	mov.w	r0, #0
 8000cc8:	4770      	bx	lr
 8000cca:	f04f 0001 	mov.w	r0, #1
 8000cce:	4770      	bx	lr

08000cd0 <__aeabi_d2iz>:
 8000cd0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000cd4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000cd8:	d215      	bcs.n	8000d06 <__aeabi_d2iz+0x36>
 8000cda:	d511      	bpl.n	8000d00 <__aeabi_d2iz+0x30>
 8000cdc:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ce0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ce4:	d912      	bls.n	8000d0c <__aeabi_d2iz+0x3c>
 8000ce6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000cea:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000cee:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000cf2:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000cf6:	fa23 f002 	lsr.w	r0, r3, r2
 8000cfa:	bf18      	it	ne
 8000cfc:	4240      	negne	r0, r0
 8000cfe:	4770      	bx	lr
 8000d00:	f04f 0000 	mov.w	r0, #0
 8000d04:	4770      	bx	lr
 8000d06:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000d0a:	d105      	bne.n	8000d18 <__aeabi_d2iz+0x48>
 8000d0c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000d10:	bf08      	it	eq
 8000d12:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000d16:	4770      	bx	lr
 8000d18:	f04f 0000 	mov.w	r0, #0
 8000d1c:	4770      	bx	lr
 8000d1e:	bf00      	nop

08000d20 <__aeabi_frsub>:
 8000d20:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000d24:	e002      	b.n	8000d2c <__addsf3>
 8000d26:	bf00      	nop

08000d28 <__aeabi_fsub>:
 8000d28:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000d2c <__addsf3>:
 8000d2c:	0042      	lsls	r2, r0, #1
 8000d2e:	bf1f      	itttt	ne
 8000d30:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000d34:	ea92 0f03 	teqne	r2, r3
 8000d38:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000d3c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000d40:	d06a      	beq.n	8000e18 <__addsf3+0xec>
 8000d42:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000d46:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000d4a:	bfc1      	itttt	gt
 8000d4c:	18d2      	addgt	r2, r2, r3
 8000d4e:	4041      	eorgt	r1, r0
 8000d50:	4048      	eorgt	r0, r1
 8000d52:	4041      	eorgt	r1, r0
 8000d54:	bfb8      	it	lt
 8000d56:	425b      	neglt	r3, r3
 8000d58:	2b19      	cmp	r3, #25
 8000d5a:	bf88      	it	hi
 8000d5c:	4770      	bxhi	lr
 8000d5e:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000d62:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d66:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000d6a:	bf18      	it	ne
 8000d6c:	4240      	negne	r0, r0
 8000d6e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000d72:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000d76:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000d7a:	bf18      	it	ne
 8000d7c:	4249      	negne	r1, r1
 8000d7e:	ea92 0f03 	teq	r2, r3
 8000d82:	d03f      	beq.n	8000e04 <__addsf3+0xd8>
 8000d84:	f1a2 0201 	sub.w	r2, r2, #1
 8000d88:	fa41 fc03 	asr.w	ip, r1, r3
 8000d8c:	eb10 000c 	adds.w	r0, r0, ip
 8000d90:	f1c3 0320 	rsb	r3, r3, #32
 8000d94:	fa01 f103 	lsl.w	r1, r1, r3
 8000d98:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000d9c:	d502      	bpl.n	8000da4 <__addsf3+0x78>
 8000d9e:	4249      	negs	r1, r1
 8000da0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000da4:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000da8:	d313      	bcc.n	8000dd2 <__addsf3+0xa6>
 8000daa:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000dae:	d306      	bcc.n	8000dbe <__addsf3+0x92>
 8000db0:	0840      	lsrs	r0, r0, #1
 8000db2:	ea4f 0131 	mov.w	r1, r1, rrx
 8000db6:	f102 0201 	add.w	r2, r2, #1
 8000dba:	2afe      	cmp	r2, #254	@ 0xfe
 8000dbc:	d251      	bcs.n	8000e62 <__addsf3+0x136>
 8000dbe:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000dc2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000dc6:	bf08      	it	eq
 8000dc8:	f020 0001 	biceq.w	r0, r0, #1
 8000dcc:	ea40 0003 	orr.w	r0, r0, r3
 8000dd0:	4770      	bx	lr
 8000dd2:	0049      	lsls	r1, r1, #1
 8000dd4:	eb40 0000 	adc.w	r0, r0, r0
 8000dd8:	3a01      	subs	r2, #1
 8000dda:	bf28      	it	cs
 8000ddc:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000de0:	d2ed      	bcs.n	8000dbe <__addsf3+0x92>
 8000de2:	fab0 fc80 	clz	ip, r0
 8000de6:	f1ac 0c08 	sub.w	ip, ip, #8
 8000dea:	ebb2 020c 	subs.w	r2, r2, ip
 8000dee:	fa00 f00c 	lsl.w	r0, r0, ip
 8000df2:	bfaa      	itet	ge
 8000df4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000df8:	4252      	neglt	r2, r2
 8000dfa:	4318      	orrge	r0, r3
 8000dfc:	bfbc      	itt	lt
 8000dfe:	40d0      	lsrlt	r0, r2
 8000e00:	4318      	orrlt	r0, r3
 8000e02:	4770      	bx	lr
 8000e04:	f092 0f00 	teq	r2, #0
 8000e08:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000e0c:	bf06      	itte	eq
 8000e0e:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000e12:	3201      	addeq	r2, #1
 8000e14:	3b01      	subne	r3, #1
 8000e16:	e7b5      	b.n	8000d84 <__addsf3+0x58>
 8000e18:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000e1c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000e20:	bf18      	it	ne
 8000e22:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000e26:	d021      	beq.n	8000e6c <__addsf3+0x140>
 8000e28:	ea92 0f03 	teq	r2, r3
 8000e2c:	d004      	beq.n	8000e38 <__addsf3+0x10c>
 8000e2e:	f092 0f00 	teq	r2, #0
 8000e32:	bf08      	it	eq
 8000e34:	4608      	moveq	r0, r1
 8000e36:	4770      	bx	lr
 8000e38:	ea90 0f01 	teq	r0, r1
 8000e3c:	bf1c      	itt	ne
 8000e3e:	2000      	movne	r0, #0
 8000e40:	4770      	bxne	lr
 8000e42:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000e46:	d104      	bne.n	8000e52 <__addsf3+0x126>
 8000e48:	0040      	lsls	r0, r0, #1
 8000e4a:	bf28      	it	cs
 8000e4c:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000e50:	4770      	bx	lr
 8000e52:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000e56:	bf3c      	itt	cc
 8000e58:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000e5c:	4770      	bxcc	lr
 8000e5e:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000e62:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000e66:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e6a:	4770      	bx	lr
 8000e6c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000e70:	bf16      	itet	ne
 8000e72:	4608      	movne	r0, r1
 8000e74:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000e78:	4601      	movne	r1, r0
 8000e7a:	0242      	lsls	r2, r0, #9
 8000e7c:	bf06      	itte	eq
 8000e7e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000e82:	ea90 0f01 	teqeq	r0, r1
 8000e86:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000e8a:	4770      	bx	lr

08000e8c <__aeabi_ui2f>:
 8000e8c:	f04f 0300 	mov.w	r3, #0
 8000e90:	e004      	b.n	8000e9c <__aeabi_i2f+0x8>
 8000e92:	bf00      	nop

08000e94 <__aeabi_i2f>:
 8000e94:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000e98:	bf48      	it	mi
 8000e9a:	4240      	negmi	r0, r0
 8000e9c:	ea5f 0c00 	movs.w	ip, r0
 8000ea0:	bf08      	it	eq
 8000ea2:	4770      	bxeq	lr
 8000ea4:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000ea8:	4601      	mov	r1, r0
 8000eaa:	f04f 0000 	mov.w	r0, #0
 8000eae:	e01c      	b.n	8000eea <__aeabi_l2f+0x2a>

08000eb0 <__aeabi_ul2f>:
 8000eb0:	ea50 0201 	orrs.w	r2, r0, r1
 8000eb4:	bf08      	it	eq
 8000eb6:	4770      	bxeq	lr
 8000eb8:	f04f 0300 	mov.w	r3, #0
 8000ebc:	e00a      	b.n	8000ed4 <__aeabi_l2f+0x14>
 8000ebe:	bf00      	nop

08000ec0 <__aeabi_l2f>:
 8000ec0:	ea50 0201 	orrs.w	r2, r0, r1
 8000ec4:	bf08      	it	eq
 8000ec6:	4770      	bxeq	lr
 8000ec8:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000ecc:	d502      	bpl.n	8000ed4 <__aeabi_l2f+0x14>
 8000ece:	4240      	negs	r0, r0
 8000ed0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ed4:	ea5f 0c01 	movs.w	ip, r1
 8000ed8:	bf02      	ittt	eq
 8000eda:	4684      	moveq	ip, r0
 8000edc:	4601      	moveq	r1, r0
 8000ede:	2000      	moveq	r0, #0
 8000ee0:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000ee4:	bf08      	it	eq
 8000ee6:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000eea:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000eee:	fabc f28c 	clz	r2, ip
 8000ef2:	3a08      	subs	r2, #8
 8000ef4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000ef8:	db10      	blt.n	8000f1c <__aeabi_l2f+0x5c>
 8000efa:	fa01 fc02 	lsl.w	ip, r1, r2
 8000efe:	4463      	add	r3, ip
 8000f00:	fa00 fc02 	lsl.w	ip, r0, r2
 8000f04:	f1c2 0220 	rsb	r2, r2, #32
 8000f08:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000f0c:	fa20 f202 	lsr.w	r2, r0, r2
 8000f10:	eb43 0002 	adc.w	r0, r3, r2
 8000f14:	bf08      	it	eq
 8000f16:	f020 0001 	biceq.w	r0, r0, #1
 8000f1a:	4770      	bx	lr
 8000f1c:	f102 0220 	add.w	r2, r2, #32
 8000f20:	fa01 fc02 	lsl.w	ip, r1, r2
 8000f24:	f1c2 0220 	rsb	r2, r2, #32
 8000f28:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000f2c:	fa21 f202 	lsr.w	r2, r1, r2
 8000f30:	eb43 0002 	adc.w	r0, r3, r2
 8000f34:	bf08      	it	eq
 8000f36:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000f3a:	4770      	bx	lr

08000f3c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000f3c:	b580      	push	{r7, lr}
 8000f3e:	af00      	add	r7, sp, #0

	MX_ADC1_Init();
 8000f40:	f000 f832 	bl	8000fa8 <MX_ADC1_Init>
  while (1)
     {
       /* USER CODE END WHILE */

   	  // HAL_ADC_PollForConversion(&hadc1, 100);
	  ADC1->CR2|=ADC_CR2_SWSTART; //start adc conversion
 8000f44:	4b13      	ldr	r3, [pc, #76]	@ (8000f94 <main+0x58>)
 8000f46:	689b      	ldr	r3, [r3, #8]
 8000f48:	4a12      	ldr	r2, [pc, #72]	@ (8000f94 <main+0x58>)
 8000f4a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000f4e:	6093      	str	r3, [r2, #8]
	  //wait for the end of conversion
	  while(!((ADC1->SR)&ADC_SR_EOC)){;}
 8000f50:	bf00      	nop
 8000f52:	4b10      	ldr	r3, [pc, #64]	@ (8000f94 <main+0x58>)
 8000f54:	681b      	ldr	r3, [r3, #0]
 8000f56:	f003 0302 	and.w	r3, r3, #2
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d0f9      	beq.n	8000f52 <main+0x16>

   	  number_of_steps = HAL_ADC_GetValue(&hadc1);
 8000f5e:	480e      	ldr	r0, [pc, #56]	@ (8000f98 <main+0x5c>)
 8000f60:	f000 fa5c 	bl	800141c <HAL_ADC_GetValue>
 8000f64:	4603      	mov	r3, r0
 8000f66:	b29a      	uxth	r2, r3
 8000f68:	4b0c      	ldr	r3, [pc, #48]	@ (8000f9c <main+0x60>)
 8000f6a:	801a      	strh	r2, [r3, #0]
   	  input_voltage = number_of_steps * kStepSize;
 8000f6c:	4b0b      	ldr	r3, [pc, #44]	@ (8000f9c <main+0x60>)
 8000f6e:	881b      	ldrh	r3, [r3, #0]
 8000f70:	4618      	mov	r0, r3
 8000f72:	f7ff ff8f 	bl	8000e94 <__aeabi_i2f>
 8000f76:	4603      	mov	r3, r0
 8000f78:	4a09      	ldr	r2, [pc, #36]	@ (8000fa0 <main+0x64>)
 8000f7a:	4611      	mov	r1, r2
 8000f7c:	4618      	mov	r0, r3
 8000f7e:	f7ff f987 	bl	8000290 <__aeabi_fmul>
 8000f82:	4603      	mov	r3, r0
 8000f84:	461a      	mov	r2, r3
 8000f86:	4b07      	ldr	r3, [pc, #28]	@ (8000fa4 <main+0x68>)
 8000f88:	601a      	str	r2, [r3, #0]

   	  delayMs(10);
 8000f8a:	200a      	movs	r0, #10
 8000f8c:	f000 f82c 	bl	8000fe8 <delayMs>
	  ADC1->CR2|=ADC_CR2_SWSTART; //start adc conversion
 8000f90:	e7d8      	b.n	8000f44 <main+0x8>
 8000f92:	bf00      	nop
 8000f94:	40012000 	.word	0x40012000
 8000f98:	200001ec 	.word	0x200001ec
 8000f9c:	2000027c 	.word	0x2000027c
 8000fa0:	3a533333 	.word	0x3a533333
 8000fa4:	20000280 	.word	0x20000280

08000fa8 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 2 */

	RCC->AHB1ENR|=RCC_AHB1ENR_GPIOAEN; //enable gpio a clock
 8000fac:	4b0b      	ldr	r3, [pc, #44]	@ (8000fdc <MX_ADC1_Init+0x34>)
 8000fae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000fb0:	4a0a      	ldr	r2, [pc, #40]	@ (8000fdc <MX_ADC1_Init+0x34>)
 8000fb2:	f043 0301 	orr.w	r3, r3, #1
 8000fb6:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->APB2ENR|=RCC_APB2ENR_ADC1EN; //enable adc clock
 8000fb8:	4b08      	ldr	r3, [pc, #32]	@ (8000fdc <MX_ADC1_Init+0x34>)
 8000fba:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000fbc:	4a07      	ldr	r2, [pc, #28]	@ (8000fdc <MX_ADC1_Init+0x34>)
 8000fbe:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000fc2:	6453      	str	r3, [r2, #68]	@ 0x44
	GPIOA->MODER|=GPIO_MODER_MODER1;  //set the PA1 to analog mode
 8000fc4:	4b06      	ldr	r3, [pc, #24]	@ (8000fe0 <MX_ADC1_Init+0x38>)
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	4a05      	ldr	r2, [pc, #20]	@ (8000fe0 <MX_ADC1_Init+0x38>)
 8000fca:	f043 030c 	orr.w	r3, r3, #12
 8000fce:	6013      	str	r3, [r2, #0]
	// ADC1->CR2=0; //disable the adc
	// ADC1->SQR3|=1;
	// ADC1->CR2|=1; //enable the adc
	HAL_ADC_Start(&hadc1);
 8000fd0:	4804      	ldr	r0, [pc, #16]	@ (8000fe4 <MX_ADC1_Init+0x3c>)
 8000fd2:	f000 f971 	bl	80012b8 <HAL_ADC_Start>

  /* USER CODE END ADC1_Init 2 */

}
 8000fd6:	bf00      	nop
 8000fd8:	bd80      	pop	{r7, pc}
 8000fda:	bf00      	nop
 8000fdc:	40023800 	.word	0x40023800
 8000fe0:	40020000 	.word	0x40020000
 8000fe4:	200001ec 	.word	0x200001ec

08000fe8 <delayMs>:


void delayMs(int delay)
{
 8000fe8:	b480      	push	{r7}
 8000fea:	b085      	sub	sp, #20
 8000fec:	af00      	add	r7, sp, #0
 8000fee:	6078      	str	r0, [r7, #4]
	int i;
	for(; delay>0 ;delay--)
 8000ff0:	e00d      	b.n	800100e <delayMs+0x26>
	{
		for(i =0; i<3195;i++);
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	60fb      	str	r3, [r7, #12]
 8000ff6:	e002      	b.n	8000ffe <delayMs+0x16>
 8000ff8:	68fb      	ldr	r3, [r7, #12]
 8000ffa:	3301      	adds	r3, #1
 8000ffc:	60fb      	str	r3, [r7, #12]
 8000ffe:	68fb      	ldr	r3, [r7, #12]
 8001000:	f640 427a 	movw	r2, #3194	@ 0xc7a
 8001004:	4293      	cmp	r3, r2
 8001006:	ddf7      	ble.n	8000ff8 <delayMs+0x10>
	for(; delay>0 ;delay--)
 8001008:	687b      	ldr	r3, [r7, #4]
 800100a:	3b01      	subs	r3, #1
 800100c:	607b      	str	r3, [r7, #4]
 800100e:	687b      	ldr	r3, [r7, #4]
 8001010:	2b00      	cmp	r3, #0
 8001012:	dcee      	bgt.n	8000ff2 <delayMs+0xa>
	}
}
 8001014:	bf00      	nop
 8001016:	bf00      	nop
 8001018:	3714      	adds	r7, #20
 800101a:	46bd      	mov	sp, r7
 800101c:	bc80      	pop	{r7}
 800101e:	4770      	bx	lr

08001020 <__io_putchar>:
  * @brief  Retargets the C library printf function to the USART.
  *   None
  * @retval None
  */
PUTCHAR_PROTOTYPE
{
 8001020:	b580      	push	{r7, lr}
 8001022:	b082      	sub	sp, #8
 8001024:	af00      	add	r7, sp, #0
 8001026:	6078      	str	r0, [r7, #4]
  /* Place your implementation of fputc here */
  /* e.g. write a character to the USART1 and Loop until the end of transmission */
  HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, 0xFFFF);
 8001028:	1d39      	adds	r1, r7, #4
 800102a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800102e:	2201      	movs	r2, #1
 8001030:	4803      	ldr	r0, [pc, #12]	@ (8001040 <__io_putchar+0x20>)
 8001032:	f000 f9ff 	bl	8001434 <HAL_UART_Transmit>

  return ch;
 8001036:	687b      	ldr	r3, [r7, #4]
}
 8001038:	4618      	mov	r0, r3
 800103a:	3708      	adds	r7, #8
 800103c:	46bd      	mov	sp, r7
 800103e:	bd80      	pop	{r7, pc}
 8001040:	20000234 	.word	0x20000234

08001044 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001044:	b480      	push	{r7}
 8001046:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001048:	bf00      	nop
 800104a:	e7fd      	b.n	8001048 <NMI_Handler+0x4>

0800104c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800104c:	b480      	push	{r7}
 800104e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001050:	bf00      	nop
 8001052:	e7fd      	b.n	8001050 <HardFault_Handler+0x4>

08001054 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001054:	b480      	push	{r7}
 8001056:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001058:	bf00      	nop
 800105a:	e7fd      	b.n	8001058 <MemManage_Handler+0x4>

0800105c <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800105c:	b480      	push	{r7}
 800105e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001060:	bf00      	nop
 8001062:	e7fd      	b.n	8001060 <BusFault_Handler+0x4>

08001064 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001064:	b480      	push	{r7}
 8001066:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001068:	bf00      	nop
 800106a:	e7fd      	b.n	8001068 <UsageFault_Handler+0x4>

0800106c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800106c:	b480      	push	{r7}
 800106e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001070:	bf00      	nop
 8001072:	46bd      	mov	sp, r7
 8001074:	bc80      	pop	{r7}
 8001076:	4770      	bx	lr

08001078 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001078:	b480      	push	{r7}
 800107a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800107c:	bf00      	nop
 800107e:	46bd      	mov	sp, r7
 8001080:	bc80      	pop	{r7}
 8001082:	4770      	bx	lr

08001084 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001084:	b480      	push	{r7}
 8001086:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001088:	bf00      	nop
 800108a:	46bd      	mov	sp, r7
 800108c:	bc80      	pop	{r7}
 800108e:	4770      	bx	lr

08001090 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001090:	b580      	push	{r7, lr}
 8001092:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001094:	f000 f8f4 	bl	8001280 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001098:	bf00      	nop
 800109a:	bd80      	pop	{r7, pc}

0800109c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800109c:	b480      	push	{r7}
 800109e:	af00      	add	r7, sp, #0
  return 1;
 80010a0:	2301      	movs	r3, #1
}
 80010a2:	4618      	mov	r0, r3
 80010a4:	46bd      	mov	sp, r7
 80010a6:	bc80      	pop	{r7}
 80010a8:	4770      	bx	lr

080010aa <_kill>:

int _kill(int pid, int sig)
{
 80010aa:	b580      	push	{r7, lr}
 80010ac:	b082      	sub	sp, #8
 80010ae:	af00      	add	r7, sp, #0
 80010b0:	6078      	str	r0, [r7, #4]
 80010b2:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80010b4:	f001 f8b4 	bl	8002220 <__errno>
 80010b8:	4603      	mov	r3, r0
 80010ba:	2216      	movs	r2, #22
 80010bc:	601a      	str	r2, [r3, #0]
  return -1;
 80010be:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80010c2:	4618      	mov	r0, r3
 80010c4:	3708      	adds	r7, #8
 80010c6:	46bd      	mov	sp, r7
 80010c8:	bd80      	pop	{r7, pc}

080010ca <_exit>:

void _exit (int status)
{
 80010ca:	b580      	push	{r7, lr}
 80010cc:	b082      	sub	sp, #8
 80010ce:	af00      	add	r7, sp, #0
 80010d0:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80010d2:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80010d6:	6878      	ldr	r0, [r7, #4]
 80010d8:	f7ff ffe7 	bl	80010aa <_kill>
  while (1) {}    /* Make sure we hang here */
 80010dc:	bf00      	nop
 80010de:	e7fd      	b.n	80010dc <_exit+0x12>

080010e0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80010e0:	b580      	push	{r7, lr}
 80010e2:	b086      	sub	sp, #24
 80010e4:	af00      	add	r7, sp, #0
 80010e6:	60f8      	str	r0, [r7, #12]
 80010e8:	60b9      	str	r1, [r7, #8]
 80010ea:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010ec:	2300      	movs	r3, #0
 80010ee:	617b      	str	r3, [r7, #20]
 80010f0:	e00a      	b.n	8001108 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80010f2:	f3af 8000 	nop.w
 80010f6:	4601      	mov	r1, r0
 80010f8:	68bb      	ldr	r3, [r7, #8]
 80010fa:	1c5a      	adds	r2, r3, #1
 80010fc:	60ba      	str	r2, [r7, #8]
 80010fe:	b2ca      	uxtb	r2, r1
 8001100:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001102:	697b      	ldr	r3, [r7, #20]
 8001104:	3301      	adds	r3, #1
 8001106:	617b      	str	r3, [r7, #20]
 8001108:	697a      	ldr	r2, [r7, #20]
 800110a:	687b      	ldr	r3, [r7, #4]
 800110c:	429a      	cmp	r2, r3
 800110e:	dbf0      	blt.n	80010f2 <_read+0x12>
  }

  return len;
 8001110:	687b      	ldr	r3, [r7, #4]
}
 8001112:	4618      	mov	r0, r3
 8001114:	3718      	adds	r7, #24
 8001116:	46bd      	mov	sp, r7
 8001118:	bd80      	pop	{r7, pc}

0800111a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800111a:	b580      	push	{r7, lr}
 800111c:	b086      	sub	sp, #24
 800111e:	af00      	add	r7, sp, #0
 8001120:	60f8      	str	r0, [r7, #12]
 8001122:	60b9      	str	r1, [r7, #8]
 8001124:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001126:	2300      	movs	r3, #0
 8001128:	617b      	str	r3, [r7, #20]
 800112a:	e009      	b.n	8001140 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800112c:	68bb      	ldr	r3, [r7, #8]
 800112e:	1c5a      	adds	r2, r3, #1
 8001130:	60ba      	str	r2, [r7, #8]
 8001132:	781b      	ldrb	r3, [r3, #0]
 8001134:	4618      	mov	r0, r3
 8001136:	f7ff ff73 	bl	8001020 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800113a:	697b      	ldr	r3, [r7, #20]
 800113c:	3301      	adds	r3, #1
 800113e:	617b      	str	r3, [r7, #20]
 8001140:	697a      	ldr	r2, [r7, #20]
 8001142:	687b      	ldr	r3, [r7, #4]
 8001144:	429a      	cmp	r2, r3
 8001146:	dbf1      	blt.n	800112c <_write+0x12>
  }
  return len;
 8001148:	687b      	ldr	r3, [r7, #4]
}
 800114a:	4618      	mov	r0, r3
 800114c:	3718      	adds	r7, #24
 800114e:	46bd      	mov	sp, r7
 8001150:	bd80      	pop	{r7, pc}

08001152 <_close>:

int _close(int file)
{
 8001152:	b480      	push	{r7}
 8001154:	b083      	sub	sp, #12
 8001156:	af00      	add	r7, sp, #0
 8001158:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800115a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800115e:	4618      	mov	r0, r3
 8001160:	370c      	adds	r7, #12
 8001162:	46bd      	mov	sp, r7
 8001164:	bc80      	pop	{r7}
 8001166:	4770      	bx	lr

08001168 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001168:	b480      	push	{r7}
 800116a:	b083      	sub	sp, #12
 800116c:	af00      	add	r7, sp, #0
 800116e:	6078      	str	r0, [r7, #4]
 8001170:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001172:	683b      	ldr	r3, [r7, #0]
 8001174:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001178:	605a      	str	r2, [r3, #4]
  return 0;
 800117a:	2300      	movs	r3, #0
}
 800117c:	4618      	mov	r0, r3
 800117e:	370c      	adds	r7, #12
 8001180:	46bd      	mov	sp, r7
 8001182:	bc80      	pop	{r7}
 8001184:	4770      	bx	lr

08001186 <_isatty>:

int _isatty(int file)
{
 8001186:	b480      	push	{r7}
 8001188:	b083      	sub	sp, #12
 800118a:	af00      	add	r7, sp, #0
 800118c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800118e:	2301      	movs	r3, #1
}
 8001190:	4618      	mov	r0, r3
 8001192:	370c      	adds	r7, #12
 8001194:	46bd      	mov	sp, r7
 8001196:	bc80      	pop	{r7}
 8001198:	4770      	bx	lr

0800119a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800119a:	b480      	push	{r7}
 800119c:	b085      	sub	sp, #20
 800119e:	af00      	add	r7, sp, #0
 80011a0:	60f8      	str	r0, [r7, #12]
 80011a2:	60b9      	str	r1, [r7, #8]
 80011a4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80011a6:	2300      	movs	r3, #0
}
 80011a8:	4618      	mov	r0, r3
 80011aa:	3714      	adds	r7, #20
 80011ac:	46bd      	mov	sp, r7
 80011ae:	bc80      	pop	{r7}
 80011b0:	4770      	bx	lr
	...

080011b4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80011b4:	b580      	push	{r7, lr}
 80011b6:	b086      	sub	sp, #24
 80011b8:	af00      	add	r7, sp, #0
 80011ba:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80011bc:	4a14      	ldr	r2, [pc, #80]	@ (8001210 <_sbrk+0x5c>)
 80011be:	4b15      	ldr	r3, [pc, #84]	@ (8001214 <_sbrk+0x60>)
 80011c0:	1ad3      	subs	r3, r2, r3
 80011c2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80011c4:	697b      	ldr	r3, [r7, #20]
 80011c6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80011c8:	4b13      	ldr	r3, [pc, #76]	@ (8001218 <_sbrk+0x64>)
 80011ca:	681b      	ldr	r3, [r3, #0]
 80011cc:	2b00      	cmp	r3, #0
 80011ce:	d102      	bne.n	80011d6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80011d0:	4b11      	ldr	r3, [pc, #68]	@ (8001218 <_sbrk+0x64>)
 80011d2:	4a12      	ldr	r2, [pc, #72]	@ (800121c <_sbrk+0x68>)
 80011d4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80011d6:	4b10      	ldr	r3, [pc, #64]	@ (8001218 <_sbrk+0x64>)
 80011d8:	681a      	ldr	r2, [r3, #0]
 80011da:	687b      	ldr	r3, [r7, #4]
 80011dc:	4413      	add	r3, r2
 80011de:	693a      	ldr	r2, [r7, #16]
 80011e0:	429a      	cmp	r2, r3
 80011e2:	d207      	bcs.n	80011f4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80011e4:	f001 f81c 	bl	8002220 <__errno>
 80011e8:	4603      	mov	r3, r0
 80011ea:	220c      	movs	r2, #12
 80011ec:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80011ee:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80011f2:	e009      	b.n	8001208 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80011f4:	4b08      	ldr	r3, [pc, #32]	@ (8001218 <_sbrk+0x64>)
 80011f6:	681b      	ldr	r3, [r3, #0]
 80011f8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80011fa:	4b07      	ldr	r3, [pc, #28]	@ (8001218 <_sbrk+0x64>)
 80011fc:	681a      	ldr	r2, [r3, #0]
 80011fe:	687b      	ldr	r3, [r7, #4]
 8001200:	4413      	add	r3, r2
 8001202:	4a05      	ldr	r2, [pc, #20]	@ (8001218 <_sbrk+0x64>)
 8001204:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001206:	68fb      	ldr	r3, [r7, #12]
}
 8001208:	4618      	mov	r0, r3
 800120a:	3718      	adds	r7, #24
 800120c:	46bd      	mov	sp, r7
 800120e:	bd80      	pop	{r7, pc}
 8001210:	20020000 	.word	0x20020000
 8001214:	00000400 	.word	0x00000400
 8001218:	20000284 	.word	0x20000284
 800121c:	200003d8 	.word	0x200003d8

08001220 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001220:	b480      	push	{r7}
 8001222:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001224:	bf00      	nop
 8001226:	46bd      	mov	sp, r7
 8001228:	bc80      	pop	{r7}
 800122a:	4770      	bx	lr

0800122c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 800122c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001264 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8001230:	f7ff fff6 	bl	8001220 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001234:	480c      	ldr	r0, [pc, #48]	@ (8001268 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001236:	490d      	ldr	r1, [pc, #52]	@ (800126c <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001238:	4a0d      	ldr	r2, [pc, #52]	@ (8001270 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800123a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800123c:	e002      	b.n	8001244 <LoopCopyDataInit>

0800123e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800123e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001240:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001242:	3304      	adds	r3, #4

08001244 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001244:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001246:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001248:	d3f9      	bcc.n	800123e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800124a:	4a0a      	ldr	r2, [pc, #40]	@ (8001274 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 800124c:	4c0a      	ldr	r4, [pc, #40]	@ (8001278 <LoopFillZerobss+0x22>)
  movs r3, #0
 800124e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001250:	e001      	b.n	8001256 <LoopFillZerobss>

08001252 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001252:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001254:	3204      	adds	r2, #4

08001256 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001256:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001258:	d3fb      	bcc.n	8001252 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800125a:	f000 ffe7 	bl	800222c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800125e:	f7ff fe6d 	bl	8000f3c <main>
  bx  lr    
 8001262:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8001264:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001268:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800126c:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8001270:	08004350 	.word	0x08004350
  ldr r2, =_sbss
 8001274:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8001278:	200003d8 	.word	0x200003d8

0800127c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800127c:	e7fe      	b.n	800127c <ADC_IRQHandler>
	...

08001280 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001280:	b480      	push	{r7}
 8001282:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001284:	4b05      	ldr	r3, [pc, #20]	@ (800129c <HAL_IncTick+0x1c>)
 8001286:	781b      	ldrb	r3, [r3, #0]
 8001288:	461a      	mov	r2, r3
 800128a:	4b05      	ldr	r3, [pc, #20]	@ (80012a0 <HAL_IncTick+0x20>)
 800128c:	681b      	ldr	r3, [r3, #0]
 800128e:	4413      	add	r3, r2
 8001290:	4a03      	ldr	r2, [pc, #12]	@ (80012a0 <HAL_IncTick+0x20>)
 8001292:	6013      	str	r3, [r2, #0]
}
 8001294:	bf00      	nop
 8001296:	46bd      	mov	sp, r7
 8001298:	bc80      	pop	{r7}
 800129a:	4770      	bx	lr
 800129c:	20000004 	.word	0x20000004
 80012a0:	20000288 	.word	0x20000288

080012a4 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80012a4:	b480      	push	{r7}
 80012a6:	af00      	add	r7, sp, #0
  return uwTick;
 80012a8:	4b02      	ldr	r3, [pc, #8]	@ (80012b4 <HAL_GetTick+0x10>)
 80012aa:	681b      	ldr	r3, [r3, #0]
}
 80012ac:	4618      	mov	r0, r3
 80012ae:	46bd      	mov	sp, r7
 80012b0:	bc80      	pop	{r7}
 80012b2:	4770      	bx	lr
 80012b4:	20000288 	.word	0x20000288

080012b8 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
{
 80012b8:	b480      	push	{r7}
 80012ba:	b085      	sub	sp, #20
 80012bc:	af00      	add	r7, sp, #0
 80012be:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 80012c0:	2300      	movs	r3, #0
 80012c2:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 80012c4:	687b      	ldr	r3, [r7, #4]
 80012c6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80012ca:	2b01      	cmp	r3, #1
 80012cc:	d101      	bne.n	80012d2 <HAL_ADC_Start+0x1a>
 80012ce:	2302      	movs	r3, #2
 80012d0:	e097      	b.n	8001402 <HAL_ADC_Start+0x14a>
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	2201      	movs	r2, #1
 80012d6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80012da:	687b      	ldr	r3, [r7, #4]
 80012dc:	681b      	ldr	r3, [r3, #0]
 80012de:	689b      	ldr	r3, [r3, #8]
 80012e0:	f003 0301 	and.w	r3, r3, #1
 80012e4:	2b01      	cmp	r3, #1
 80012e6:	d018      	beq.n	800131a <HAL_ADC_Start+0x62>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	681b      	ldr	r3, [r3, #0]
 80012ec:	689a      	ldr	r2, [r3, #8]
 80012ee:	687b      	ldr	r3, [r7, #4]
 80012f0:	681b      	ldr	r3, [r3, #0]
 80012f2:	f042 0201 	orr.w	r2, r2, #1
 80012f6:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80012f8:	4b44      	ldr	r3, [pc, #272]	@ (800140c <HAL_ADC_Start+0x154>)
 80012fa:	681b      	ldr	r3, [r3, #0]
 80012fc:	4a44      	ldr	r2, [pc, #272]	@ (8001410 <HAL_ADC_Start+0x158>)
 80012fe:	fba2 2303 	umull	r2, r3, r2, r3
 8001302:	0c9a      	lsrs	r2, r3, #18
 8001304:	4613      	mov	r3, r2
 8001306:	005b      	lsls	r3, r3, #1
 8001308:	4413      	add	r3, r2
 800130a:	60bb      	str	r3, [r7, #8]
    while (counter != 0U)
 800130c:	e002      	b.n	8001314 <HAL_ADC_Start+0x5c>
    {
      counter--;
 800130e:	68bb      	ldr	r3, [r7, #8]
 8001310:	3b01      	subs	r3, #1
 8001312:	60bb      	str	r3, [r7, #8]
    while (counter != 0U)
 8001314:	68bb      	ldr	r3, [r7, #8]
 8001316:	2b00      	cmp	r3, #0
 8001318:	d1f9      	bne.n	800130e <HAL_ADC_Start+0x56>
    }
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	689b      	ldr	r3, [r3, #8]
 8001320:	f003 0301 	and.w	r3, r3, #1
 8001324:	2b01      	cmp	r3, #1
 8001326:	d15f      	bne.n	80013e8 <HAL_ADC_Start+0x130>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8001328:	687b      	ldr	r3, [r7, #4]
 800132a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800132c:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8001330:	f023 0301 	bic.w	r3, r3, #1
 8001334:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001338:	687b      	ldr	r3, [r7, #4]
 800133a:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	685b      	ldr	r3, [r3, #4]
 8001342:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001346:	2b00      	cmp	r3, #0
 8001348:	d007      	beq.n	800135a <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800134e:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8001352:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800135a:	687b      	ldr	r3, [r7, #4]
 800135c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800135e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001362:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001366:	d106      	bne.n	8001376 <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800136c:	f023 0206 	bic.w	r2, r3, #6
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	645a      	str	r2, [r3, #68]	@ 0x44
 8001374:	e002      	b.n	800137c <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	2200      	movs	r2, #0
 800137a:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	2200      	movs	r2, #0
 8001380:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8001384:	4b23      	ldr	r3, [pc, #140]	@ (8001414 <HAL_ADC_Start+0x15c>)
 8001386:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8001388:	687b      	ldr	r3, [r7, #4]
 800138a:	681b      	ldr	r3, [r3, #0]
 800138c:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8001390:	601a      	str	r2, [r3, #0]

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8001392:	68fb      	ldr	r3, [r7, #12]
 8001394:	685b      	ldr	r3, [r3, #4]
 8001396:	f003 031f 	and.w	r3, r3, #31
 800139a:	2b00      	cmp	r3, #0
 800139c:	d10f      	bne.n	80013be <HAL_ADC_Start+0x106>
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 800139e:	687b      	ldr	r3, [r7, #4]
 80013a0:	681b      	ldr	r3, [r3, #0]
 80013a2:	689b      	ldr	r3, [r3, #8]
 80013a4:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	d129      	bne.n	8001400 <HAL_ADC_Start+0x148>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	681b      	ldr	r3, [r3, #0]
 80013b0:	689a      	ldr	r2, [r3, #8]
 80013b2:	687b      	ldr	r3, [r7, #4]
 80013b4:	681b      	ldr	r3, [r3, #0]
 80013b6:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80013ba:	609a      	str	r2, [r3, #8]
 80013bc:	e020      	b.n	8001400 <HAL_ADC_Start+0x148>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 80013be:	687b      	ldr	r3, [r7, #4]
 80013c0:	681b      	ldr	r3, [r3, #0]
 80013c2:	4a15      	ldr	r2, [pc, #84]	@ (8001418 <HAL_ADC_Start+0x160>)
 80013c4:	4293      	cmp	r3, r2
 80013c6:	d11b      	bne.n	8001400 <HAL_ADC_Start+0x148>
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	681b      	ldr	r3, [r3, #0]
 80013cc:	689b      	ldr	r3, [r3, #8]
 80013ce:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	d114      	bne.n	8001400 <HAL_ADC_Start+0x148>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 80013d6:	687b      	ldr	r3, [r7, #4]
 80013d8:	681b      	ldr	r3, [r3, #0]
 80013da:	689a      	ldr	r2, [r3, #8]
 80013dc:	687b      	ldr	r3, [r7, #4]
 80013de:	681b      	ldr	r3, [r3, #0]
 80013e0:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80013e4:	609a      	str	r2, [r3, #8]
 80013e6:	e00b      	b.n	8001400 <HAL_ADC_Start+0x148>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 80013e8:	687b      	ldr	r3, [r7, #4]
 80013ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80013ec:	f043 0210 	orr.w	r2, r3, #16
 80013f0:	687b      	ldr	r3, [r7, #4]
 80013f2:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 80013f4:	687b      	ldr	r3, [r7, #4]
 80013f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80013f8:	f043 0201 	orr.w	r2, r3, #1
 80013fc:	687b      	ldr	r3, [r7, #4]
 80013fe:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 8001400:	2300      	movs	r3, #0
}
 8001402:	4618      	mov	r0, r3
 8001404:	3714      	adds	r7, #20
 8001406:	46bd      	mov	sp, r7
 8001408:	bc80      	pop	{r7}
 800140a:	4770      	bx	lr
 800140c:	20000000 	.word	0x20000000
 8001410:	431bde83 	.word	0x431bde83
 8001414:	40012300 	.word	0x40012300
 8001418:	40012000 	.word	0x40012000

0800141c <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
{
 800141c:	b480      	push	{r7}
 800141e:	b083      	sub	sp, #12
 8001420:	af00      	add	r7, sp, #0
 8001422:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */
  return hadc->Instance->DR;
 8001424:	687b      	ldr	r3, [r7, #4]
 8001426:	681b      	ldr	r3, [r3, #0]
 8001428:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
}
 800142a:	4618      	mov	r0, r3
 800142c:	370c      	adds	r7, #12
 800142e:	46bd      	mov	sp, r7
 8001430:	bc80      	pop	{r7}
 8001432:	4770      	bx	lr

08001434 <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8001434:	b580      	push	{r7, lr}
 8001436:	b08a      	sub	sp, #40	@ 0x28
 8001438:	af02      	add	r7, sp, #8
 800143a:	60f8      	str	r0, [r7, #12]
 800143c:	60b9      	str	r1, [r7, #8]
 800143e:	603b      	str	r3, [r7, #0]
 8001440:	4613      	mov	r3, r2
 8001442:	80fb      	strh	r3, [r7, #6]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart = 0U;
 8001444:	2300      	movs	r3, #0
 8001446:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8001448:	68fb      	ldr	r3, [r7, #12]
 800144a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800144e:	b2db      	uxtb	r3, r3
 8001450:	2b20      	cmp	r3, #32
 8001452:	d175      	bne.n	8001540 <HAL_UART_Transmit+0x10c>
  {
    if ((pData == NULL) || (Size == 0U))
 8001454:	68bb      	ldr	r3, [r7, #8]
 8001456:	2b00      	cmp	r3, #0
 8001458:	d002      	beq.n	8001460 <HAL_UART_Transmit+0x2c>
 800145a:	88fb      	ldrh	r3, [r7, #6]
 800145c:	2b00      	cmp	r3, #0
 800145e:	d101      	bne.n	8001464 <HAL_UART_Transmit+0x30>
    {
      return  HAL_ERROR;
 8001460:	2301      	movs	r3, #1
 8001462:	e06e      	b.n	8001542 <HAL_UART_Transmit+0x10e>
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001464:	68fb      	ldr	r3, [r7, #12]
 8001466:	2200      	movs	r2, #0
 8001468:	645a      	str	r2, [r3, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800146a:	68fb      	ldr	r3, [r7, #12]
 800146c:	2221      	movs	r2, #33	@ 0x21
 800146e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8001472:	f7ff ff17 	bl	80012a4 <HAL_GetTick>
 8001476:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 8001478:	68fb      	ldr	r3, [r7, #12]
 800147a:	88fa      	ldrh	r2, [r7, #6]
 800147c:	849a      	strh	r2, [r3, #36]	@ 0x24
    huart->TxXferCount = Size;
 800147e:	68fb      	ldr	r3, [r7, #12]
 8001480:	88fa      	ldrh	r2, [r7, #6]
 8001482:	84da      	strh	r2, [r3, #38]	@ 0x26

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8001484:	68fb      	ldr	r3, [r7, #12]
 8001486:	689b      	ldr	r3, [r3, #8]
 8001488:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800148c:	d108      	bne.n	80014a0 <HAL_UART_Transmit+0x6c>
 800148e:	68fb      	ldr	r3, [r7, #12]
 8001490:	691b      	ldr	r3, [r3, #16]
 8001492:	2b00      	cmp	r3, #0
 8001494:	d104      	bne.n	80014a0 <HAL_UART_Transmit+0x6c>
    {
      pdata8bits  = NULL;
 8001496:	2300      	movs	r3, #0
 8001498:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 800149a:	68bb      	ldr	r3, [r7, #8]
 800149c:	61bb      	str	r3, [r7, #24]
 800149e:	e003      	b.n	80014a8 <HAL_UART_Transmit+0x74>
    }
    else
    {
      pdata8bits  = pData;
 80014a0:	68bb      	ldr	r3, [r7, #8]
 80014a2:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80014a4:	2300      	movs	r3, #0
 80014a6:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 80014a8:	e02e      	b.n	8001508 <HAL_UART_Transmit+0xd4>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80014aa:	683b      	ldr	r3, [r7, #0]
 80014ac:	9300      	str	r3, [sp, #0]
 80014ae:	697b      	ldr	r3, [r7, #20]
 80014b0:	2200      	movs	r2, #0
 80014b2:	2180      	movs	r1, #128	@ 0x80
 80014b4:	68f8      	ldr	r0, [r7, #12]
 80014b6:	f000 f848 	bl	800154a <UART_WaitOnFlagUntilTimeout>
 80014ba:	4603      	mov	r3, r0
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d005      	beq.n	80014cc <HAL_UART_Transmit+0x98>
      {
        huart->gState = HAL_UART_STATE_READY;
 80014c0:	68fb      	ldr	r3, [r7, #12]
 80014c2:	2220      	movs	r2, #32
 80014c4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

        return HAL_TIMEOUT;
 80014c8:	2303      	movs	r3, #3
 80014ca:	e03a      	b.n	8001542 <HAL_UART_Transmit+0x10e>
      }
      if (pdata8bits == NULL)
 80014cc:	69fb      	ldr	r3, [r7, #28]
 80014ce:	2b00      	cmp	r3, #0
 80014d0:	d10b      	bne.n	80014ea <HAL_UART_Transmit+0xb6>
      {
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80014d2:	69bb      	ldr	r3, [r7, #24]
 80014d4:	881b      	ldrh	r3, [r3, #0]
 80014d6:	461a      	mov	r2, r3
 80014d8:	68fb      	ldr	r3, [r7, #12]
 80014da:	681b      	ldr	r3, [r3, #0]
 80014dc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80014e0:	605a      	str	r2, [r3, #4]
        pdata16bits++;
 80014e2:	69bb      	ldr	r3, [r7, #24]
 80014e4:	3302      	adds	r3, #2
 80014e6:	61bb      	str	r3, [r7, #24]
 80014e8:	e007      	b.n	80014fa <HAL_UART_Transmit+0xc6>
      }
      else
      {
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80014ea:	69fb      	ldr	r3, [r7, #28]
 80014ec:	781a      	ldrb	r2, [r3, #0]
 80014ee:	68fb      	ldr	r3, [r7, #12]
 80014f0:	681b      	ldr	r3, [r3, #0]
 80014f2:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 80014f4:	69fb      	ldr	r3, [r7, #28]
 80014f6:	3301      	adds	r3, #1
 80014f8:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 80014fa:	68fb      	ldr	r3, [r7, #12]
 80014fc:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80014fe:	b29b      	uxth	r3, r3
 8001500:	3b01      	subs	r3, #1
 8001502:	b29a      	uxth	r2, r3
 8001504:	68fb      	ldr	r3, [r7, #12]
 8001506:	84da      	strh	r2, [r3, #38]	@ 0x26
    while (huart->TxXferCount > 0U)
 8001508:	68fb      	ldr	r3, [r7, #12]
 800150a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800150c:	b29b      	uxth	r3, r3
 800150e:	2b00      	cmp	r3, #0
 8001510:	d1cb      	bne.n	80014aa <HAL_UART_Transmit+0x76>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8001512:	683b      	ldr	r3, [r7, #0]
 8001514:	9300      	str	r3, [sp, #0]
 8001516:	697b      	ldr	r3, [r7, #20]
 8001518:	2200      	movs	r2, #0
 800151a:	2140      	movs	r1, #64	@ 0x40
 800151c:	68f8      	ldr	r0, [r7, #12]
 800151e:	f000 f814 	bl	800154a <UART_WaitOnFlagUntilTimeout>
 8001522:	4603      	mov	r3, r0
 8001524:	2b00      	cmp	r3, #0
 8001526:	d005      	beq.n	8001534 <HAL_UART_Transmit+0x100>
    {
      huart->gState = HAL_UART_STATE_READY;
 8001528:	68fb      	ldr	r3, [r7, #12]
 800152a:	2220      	movs	r2, #32
 800152c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

      return HAL_TIMEOUT;
 8001530:	2303      	movs	r3, #3
 8001532:	e006      	b.n	8001542 <HAL_UART_Transmit+0x10e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8001534:	68fb      	ldr	r3, [r7, #12]
 8001536:	2220      	movs	r2, #32
 8001538:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    return HAL_OK;
 800153c:	2300      	movs	r3, #0
 800153e:	e000      	b.n	8001542 <HAL_UART_Transmit+0x10e>
  }
  else
  {
    return HAL_BUSY;
 8001540:	2302      	movs	r3, #2
  }
}
 8001542:	4618      	mov	r0, r3
 8001544:	3720      	adds	r7, #32
 8001546:	46bd      	mov	sp, r7
 8001548:	bd80      	pop	{r7, pc}

0800154a <UART_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                                     uint32_t Tickstart, uint32_t Timeout)
{
 800154a:	b580      	push	{r7, lr}
 800154c:	b086      	sub	sp, #24
 800154e:	af00      	add	r7, sp, #0
 8001550:	60f8      	str	r0, [r7, #12]
 8001552:	60b9      	str	r1, [r7, #8]
 8001554:	603b      	str	r3, [r7, #0]
 8001556:	4613      	mov	r3, r2
 8001558:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800155a:	e03b      	b.n	80015d4 <UART_WaitOnFlagUntilTimeout+0x8a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800155c:	6a3b      	ldr	r3, [r7, #32]
 800155e:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8001562:	d037      	beq.n	80015d4 <UART_WaitOnFlagUntilTimeout+0x8a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001564:	f7ff fe9e 	bl	80012a4 <HAL_GetTick>
 8001568:	4602      	mov	r2, r0
 800156a:	683b      	ldr	r3, [r7, #0]
 800156c:	1ad3      	subs	r3, r2, r3
 800156e:	6a3a      	ldr	r2, [r7, #32]
 8001570:	429a      	cmp	r2, r3
 8001572:	d302      	bcc.n	800157a <UART_WaitOnFlagUntilTimeout+0x30>
 8001574:	6a3b      	ldr	r3, [r7, #32]
 8001576:	2b00      	cmp	r3, #0
 8001578:	d101      	bne.n	800157e <UART_WaitOnFlagUntilTimeout+0x34>
      {

        return HAL_TIMEOUT;
 800157a:	2303      	movs	r3, #3
 800157c:	e03a      	b.n	80015f4 <UART_WaitOnFlagUntilTimeout+0xaa>
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 800157e:	68fb      	ldr	r3, [r7, #12]
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	68db      	ldr	r3, [r3, #12]
 8001584:	f003 0304 	and.w	r3, r3, #4
 8001588:	2b00      	cmp	r3, #0
 800158a:	d023      	beq.n	80015d4 <UART_WaitOnFlagUntilTimeout+0x8a>
 800158c:	68bb      	ldr	r3, [r7, #8]
 800158e:	2b80      	cmp	r3, #128	@ 0x80
 8001590:	d020      	beq.n	80015d4 <UART_WaitOnFlagUntilTimeout+0x8a>
 8001592:	68bb      	ldr	r3, [r7, #8]
 8001594:	2b40      	cmp	r3, #64	@ 0x40
 8001596:	d01d      	beq.n	80015d4 <UART_WaitOnFlagUntilTimeout+0x8a>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8001598:	68fb      	ldr	r3, [r7, #12]
 800159a:	681b      	ldr	r3, [r3, #0]
 800159c:	681b      	ldr	r3, [r3, #0]
 800159e:	f003 0308 	and.w	r3, r3, #8
 80015a2:	2b08      	cmp	r3, #8
 80015a4:	d116      	bne.n	80015d4 <UART_WaitOnFlagUntilTimeout+0x8a>
        {
          /* Clear Overrun Error flag*/
          __HAL_UART_CLEAR_OREFLAG(huart);
 80015a6:	2300      	movs	r3, #0
 80015a8:	617b      	str	r3, [r7, #20]
 80015aa:	68fb      	ldr	r3, [r7, #12]
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	681b      	ldr	r3, [r3, #0]
 80015b0:	617b      	str	r3, [r7, #20]
 80015b2:	68fb      	ldr	r3, [r7, #12]
 80015b4:	681b      	ldr	r3, [r3, #0]
 80015b6:	685b      	ldr	r3, [r3, #4]
 80015b8:	617b      	str	r3, [r7, #20]
 80015ba:	697b      	ldr	r3, [r7, #20]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 80015bc:	68f8      	ldr	r0, [r7, #12]
 80015be:	f000 f81d 	bl	80015fc <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_ORE;
 80015c2:	68fb      	ldr	r3, [r7, #12]
 80015c4:	2208      	movs	r2, #8
 80015c6:	645a      	str	r2, [r3, #68]	@ 0x44

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 80015c8:	68fb      	ldr	r3, [r7, #12]
 80015ca:	2200      	movs	r2, #0
 80015cc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

          return HAL_ERROR;
 80015d0:	2301      	movs	r3, #1
 80015d2:	e00f      	b.n	80015f4 <UART_WaitOnFlagUntilTimeout+0xaa>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80015d4:	68fb      	ldr	r3, [r7, #12]
 80015d6:	681b      	ldr	r3, [r3, #0]
 80015d8:	681a      	ldr	r2, [r3, #0]
 80015da:	68bb      	ldr	r3, [r7, #8]
 80015dc:	4013      	ands	r3, r2
 80015de:	68ba      	ldr	r2, [r7, #8]
 80015e0:	429a      	cmp	r2, r3
 80015e2:	bf0c      	ite	eq
 80015e4:	2301      	moveq	r3, #1
 80015e6:	2300      	movne	r3, #0
 80015e8:	b2db      	uxtb	r3, r3
 80015ea:	461a      	mov	r2, r3
 80015ec:	79fb      	ldrb	r3, [r7, #7]
 80015ee:	429a      	cmp	r2, r3
 80015f0:	d0b4      	beq.n	800155c <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80015f2:	2300      	movs	r3, #0
}
 80015f4:	4618      	mov	r0, r3
 80015f6:	3718      	adds	r7, #24
 80015f8:	46bd      	mov	sp, r7
 80015fa:	bd80      	pop	{r7, pc}

080015fc <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 80015fc:	b480      	push	{r7}
 80015fe:	b095      	sub	sp, #84	@ 0x54
 8001600:	af00      	add	r7, sp, #0
 8001602:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	681b      	ldr	r3, [r3, #0]
 8001608:	330c      	adds	r3, #12
 800160a:	637b      	str	r3, [r7, #52]	@ 0x34
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800160c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800160e:	e853 3f00 	ldrex	r3, [r3]
 8001612:	633b      	str	r3, [r7, #48]	@ 0x30
   return(result);
 8001614:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001616:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800161a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800161c:	687b      	ldr	r3, [r7, #4]
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	330c      	adds	r3, #12
 8001622:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8001624:	643a      	str	r2, [r7, #64]	@ 0x40
 8001626:	63fb      	str	r3, [r7, #60]	@ 0x3c
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001628:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800162a:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800162c:	e841 2300 	strex	r3, r2, [r1]
 8001630:	63bb      	str	r3, [r7, #56]	@ 0x38
   return(result);
 8001632:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001634:	2b00      	cmp	r3, #0
 8001636:	d1e5      	bne.n	8001604 <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	3314      	adds	r3, #20
 800163e:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001640:	6a3b      	ldr	r3, [r7, #32]
 8001642:	e853 3f00 	ldrex	r3, [r3]
 8001646:	61fb      	str	r3, [r7, #28]
   return(result);
 8001648:	69fb      	ldr	r3, [r7, #28]
 800164a:	f023 0301 	bic.w	r3, r3, #1
 800164e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	3314      	adds	r3, #20
 8001656:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8001658:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800165a:	62bb      	str	r3, [r7, #40]	@ 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800165c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800165e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001660:	e841 2300 	strex	r3, r2, [r1]
 8001664:	627b      	str	r3, [r7, #36]	@ 0x24
   return(result);
 8001666:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001668:	2b00      	cmp	r3, #0
 800166a:	d1e5      	bne.n	8001638 <UART_EndRxTransfer+0x3c>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800166c:	687b      	ldr	r3, [r7, #4]
 800166e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001670:	2b01      	cmp	r3, #1
 8001672:	d119      	bne.n	80016a8 <UART_EndRxTransfer+0xac>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	681b      	ldr	r3, [r3, #0]
 8001678:	330c      	adds	r3, #12
 800167a:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800167c:	68fb      	ldr	r3, [r7, #12]
 800167e:	e853 3f00 	ldrex	r3, [r3]
 8001682:	60bb      	str	r3, [r7, #8]
   return(result);
 8001684:	68bb      	ldr	r3, [r7, #8]
 8001686:	f023 0310 	bic.w	r3, r3, #16
 800168a:	647b      	str	r3, [r7, #68]	@ 0x44
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	681b      	ldr	r3, [r3, #0]
 8001690:	330c      	adds	r3, #12
 8001692:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8001694:	61ba      	str	r2, [r7, #24]
 8001696:	617b      	str	r3, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001698:	6979      	ldr	r1, [r7, #20]
 800169a:	69ba      	ldr	r2, [r7, #24]
 800169c:	e841 2300 	strex	r3, r2, [r1]
 80016a0:	613b      	str	r3, [r7, #16]
   return(result);
 80016a2:	693b      	ldr	r3, [r7, #16]
 80016a4:	2b00      	cmp	r3, #0
 80016a6:	d1e5      	bne.n	8001674 <UART_EndRxTransfer+0x78>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80016a8:	687b      	ldr	r3, [r7, #4]
 80016aa:	2220      	movs	r2, #32
 80016ac:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80016b0:	687b      	ldr	r3, [r7, #4]
 80016b2:	2200      	movs	r2, #0
 80016b4:	631a      	str	r2, [r3, #48]	@ 0x30
}
 80016b6:	bf00      	nop
 80016b8:	3754      	adds	r7, #84	@ 0x54
 80016ba:	46bd      	mov	sp, r7
 80016bc:	bc80      	pop	{r7}
 80016be:	4770      	bx	lr

080016c0 <__cvt>:
 80016c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80016c4:	b088      	sub	sp, #32
 80016c6:	2b00      	cmp	r3, #0
 80016c8:	461d      	mov	r5, r3
 80016ca:	4614      	mov	r4, r2
 80016cc:	bfbc      	itt	lt
 80016ce:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 80016d2:	4614      	movlt	r4, r2
 80016d4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80016d6:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 80016d8:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 80016dc:	bfb6      	itet	lt
 80016de:	461d      	movlt	r5, r3
 80016e0:	2300      	movge	r3, #0
 80016e2:	232d      	movlt	r3, #45	@ 0x2d
 80016e4:	7013      	strb	r3, [r2, #0]
 80016e6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80016e8:	f023 0820 	bic.w	r8, r3, #32
 80016ec:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80016f0:	d005      	beq.n	80016fe <__cvt+0x3e>
 80016f2:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80016f6:	d100      	bne.n	80016fa <__cvt+0x3a>
 80016f8:	3601      	adds	r6, #1
 80016fa:	2302      	movs	r3, #2
 80016fc:	e000      	b.n	8001700 <__cvt+0x40>
 80016fe:	2303      	movs	r3, #3
 8001700:	aa07      	add	r2, sp, #28
 8001702:	9204      	str	r2, [sp, #16]
 8001704:	aa06      	add	r2, sp, #24
 8001706:	e9cd a202 	strd	sl, r2, [sp, #8]
 800170a:	e9cd 3600 	strd	r3, r6, [sp]
 800170e:	4622      	mov	r2, r4
 8001710:	462b      	mov	r3, r5
 8001712:	f000 fe3d 	bl	8002390 <_dtoa_r>
 8001716:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800171a:	4607      	mov	r7, r0
 800171c:	d119      	bne.n	8001752 <__cvt+0x92>
 800171e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8001720:	07db      	lsls	r3, r3, #31
 8001722:	d50e      	bpl.n	8001742 <__cvt+0x82>
 8001724:	eb00 0906 	add.w	r9, r0, r6
 8001728:	2200      	movs	r2, #0
 800172a:	2300      	movs	r3, #0
 800172c:	4620      	mov	r0, r4
 800172e:	4629      	mov	r1, r5
 8001730:	f7ff fa86 	bl	8000c40 <__aeabi_dcmpeq>
 8001734:	b108      	cbz	r0, 800173a <__cvt+0x7a>
 8001736:	f8cd 901c 	str.w	r9, [sp, #28]
 800173a:	2230      	movs	r2, #48	@ 0x30
 800173c:	9b07      	ldr	r3, [sp, #28]
 800173e:	454b      	cmp	r3, r9
 8001740:	d31e      	bcc.n	8001780 <__cvt+0xc0>
 8001742:	9b07      	ldr	r3, [sp, #28]
 8001744:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8001746:	1bdb      	subs	r3, r3, r7
 8001748:	4638      	mov	r0, r7
 800174a:	6013      	str	r3, [r2, #0]
 800174c:	b008      	add	sp, #32
 800174e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001752:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001756:	eb00 0906 	add.w	r9, r0, r6
 800175a:	d1e5      	bne.n	8001728 <__cvt+0x68>
 800175c:	7803      	ldrb	r3, [r0, #0]
 800175e:	2b30      	cmp	r3, #48	@ 0x30
 8001760:	d10a      	bne.n	8001778 <__cvt+0xb8>
 8001762:	2200      	movs	r2, #0
 8001764:	2300      	movs	r3, #0
 8001766:	4620      	mov	r0, r4
 8001768:	4629      	mov	r1, r5
 800176a:	f7ff fa69 	bl	8000c40 <__aeabi_dcmpeq>
 800176e:	b918      	cbnz	r0, 8001778 <__cvt+0xb8>
 8001770:	f1c6 0601 	rsb	r6, r6, #1
 8001774:	f8ca 6000 	str.w	r6, [sl]
 8001778:	f8da 3000 	ldr.w	r3, [sl]
 800177c:	4499      	add	r9, r3
 800177e:	e7d3      	b.n	8001728 <__cvt+0x68>
 8001780:	1c59      	adds	r1, r3, #1
 8001782:	9107      	str	r1, [sp, #28]
 8001784:	701a      	strb	r2, [r3, #0]
 8001786:	e7d9      	b.n	800173c <__cvt+0x7c>

08001788 <__exponent>:
 8001788:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800178a:	2900      	cmp	r1, #0
 800178c:	bfba      	itte	lt
 800178e:	4249      	neglt	r1, r1
 8001790:	232d      	movlt	r3, #45	@ 0x2d
 8001792:	232b      	movge	r3, #43	@ 0x2b
 8001794:	2909      	cmp	r1, #9
 8001796:	7002      	strb	r2, [r0, #0]
 8001798:	7043      	strb	r3, [r0, #1]
 800179a:	dd29      	ble.n	80017f0 <__exponent+0x68>
 800179c:	f10d 0307 	add.w	r3, sp, #7
 80017a0:	461d      	mov	r5, r3
 80017a2:	270a      	movs	r7, #10
 80017a4:	461a      	mov	r2, r3
 80017a6:	fbb1 f6f7 	udiv	r6, r1, r7
 80017aa:	fb07 1416 	mls	r4, r7, r6, r1
 80017ae:	3430      	adds	r4, #48	@ 0x30
 80017b0:	f802 4c01 	strb.w	r4, [r2, #-1]
 80017b4:	460c      	mov	r4, r1
 80017b6:	2c63      	cmp	r4, #99	@ 0x63
 80017b8:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 80017bc:	4631      	mov	r1, r6
 80017be:	dcf1      	bgt.n	80017a4 <__exponent+0x1c>
 80017c0:	3130      	adds	r1, #48	@ 0x30
 80017c2:	1e94      	subs	r4, r2, #2
 80017c4:	f803 1c01 	strb.w	r1, [r3, #-1]
 80017c8:	1c41      	adds	r1, r0, #1
 80017ca:	4623      	mov	r3, r4
 80017cc:	42ab      	cmp	r3, r5
 80017ce:	d30a      	bcc.n	80017e6 <__exponent+0x5e>
 80017d0:	f10d 0309 	add.w	r3, sp, #9
 80017d4:	1a9b      	subs	r3, r3, r2
 80017d6:	42ac      	cmp	r4, r5
 80017d8:	bf88      	it	hi
 80017da:	2300      	movhi	r3, #0
 80017dc:	3302      	adds	r3, #2
 80017de:	4403      	add	r3, r0
 80017e0:	1a18      	subs	r0, r3, r0
 80017e2:	b003      	add	sp, #12
 80017e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80017e6:	f813 6b01 	ldrb.w	r6, [r3], #1
 80017ea:	f801 6f01 	strb.w	r6, [r1, #1]!
 80017ee:	e7ed      	b.n	80017cc <__exponent+0x44>
 80017f0:	2330      	movs	r3, #48	@ 0x30
 80017f2:	3130      	adds	r1, #48	@ 0x30
 80017f4:	7083      	strb	r3, [r0, #2]
 80017f6:	70c1      	strb	r1, [r0, #3]
 80017f8:	1d03      	adds	r3, r0, #4
 80017fa:	e7f1      	b.n	80017e0 <__exponent+0x58>

080017fc <_printf_float>:
 80017fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001800:	b091      	sub	sp, #68	@ 0x44
 8001802:	460c      	mov	r4, r1
 8001804:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8001808:	4616      	mov	r6, r2
 800180a:	461f      	mov	r7, r3
 800180c:	4605      	mov	r5, r0
 800180e:	f000 fcbd 	bl	800218c <_localeconv_r>
 8001812:	6803      	ldr	r3, [r0, #0]
 8001814:	9308      	str	r3, [sp, #32]
 8001816:	4618      	mov	r0, r3
 8001818:	f7fe fd32 	bl	8000280 <strlen>
 800181c:	2300      	movs	r3, #0
 800181e:	930e      	str	r3, [sp, #56]	@ 0x38
 8001820:	f8d8 3000 	ldr.w	r3, [r8]
 8001824:	9009      	str	r0, [sp, #36]	@ 0x24
 8001826:	3307      	adds	r3, #7
 8001828:	f023 0307 	bic.w	r3, r3, #7
 800182c:	f103 0208 	add.w	r2, r3, #8
 8001830:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001834:	f8d4 b000 	ldr.w	fp, [r4]
 8001838:	f8c8 2000 	str.w	r2, [r8]
 800183c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001840:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001844:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001846:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 800184a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800184e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001852:	4b9d      	ldr	r3, [pc, #628]	@ (8001ac8 <_printf_float+0x2cc>)
 8001854:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001858:	f7ff fa24 	bl	8000ca4 <__aeabi_dcmpun>
 800185c:	bb70      	cbnz	r0, 80018bc <_printf_float+0xc0>
 800185e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001862:	4b99      	ldr	r3, [pc, #612]	@ (8001ac8 <_printf_float+0x2cc>)
 8001864:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001868:	f7ff f9fe 	bl	8000c68 <__aeabi_dcmple>
 800186c:	bb30      	cbnz	r0, 80018bc <_printf_float+0xc0>
 800186e:	2200      	movs	r2, #0
 8001870:	2300      	movs	r3, #0
 8001872:	4640      	mov	r0, r8
 8001874:	4649      	mov	r1, r9
 8001876:	f7ff f9ed 	bl	8000c54 <__aeabi_dcmplt>
 800187a:	b110      	cbz	r0, 8001882 <_printf_float+0x86>
 800187c:	232d      	movs	r3, #45	@ 0x2d
 800187e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001882:	4a92      	ldr	r2, [pc, #584]	@ (8001acc <_printf_float+0x2d0>)
 8001884:	4b92      	ldr	r3, [pc, #584]	@ (8001ad0 <_printf_float+0x2d4>)
 8001886:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800188a:	bf94      	ite	ls
 800188c:	4690      	movls	r8, r2
 800188e:	4698      	movhi	r8, r3
 8001890:	2303      	movs	r3, #3
 8001892:	6123      	str	r3, [r4, #16]
 8001894:	f02b 0304 	bic.w	r3, fp, #4
 8001898:	6023      	str	r3, [r4, #0]
 800189a:	f04f 0900 	mov.w	r9, #0
 800189e:	9700      	str	r7, [sp, #0]
 80018a0:	4633      	mov	r3, r6
 80018a2:	aa0f      	add	r2, sp, #60	@ 0x3c
 80018a4:	4621      	mov	r1, r4
 80018a6:	4628      	mov	r0, r5
 80018a8:	f000 f9d4 	bl	8001c54 <_printf_common>
 80018ac:	3001      	adds	r0, #1
 80018ae:	f040 808f 	bne.w	80019d0 <_printf_float+0x1d4>
 80018b2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80018b6:	b011      	add	sp, #68	@ 0x44
 80018b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80018bc:	4642      	mov	r2, r8
 80018be:	464b      	mov	r3, r9
 80018c0:	4640      	mov	r0, r8
 80018c2:	4649      	mov	r1, r9
 80018c4:	f7ff f9ee 	bl	8000ca4 <__aeabi_dcmpun>
 80018c8:	b140      	cbz	r0, 80018dc <_printf_float+0xe0>
 80018ca:	464b      	mov	r3, r9
 80018cc:	2b00      	cmp	r3, #0
 80018ce:	bfbc      	itt	lt
 80018d0:	232d      	movlt	r3, #45	@ 0x2d
 80018d2:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80018d6:	4a7f      	ldr	r2, [pc, #508]	@ (8001ad4 <_printf_float+0x2d8>)
 80018d8:	4b7f      	ldr	r3, [pc, #508]	@ (8001ad8 <_printf_float+0x2dc>)
 80018da:	e7d4      	b.n	8001886 <_printf_float+0x8a>
 80018dc:	6863      	ldr	r3, [r4, #4]
 80018de:	1c5a      	adds	r2, r3, #1
 80018e0:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 80018e4:	d13f      	bne.n	8001966 <_printf_float+0x16a>
 80018e6:	2306      	movs	r3, #6
 80018e8:	6063      	str	r3, [r4, #4]
 80018ea:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 80018ee:	2200      	movs	r2, #0
 80018f0:	6023      	str	r3, [r4, #0]
 80018f2:	9206      	str	r2, [sp, #24]
 80018f4:	aa0e      	add	r2, sp, #56	@ 0x38
 80018f6:	e9cd a204 	strd	sl, r2, [sp, #16]
 80018fa:	aa0d      	add	r2, sp, #52	@ 0x34
 80018fc:	9203      	str	r2, [sp, #12]
 80018fe:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8001902:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001906:	6863      	ldr	r3, [r4, #4]
 8001908:	9300      	str	r3, [sp, #0]
 800190a:	4642      	mov	r2, r8
 800190c:	464b      	mov	r3, r9
 800190e:	4628      	mov	r0, r5
 8001910:	910a      	str	r1, [sp, #40]	@ 0x28
 8001912:	f7ff fed5 	bl	80016c0 <__cvt>
 8001916:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8001918:	2947      	cmp	r1, #71	@ 0x47
 800191a:	4680      	mov	r8, r0
 800191c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800191e:	d128      	bne.n	8001972 <_printf_float+0x176>
 8001920:	1cc8      	adds	r0, r1, #3
 8001922:	db02      	blt.n	800192a <_printf_float+0x12e>
 8001924:	6863      	ldr	r3, [r4, #4]
 8001926:	4299      	cmp	r1, r3
 8001928:	dd40      	ble.n	80019ac <_printf_float+0x1b0>
 800192a:	f1aa 0a02 	sub.w	sl, sl, #2
 800192e:	fa5f fa8a 	uxtb.w	sl, sl
 8001932:	3901      	subs	r1, #1
 8001934:	4652      	mov	r2, sl
 8001936:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800193a:	910d      	str	r1, [sp, #52]	@ 0x34
 800193c:	f7ff ff24 	bl	8001788 <__exponent>
 8001940:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001942:	1813      	adds	r3, r2, r0
 8001944:	2a01      	cmp	r2, #1
 8001946:	4681      	mov	r9, r0
 8001948:	6123      	str	r3, [r4, #16]
 800194a:	dc02      	bgt.n	8001952 <_printf_float+0x156>
 800194c:	6822      	ldr	r2, [r4, #0]
 800194e:	07d2      	lsls	r2, r2, #31
 8001950:	d501      	bpl.n	8001956 <_printf_float+0x15a>
 8001952:	3301      	adds	r3, #1
 8001954:	6123      	str	r3, [r4, #16]
 8001956:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 800195a:	2b00      	cmp	r3, #0
 800195c:	d09f      	beq.n	800189e <_printf_float+0xa2>
 800195e:	232d      	movs	r3, #45	@ 0x2d
 8001960:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001964:	e79b      	b.n	800189e <_printf_float+0xa2>
 8001966:	2947      	cmp	r1, #71	@ 0x47
 8001968:	d1bf      	bne.n	80018ea <_printf_float+0xee>
 800196a:	2b00      	cmp	r3, #0
 800196c:	d1bd      	bne.n	80018ea <_printf_float+0xee>
 800196e:	2301      	movs	r3, #1
 8001970:	e7ba      	b.n	80018e8 <_printf_float+0xec>
 8001972:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001976:	d9dc      	bls.n	8001932 <_printf_float+0x136>
 8001978:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800197c:	d118      	bne.n	80019b0 <_printf_float+0x1b4>
 800197e:	2900      	cmp	r1, #0
 8001980:	6863      	ldr	r3, [r4, #4]
 8001982:	dd0b      	ble.n	800199c <_printf_float+0x1a0>
 8001984:	6121      	str	r1, [r4, #16]
 8001986:	b913      	cbnz	r3, 800198e <_printf_float+0x192>
 8001988:	6822      	ldr	r2, [r4, #0]
 800198a:	07d0      	lsls	r0, r2, #31
 800198c:	d502      	bpl.n	8001994 <_printf_float+0x198>
 800198e:	3301      	adds	r3, #1
 8001990:	440b      	add	r3, r1
 8001992:	6123      	str	r3, [r4, #16]
 8001994:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001996:	f04f 0900 	mov.w	r9, #0
 800199a:	e7dc      	b.n	8001956 <_printf_float+0x15a>
 800199c:	b913      	cbnz	r3, 80019a4 <_printf_float+0x1a8>
 800199e:	6822      	ldr	r2, [r4, #0]
 80019a0:	07d2      	lsls	r2, r2, #31
 80019a2:	d501      	bpl.n	80019a8 <_printf_float+0x1ac>
 80019a4:	3302      	adds	r3, #2
 80019a6:	e7f4      	b.n	8001992 <_printf_float+0x196>
 80019a8:	2301      	movs	r3, #1
 80019aa:	e7f2      	b.n	8001992 <_printf_float+0x196>
 80019ac:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80019b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80019b2:	4299      	cmp	r1, r3
 80019b4:	db05      	blt.n	80019c2 <_printf_float+0x1c6>
 80019b6:	6823      	ldr	r3, [r4, #0]
 80019b8:	6121      	str	r1, [r4, #16]
 80019ba:	07d8      	lsls	r0, r3, #31
 80019bc:	d5ea      	bpl.n	8001994 <_printf_float+0x198>
 80019be:	1c4b      	adds	r3, r1, #1
 80019c0:	e7e7      	b.n	8001992 <_printf_float+0x196>
 80019c2:	2900      	cmp	r1, #0
 80019c4:	bfd4      	ite	le
 80019c6:	f1c1 0202 	rsble	r2, r1, #2
 80019ca:	2201      	movgt	r2, #1
 80019cc:	4413      	add	r3, r2
 80019ce:	e7e0      	b.n	8001992 <_printf_float+0x196>
 80019d0:	6823      	ldr	r3, [r4, #0]
 80019d2:	055a      	lsls	r2, r3, #21
 80019d4:	d407      	bmi.n	80019e6 <_printf_float+0x1ea>
 80019d6:	6923      	ldr	r3, [r4, #16]
 80019d8:	4642      	mov	r2, r8
 80019da:	4631      	mov	r1, r6
 80019dc:	4628      	mov	r0, r5
 80019de:	47b8      	blx	r7
 80019e0:	3001      	adds	r0, #1
 80019e2:	d12b      	bne.n	8001a3c <_printf_float+0x240>
 80019e4:	e765      	b.n	80018b2 <_printf_float+0xb6>
 80019e6:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80019ea:	f240 80dd 	bls.w	8001ba8 <_printf_float+0x3ac>
 80019ee:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80019f2:	2200      	movs	r2, #0
 80019f4:	2300      	movs	r3, #0
 80019f6:	f7ff f923 	bl	8000c40 <__aeabi_dcmpeq>
 80019fa:	2800      	cmp	r0, #0
 80019fc:	d033      	beq.n	8001a66 <_printf_float+0x26a>
 80019fe:	4a37      	ldr	r2, [pc, #220]	@ (8001adc <_printf_float+0x2e0>)
 8001a00:	2301      	movs	r3, #1
 8001a02:	4631      	mov	r1, r6
 8001a04:	4628      	mov	r0, r5
 8001a06:	47b8      	blx	r7
 8001a08:	3001      	adds	r0, #1
 8001a0a:	f43f af52 	beq.w	80018b2 <_printf_float+0xb6>
 8001a0e:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8001a12:	4543      	cmp	r3, r8
 8001a14:	db02      	blt.n	8001a1c <_printf_float+0x220>
 8001a16:	6823      	ldr	r3, [r4, #0]
 8001a18:	07d8      	lsls	r0, r3, #31
 8001a1a:	d50f      	bpl.n	8001a3c <_printf_float+0x240>
 8001a1c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001a20:	4631      	mov	r1, r6
 8001a22:	4628      	mov	r0, r5
 8001a24:	47b8      	blx	r7
 8001a26:	3001      	adds	r0, #1
 8001a28:	f43f af43 	beq.w	80018b2 <_printf_float+0xb6>
 8001a2c:	f04f 0900 	mov.w	r9, #0
 8001a30:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8001a34:	f104 0a1a 	add.w	sl, r4, #26
 8001a38:	45c8      	cmp	r8, r9
 8001a3a:	dc09      	bgt.n	8001a50 <_printf_float+0x254>
 8001a3c:	6823      	ldr	r3, [r4, #0]
 8001a3e:	079b      	lsls	r3, r3, #30
 8001a40:	f100 8103 	bmi.w	8001c4a <_printf_float+0x44e>
 8001a44:	68e0      	ldr	r0, [r4, #12]
 8001a46:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8001a48:	4298      	cmp	r0, r3
 8001a4a:	bfb8      	it	lt
 8001a4c:	4618      	movlt	r0, r3
 8001a4e:	e732      	b.n	80018b6 <_printf_float+0xba>
 8001a50:	2301      	movs	r3, #1
 8001a52:	4652      	mov	r2, sl
 8001a54:	4631      	mov	r1, r6
 8001a56:	4628      	mov	r0, r5
 8001a58:	47b8      	blx	r7
 8001a5a:	3001      	adds	r0, #1
 8001a5c:	f43f af29 	beq.w	80018b2 <_printf_float+0xb6>
 8001a60:	f109 0901 	add.w	r9, r9, #1
 8001a64:	e7e8      	b.n	8001a38 <_printf_float+0x23c>
 8001a66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	dc39      	bgt.n	8001ae0 <_printf_float+0x2e4>
 8001a6c:	4a1b      	ldr	r2, [pc, #108]	@ (8001adc <_printf_float+0x2e0>)
 8001a6e:	2301      	movs	r3, #1
 8001a70:	4631      	mov	r1, r6
 8001a72:	4628      	mov	r0, r5
 8001a74:	47b8      	blx	r7
 8001a76:	3001      	adds	r0, #1
 8001a78:	f43f af1b 	beq.w	80018b2 <_printf_float+0xb6>
 8001a7c:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8001a80:	ea59 0303 	orrs.w	r3, r9, r3
 8001a84:	d102      	bne.n	8001a8c <_printf_float+0x290>
 8001a86:	6823      	ldr	r3, [r4, #0]
 8001a88:	07d9      	lsls	r1, r3, #31
 8001a8a:	d5d7      	bpl.n	8001a3c <_printf_float+0x240>
 8001a8c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001a90:	4631      	mov	r1, r6
 8001a92:	4628      	mov	r0, r5
 8001a94:	47b8      	blx	r7
 8001a96:	3001      	adds	r0, #1
 8001a98:	f43f af0b 	beq.w	80018b2 <_printf_float+0xb6>
 8001a9c:	f04f 0a00 	mov.w	sl, #0
 8001aa0:	f104 0b1a 	add.w	fp, r4, #26
 8001aa4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001aa6:	425b      	negs	r3, r3
 8001aa8:	4553      	cmp	r3, sl
 8001aaa:	dc01      	bgt.n	8001ab0 <_printf_float+0x2b4>
 8001aac:	464b      	mov	r3, r9
 8001aae:	e793      	b.n	80019d8 <_printf_float+0x1dc>
 8001ab0:	2301      	movs	r3, #1
 8001ab2:	465a      	mov	r2, fp
 8001ab4:	4631      	mov	r1, r6
 8001ab6:	4628      	mov	r0, r5
 8001ab8:	47b8      	blx	r7
 8001aba:	3001      	adds	r0, #1
 8001abc:	f43f aef9 	beq.w	80018b2 <_printf_float+0xb6>
 8001ac0:	f10a 0a01 	add.w	sl, sl, #1
 8001ac4:	e7ee      	b.n	8001aa4 <_printf_float+0x2a8>
 8001ac6:	bf00      	nop
 8001ac8:	7fefffff 	.word	0x7fefffff
 8001acc:	08003fd0 	.word	0x08003fd0
 8001ad0:	08003fd4 	.word	0x08003fd4
 8001ad4:	08003fd8 	.word	0x08003fd8
 8001ad8:	08003fdc 	.word	0x08003fdc
 8001adc:	08003fe0 	.word	0x08003fe0
 8001ae0:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001ae2:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8001ae6:	4553      	cmp	r3, sl
 8001ae8:	bfa8      	it	ge
 8001aea:	4653      	movge	r3, sl
 8001aec:	2b00      	cmp	r3, #0
 8001aee:	4699      	mov	r9, r3
 8001af0:	dc36      	bgt.n	8001b60 <_printf_float+0x364>
 8001af2:	f04f 0b00 	mov.w	fp, #0
 8001af6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001afa:	f104 021a 	add.w	r2, r4, #26
 8001afe:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001b00:	930a      	str	r3, [sp, #40]	@ 0x28
 8001b02:	eba3 0309 	sub.w	r3, r3, r9
 8001b06:	455b      	cmp	r3, fp
 8001b08:	dc31      	bgt.n	8001b6e <_printf_float+0x372>
 8001b0a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001b0c:	459a      	cmp	sl, r3
 8001b0e:	dc3a      	bgt.n	8001b86 <_printf_float+0x38a>
 8001b10:	6823      	ldr	r3, [r4, #0]
 8001b12:	07da      	lsls	r2, r3, #31
 8001b14:	d437      	bmi.n	8001b86 <_printf_float+0x38a>
 8001b16:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001b18:	ebaa 0903 	sub.w	r9, sl, r3
 8001b1c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001b1e:	ebaa 0303 	sub.w	r3, sl, r3
 8001b22:	4599      	cmp	r9, r3
 8001b24:	bfa8      	it	ge
 8001b26:	4699      	movge	r9, r3
 8001b28:	f1b9 0f00 	cmp.w	r9, #0
 8001b2c:	dc33      	bgt.n	8001b96 <_printf_float+0x39a>
 8001b2e:	f04f 0800 	mov.w	r8, #0
 8001b32:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001b36:	f104 0b1a 	add.w	fp, r4, #26
 8001b3a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001b3c:	ebaa 0303 	sub.w	r3, sl, r3
 8001b40:	eba3 0309 	sub.w	r3, r3, r9
 8001b44:	4543      	cmp	r3, r8
 8001b46:	f77f af79 	ble.w	8001a3c <_printf_float+0x240>
 8001b4a:	2301      	movs	r3, #1
 8001b4c:	465a      	mov	r2, fp
 8001b4e:	4631      	mov	r1, r6
 8001b50:	4628      	mov	r0, r5
 8001b52:	47b8      	blx	r7
 8001b54:	3001      	adds	r0, #1
 8001b56:	f43f aeac 	beq.w	80018b2 <_printf_float+0xb6>
 8001b5a:	f108 0801 	add.w	r8, r8, #1
 8001b5e:	e7ec      	b.n	8001b3a <_printf_float+0x33e>
 8001b60:	4642      	mov	r2, r8
 8001b62:	4631      	mov	r1, r6
 8001b64:	4628      	mov	r0, r5
 8001b66:	47b8      	blx	r7
 8001b68:	3001      	adds	r0, #1
 8001b6a:	d1c2      	bne.n	8001af2 <_printf_float+0x2f6>
 8001b6c:	e6a1      	b.n	80018b2 <_printf_float+0xb6>
 8001b6e:	2301      	movs	r3, #1
 8001b70:	4631      	mov	r1, r6
 8001b72:	4628      	mov	r0, r5
 8001b74:	920a      	str	r2, [sp, #40]	@ 0x28
 8001b76:	47b8      	blx	r7
 8001b78:	3001      	adds	r0, #1
 8001b7a:	f43f ae9a 	beq.w	80018b2 <_printf_float+0xb6>
 8001b7e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001b80:	f10b 0b01 	add.w	fp, fp, #1
 8001b84:	e7bb      	b.n	8001afe <_printf_float+0x302>
 8001b86:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001b8a:	4631      	mov	r1, r6
 8001b8c:	4628      	mov	r0, r5
 8001b8e:	47b8      	blx	r7
 8001b90:	3001      	adds	r0, #1
 8001b92:	d1c0      	bne.n	8001b16 <_printf_float+0x31a>
 8001b94:	e68d      	b.n	80018b2 <_printf_float+0xb6>
 8001b96:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001b98:	464b      	mov	r3, r9
 8001b9a:	4442      	add	r2, r8
 8001b9c:	4631      	mov	r1, r6
 8001b9e:	4628      	mov	r0, r5
 8001ba0:	47b8      	blx	r7
 8001ba2:	3001      	adds	r0, #1
 8001ba4:	d1c3      	bne.n	8001b2e <_printf_float+0x332>
 8001ba6:	e684      	b.n	80018b2 <_printf_float+0xb6>
 8001ba8:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8001bac:	f1ba 0f01 	cmp.w	sl, #1
 8001bb0:	dc01      	bgt.n	8001bb6 <_printf_float+0x3ba>
 8001bb2:	07db      	lsls	r3, r3, #31
 8001bb4:	d536      	bpl.n	8001c24 <_printf_float+0x428>
 8001bb6:	2301      	movs	r3, #1
 8001bb8:	4642      	mov	r2, r8
 8001bba:	4631      	mov	r1, r6
 8001bbc:	4628      	mov	r0, r5
 8001bbe:	47b8      	blx	r7
 8001bc0:	3001      	adds	r0, #1
 8001bc2:	f43f ae76 	beq.w	80018b2 <_printf_float+0xb6>
 8001bc6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001bca:	4631      	mov	r1, r6
 8001bcc:	4628      	mov	r0, r5
 8001bce:	47b8      	blx	r7
 8001bd0:	3001      	adds	r0, #1
 8001bd2:	f43f ae6e 	beq.w	80018b2 <_printf_float+0xb6>
 8001bd6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001bda:	2200      	movs	r2, #0
 8001bdc:	2300      	movs	r3, #0
 8001bde:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8001be2:	f7ff f82d 	bl	8000c40 <__aeabi_dcmpeq>
 8001be6:	b9c0      	cbnz	r0, 8001c1a <_printf_float+0x41e>
 8001be8:	4653      	mov	r3, sl
 8001bea:	f108 0201 	add.w	r2, r8, #1
 8001bee:	4631      	mov	r1, r6
 8001bf0:	4628      	mov	r0, r5
 8001bf2:	47b8      	blx	r7
 8001bf4:	3001      	adds	r0, #1
 8001bf6:	d10c      	bne.n	8001c12 <_printf_float+0x416>
 8001bf8:	e65b      	b.n	80018b2 <_printf_float+0xb6>
 8001bfa:	2301      	movs	r3, #1
 8001bfc:	465a      	mov	r2, fp
 8001bfe:	4631      	mov	r1, r6
 8001c00:	4628      	mov	r0, r5
 8001c02:	47b8      	blx	r7
 8001c04:	3001      	adds	r0, #1
 8001c06:	f43f ae54 	beq.w	80018b2 <_printf_float+0xb6>
 8001c0a:	f108 0801 	add.w	r8, r8, #1
 8001c0e:	45d0      	cmp	r8, sl
 8001c10:	dbf3      	blt.n	8001bfa <_printf_float+0x3fe>
 8001c12:	464b      	mov	r3, r9
 8001c14:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001c18:	e6df      	b.n	80019da <_printf_float+0x1de>
 8001c1a:	f04f 0800 	mov.w	r8, #0
 8001c1e:	f104 0b1a 	add.w	fp, r4, #26
 8001c22:	e7f4      	b.n	8001c0e <_printf_float+0x412>
 8001c24:	2301      	movs	r3, #1
 8001c26:	4642      	mov	r2, r8
 8001c28:	e7e1      	b.n	8001bee <_printf_float+0x3f2>
 8001c2a:	2301      	movs	r3, #1
 8001c2c:	464a      	mov	r2, r9
 8001c2e:	4631      	mov	r1, r6
 8001c30:	4628      	mov	r0, r5
 8001c32:	47b8      	blx	r7
 8001c34:	3001      	adds	r0, #1
 8001c36:	f43f ae3c 	beq.w	80018b2 <_printf_float+0xb6>
 8001c3a:	f108 0801 	add.w	r8, r8, #1
 8001c3e:	68e3      	ldr	r3, [r4, #12]
 8001c40:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8001c42:	1a5b      	subs	r3, r3, r1
 8001c44:	4543      	cmp	r3, r8
 8001c46:	dcf0      	bgt.n	8001c2a <_printf_float+0x42e>
 8001c48:	e6fc      	b.n	8001a44 <_printf_float+0x248>
 8001c4a:	f04f 0800 	mov.w	r8, #0
 8001c4e:	f104 0919 	add.w	r9, r4, #25
 8001c52:	e7f4      	b.n	8001c3e <_printf_float+0x442>

08001c54 <_printf_common>:
 8001c54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001c58:	4616      	mov	r6, r2
 8001c5a:	4698      	mov	r8, r3
 8001c5c:	688a      	ldr	r2, [r1, #8]
 8001c5e:	690b      	ldr	r3, [r1, #16]
 8001c60:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001c64:	4293      	cmp	r3, r2
 8001c66:	bfb8      	it	lt
 8001c68:	4613      	movlt	r3, r2
 8001c6a:	6033      	str	r3, [r6, #0]
 8001c6c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001c70:	4607      	mov	r7, r0
 8001c72:	460c      	mov	r4, r1
 8001c74:	b10a      	cbz	r2, 8001c7a <_printf_common+0x26>
 8001c76:	3301      	adds	r3, #1
 8001c78:	6033      	str	r3, [r6, #0]
 8001c7a:	6823      	ldr	r3, [r4, #0]
 8001c7c:	0699      	lsls	r1, r3, #26
 8001c7e:	bf42      	ittt	mi
 8001c80:	6833      	ldrmi	r3, [r6, #0]
 8001c82:	3302      	addmi	r3, #2
 8001c84:	6033      	strmi	r3, [r6, #0]
 8001c86:	6825      	ldr	r5, [r4, #0]
 8001c88:	f015 0506 	ands.w	r5, r5, #6
 8001c8c:	d106      	bne.n	8001c9c <_printf_common+0x48>
 8001c8e:	f104 0a19 	add.w	sl, r4, #25
 8001c92:	68e3      	ldr	r3, [r4, #12]
 8001c94:	6832      	ldr	r2, [r6, #0]
 8001c96:	1a9b      	subs	r3, r3, r2
 8001c98:	42ab      	cmp	r3, r5
 8001c9a:	dc26      	bgt.n	8001cea <_printf_common+0x96>
 8001c9c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001ca0:	6822      	ldr	r2, [r4, #0]
 8001ca2:	3b00      	subs	r3, #0
 8001ca4:	bf18      	it	ne
 8001ca6:	2301      	movne	r3, #1
 8001ca8:	0692      	lsls	r2, r2, #26
 8001caa:	d42b      	bmi.n	8001d04 <_printf_common+0xb0>
 8001cac:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001cb0:	4641      	mov	r1, r8
 8001cb2:	4638      	mov	r0, r7
 8001cb4:	47c8      	blx	r9
 8001cb6:	3001      	adds	r0, #1
 8001cb8:	d01e      	beq.n	8001cf8 <_printf_common+0xa4>
 8001cba:	6823      	ldr	r3, [r4, #0]
 8001cbc:	6922      	ldr	r2, [r4, #16]
 8001cbe:	f003 0306 	and.w	r3, r3, #6
 8001cc2:	2b04      	cmp	r3, #4
 8001cc4:	bf02      	ittt	eq
 8001cc6:	68e5      	ldreq	r5, [r4, #12]
 8001cc8:	6833      	ldreq	r3, [r6, #0]
 8001cca:	1aed      	subeq	r5, r5, r3
 8001ccc:	68a3      	ldr	r3, [r4, #8]
 8001cce:	bf0c      	ite	eq
 8001cd0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001cd4:	2500      	movne	r5, #0
 8001cd6:	4293      	cmp	r3, r2
 8001cd8:	bfc4      	itt	gt
 8001cda:	1a9b      	subgt	r3, r3, r2
 8001cdc:	18ed      	addgt	r5, r5, r3
 8001cde:	2600      	movs	r6, #0
 8001ce0:	341a      	adds	r4, #26
 8001ce2:	42b5      	cmp	r5, r6
 8001ce4:	d11a      	bne.n	8001d1c <_printf_common+0xc8>
 8001ce6:	2000      	movs	r0, #0
 8001ce8:	e008      	b.n	8001cfc <_printf_common+0xa8>
 8001cea:	2301      	movs	r3, #1
 8001cec:	4652      	mov	r2, sl
 8001cee:	4641      	mov	r1, r8
 8001cf0:	4638      	mov	r0, r7
 8001cf2:	47c8      	blx	r9
 8001cf4:	3001      	adds	r0, #1
 8001cf6:	d103      	bne.n	8001d00 <_printf_common+0xac>
 8001cf8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001cfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001d00:	3501      	adds	r5, #1
 8001d02:	e7c6      	b.n	8001c92 <_printf_common+0x3e>
 8001d04:	18e1      	adds	r1, r4, r3
 8001d06:	1c5a      	adds	r2, r3, #1
 8001d08:	2030      	movs	r0, #48	@ 0x30
 8001d0a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001d0e:	4422      	add	r2, r4
 8001d10:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001d14:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001d18:	3302      	adds	r3, #2
 8001d1a:	e7c7      	b.n	8001cac <_printf_common+0x58>
 8001d1c:	2301      	movs	r3, #1
 8001d1e:	4622      	mov	r2, r4
 8001d20:	4641      	mov	r1, r8
 8001d22:	4638      	mov	r0, r7
 8001d24:	47c8      	blx	r9
 8001d26:	3001      	adds	r0, #1
 8001d28:	d0e6      	beq.n	8001cf8 <_printf_common+0xa4>
 8001d2a:	3601      	adds	r6, #1
 8001d2c:	e7d9      	b.n	8001ce2 <_printf_common+0x8e>
	...

08001d30 <_printf_i>:
 8001d30:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001d34:	7e0f      	ldrb	r7, [r1, #24]
 8001d36:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001d38:	2f78      	cmp	r7, #120	@ 0x78
 8001d3a:	4691      	mov	r9, r2
 8001d3c:	4680      	mov	r8, r0
 8001d3e:	460c      	mov	r4, r1
 8001d40:	469a      	mov	sl, r3
 8001d42:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001d46:	d807      	bhi.n	8001d58 <_printf_i+0x28>
 8001d48:	2f62      	cmp	r7, #98	@ 0x62
 8001d4a:	d80a      	bhi.n	8001d62 <_printf_i+0x32>
 8001d4c:	2f00      	cmp	r7, #0
 8001d4e:	f000 80d2 	beq.w	8001ef6 <_printf_i+0x1c6>
 8001d52:	2f58      	cmp	r7, #88	@ 0x58
 8001d54:	f000 80b9 	beq.w	8001eca <_printf_i+0x19a>
 8001d58:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001d5c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001d60:	e03a      	b.n	8001dd8 <_printf_i+0xa8>
 8001d62:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001d66:	2b15      	cmp	r3, #21
 8001d68:	d8f6      	bhi.n	8001d58 <_printf_i+0x28>
 8001d6a:	a101      	add	r1, pc, #4	@ (adr r1, 8001d70 <_printf_i+0x40>)
 8001d6c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001d70:	08001dc9 	.word	0x08001dc9
 8001d74:	08001ddd 	.word	0x08001ddd
 8001d78:	08001d59 	.word	0x08001d59
 8001d7c:	08001d59 	.word	0x08001d59
 8001d80:	08001d59 	.word	0x08001d59
 8001d84:	08001d59 	.word	0x08001d59
 8001d88:	08001ddd 	.word	0x08001ddd
 8001d8c:	08001d59 	.word	0x08001d59
 8001d90:	08001d59 	.word	0x08001d59
 8001d94:	08001d59 	.word	0x08001d59
 8001d98:	08001d59 	.word	0x08001d59
 8001d9c:	08001edd 	.word	0x08001edd
 8001da0:	08001e07 	.word	0x08001e07
 8001da4:	08001e97 	.word	0x08001e97
 8001da8:	08001d59 	.word	0x08001d59
 8001dac:	08001d59 	.word	0x08001d59
 8001db0:	08001eff 	.word	0x08001eff
 8001db4:	08001d59 	.word	0x08001d59
 8001db8:	08001e07 	.word	0x08001e07
 8001dbc:	08001d59 	.word	0x08001d59
 8001dc0:	08001d59 	.word	0x08001d59
 8001dc4:	08001e9f 	.word	0x08001e9f
 8001dc8:	6833      	ldr	r3, [r6, #0]
 8001dca:	1d1a      	adds	r2, r3, #4
 8001dcc:	681b      	ldr	r3, [r3, #0]
 8001dce:	6032      	str	r2, [r6, #0]
 8001dd0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001dd4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001dd8:	2301      	movs	r3, #1
 8001dda:	e09d      	b.n	8001f18 <_printf_i+0x1e8>
 8001ddc:	6833      	ldr	r3, [r6, #0]
 8001dde:	6820      	ldr	r0, [r4, #0]
 8001de0:	1d19      	adds	r1, r3, #4
 8001de2:	6031      	str	r1, [r6, #0]
 8001de4:	0606      	lsls	r6, r0, #24
 8001de6:	d501      	bpl.n	8001dec <_printf_i+0xbc>
 8001de8:	681d      	ldr	r5, [r3, #0]
 8001dea:	e003      	b.n	8001df4 <_printf_i+0xc4>
 8001dec:	0645      	lsls	r5, r0, #25
 8001dee:	d5fb      	bpl.n	8001de8 <_printf_i+0xb8>
 8001df0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001df4:	2d00      	cmp	r5, #0
 8001df6:	da03      	bge.n	8001e00 <_printf_i+0xd0>
 8001df8:	232d      	movs	r3, #45	@ 0x2d
 8001dfa:	426d      	negs	r5, r5
 8001dfc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001e00:	4859      	ldr	r0, [pc, #356]	@ (8001f68 <_printf_i+0x238>)
 8001e02:	230a      	movs	r3, #10
 8001e04:	e011      	b.n	8001e2a <_printf_i+0xfa>
 8001e06:	6821      	ldr	r1, [r4, #0]
 8001e08:	6833      	ldr	r3, [r6, #0]
 8001e0a:	0608      	lsls	r0, r1, #24
 8001e0c:	f853 5b04 	ldr.w	r5, [r3], #4
 8001e10:	d402      	bmi.n	8001e18 <_printf_i+0xe8>
 8001e12:	0649      	lsls	r1, r1, #25
 8001e14:	bf48      	it	mi
 8001e16:	b2ad      	uxthmi	r5, r5
 8001e18:	2f6f      	cmp	r7, #111	@ 0x6f
 8001e1a:	4853      	ldr	r0, [pc, #332]	@ (8001f68 <_printf_i+0x238>)
 8001e1c:	6033      	str	r3, [r6, #0]
 8001e1e:	bf14      	ite	ne
 8001e20:	230a      	movne	r3, #10
 8001e22:	2308      	moveq	r3, #8
 8001e24:	2100      	movs	r1, #0
 8001e26:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001e2a:	6866      	ldr	r6, [r4, #4]
 8001e2c:	60a6      	str	r6, [r4, #8]
 8001e2e:	2e00      	cmp	r6, #0
 8001e30:	bfa2      	ittt	ge
 8001e32:	6821      	ldrge	r1, [r4, #0]
 8001e34:	f021 0104 	bicge.w	r1, r1, #4
 8001e38:	6021      	strge	r1, [r4, #0]
 8001e3a:	b90d      	cbnz	r5, 8001e40 <_printf_i+0x110>
 8001e3c:	2e00      	cmp	r6, #0
 8001e3e:	d04b      	beq.n	8001ed8 <_printf_i+0x1a8>
 8001e40:	4616      	mov	r6, r2
 8001e42:	fbb5 f1f3 	udiv	r1, r5, r3
 8001e46:	fb03 5711 	mls	r7, r3, r1, r5
 8001e4a:	5dc7      	ldrb	r7, [r0, r7]
 8001e4c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001e50:	462f      	mov	r7, r5
 8001e52:	42bb      	cmp	r3, r7
 8001e54:	460d      	mov	r5, r1
 8001e56:	d9f4      	bls.n	8001e42 <_printf_i+0x112>
 8001e58:	2b08      	cmp	r3, #8
 8001e5a:	d10b      	bne.n	8001e74 <_printf_i+0x144>
 8001e5c:	6823      	ldr	r3, [r4, #0]
 8001e5e:	07df      	lsls	r7, r3, #31
 8001e60:	d508      	bpl.n	8001e74 <_printf_i+0x144>
 8001e62:	6923      	ldr	r3, [r4, #16]
 8001e64:	6861      	ldr	r1, [r4, #4]
 8001e66:	4299      	cmp	r1, r3
 8001e68:	bfde      	ittt	le
 8001e6a:	2330      	movle	r3, #48	@ 0x30
 8001e6c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001e70:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8001e74:	1b92      	subs	r2, r2, r6
 8001e76:	6122      	str	r2, [r4, #16]
 8001e78:	f8cd a000 	str.w	sl, [sp]
 8001e7c:	464b      	mov	r3, r9
 8001e7e:	aa03      	add	r2, sp, #12
 8001e80:	4621      	mov	r1, r4
 8001e82:	4640      	mov	r0, r8
 8001e84:	f7ff fee6 	bl	8001c54 <_printf_common>
 8001e88:	3001      	adds	r0, #1
 8001e8a:	d14a      	bne.n	8001f22 <_printf_i+0x1f2>
 8001e8c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001e90:	b004      	add	sp, #16
 8001e92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e96:	6823      	ldr	r3, [r4, #0]
 8001e98:	f043 0320 	orr.w	r3, r3, #32
 8001e9c:	6023      	str	r3, [r4, #0]
 8001e9e:	4833      	ldr	r0, [pc, #204]	@ (8001f6c <_printf_i+0x23c>)
 8001ea0:	2778      	movs	r7, #120	@ 0x78
 8001ea2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001ea6:	6823      	ldr	r3, [r4, #0]
 8001ea8:	6831      	ldr	r1, [r6, #0]
 8001eaa:	061f      	lsls	r7, r3, #24
 8001eac:	f851 5b04 	ldr.w	r5, [r1], #4
 8001eb0:	d402      	bmi.n	8001eb8 <_printf_i+0x188>
 8001eb2:	065f      	lsls	r7, r3, #25
 8001eb4:	bf48      	it	mi
 8001eb6:	b2ad      	uxthmi	r5, r5
 8001eb8:	6031      	str	r1, [r6, #0]
 8001eba:	07d9      	lsls	r1, r3, #31
 8001ebc:	bf44      	itt	mi
 8001ebe:	f043 0320 	orrmi.w	r3, r3, #32
 8001ec2:	6023      	strmi	r3, [r4, #0]
 8001ec4:	b11d      	cbz	r5, 8001ece <_printf_i+0x19e>
 8001ec6:	2310      	movs	r3, #16
 8001ec8:	e7ac      	b.n	8001e24 <_printf_i+0xf4>
 8001eca:	4827      	ldr	r0, [pc, #156]	@ (8001f68 <_printf_i+0x238>)
 8001ecc:	e7e9      	b.n	8001ea2 <_printf_i+0x172>
 8001ece:	6823      	ldr	r3, [r4, #0]
 8001ed0:	f023 0320 	bic.w	r3, r3, #32
 8001ed4:	6023      	str	r3, [r4, #0]
 8001ed6:	e7f6      	b.n	8001ec6 <_printf_i+0x196>
 8001ed8:	4616      	mov	r6, r2
 8001eda:	e7bd      	b.n	8001e58 <_printf_i+0x128>
 8001edc:	6833      	ldr	r3, [r6, #0]
 8001ede:	6825      	ldr	r5, [r4, #0]
 8001ee0:	6961      	ldr	r1, [r4, #20]
 8001ee2:	1d18      	adds	r0, r3, #4
 8001ee4:	6030      	str	r0, [r6, #0]
 8001ee6:	062e      	lsls	r6, r5, #24
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	d501      	bpl.n	8001ef0 <_printf_i+0x1c0>
 8001eec:	6019      	str	r1, [r3, #0]
 8001eee:	e002      	b.n	8001ef6 <_printf_i+0x1c6>
 8001ef0:	0668      	lsls	r0, r5, #25
 8001ef2:	d5fb      	bpl.n	8001eec <_printf_i+0x1bc>
 8001ef4:	8019      	strh	r1, [r3, #0]
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	6123      	str	r3, [r4, #16]
 8001efa:	4616      	mov	r6, r2
 8001efc:	e7bc      	b.n	8001e78 <_printf_i+0x148>
 8001efe:	6833      	ldr	r3, [r6, #0]
 8001f00:	1d1a      	adds	r2, r3, #4
 8001f02:	6032      	str	r2, [r6, #0]
 8001f04:	681e      	ldr	r6, [r3, #0]
 8001f06:	6862      	ldr	r2, [r4, #4]
 8001f08:	2100      	movs	r1, #0
 8001f0a:	4630      	mov	r0, r6
 8001f0c:	f7fe f968 	bl	80001e0 <memchr>
 8001f10:	b108      	cbz	r0, 8001f16 <_printf_i+0x1e6>
 8001f12:	1b80      	subs	r0, r0, r6
 8001f14:	6060      	str	r0, [r4, #4]
 8001f16:	6863      	ldr	r3, [r4, #4]
 8001f18:	6123      	str	r3, [r4, #16]
 8001f1a:	2300      	movs	r3, #0
 8001f1c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001f20:	e7aa      	b.n	8001e78 <_printf_i+0x148>
 8001f22:	6923      	ldr	r3, [r4, #16]
 8001f24:	4632      	mov	r2, r6
 8001f26:	4649      	mov	r1, r9
 8001f28:	4640      	mov	r0, r8
 8001f2a:	47d0      	blx	sl
 8001f2c:	3001      	adds	r0, #1
 8001f2e:	d0ad      	beq.n	8001e8c <_printf_i+0x15c>
 8001f30:	6823      	ldr	r3, [r4, #0]
 8001f32:	079b      	lsls	r3, r3, #30
 8001f34:	d413      	bmi.n	8001f5e <_printf_i+0x22e>
 8001f36:	68e0      	ldr	r0, [r4, #12]
 8001f38:	9b03      	ldr	r3, [sp, #12]
 8001f3a:	4298      	cmp	r0, r3
 8001f3c:	bfb8      	it	lt
 8001f3e:	4618      	movlt	r0, r3
 8001f40:	e7a6      	b.n	8001e90 <_printf_i+0x160>
 8001f42:	2301      	movs	r3, #1
 8001f44:	4632      	mov	r2, r6
 8001f46:	4649      	mov	r1, r9
 8001f48:	4640      	mov	r0, r8
 8001f4a:	47d0      	blx	sl
 8001f4c:	3001      	adds	r0, #1
 8001f4e:	d09d      	beq.n	8001e8c <_printf_i+0x15c>
 8001f50:	3501      	adds	r5, #1
 8001f52:	68e3      	ldr	r3, [r4, #12]
 8001f54:	9903      	ldr	r1, [sp, #12]
 8001f56:	1a5b      	subs	r3, r3, r1
 8001f58:	42ab      	cmp	r3, r5
 8001f5a:	dcf2      	bgt.n	8001f42 <_printf_i+0x212>
 8001f5c:	e7eb      	b.n	8001f36 <_printf_i+0x206>
 8001f5e:	2500      	movs	r5, #0
 8001f60:	f104 0619 	add.w	r6, r4, #25
 8001f64:	e7f5      	b.n	8001f52 <_printf_i+0x222>
 8001f66:	bf00      	nop
 8001f68:	08003fe2 	.word	0x08003fe2
 8001f6c:	08003ff3 	.word	0x08003ff3

08001f70 <std>:
 8001f70:	2300      	movs	r3, #0
 8001f72:	b510      	push	{r4, lr}
 8001f74:	4604      	mov	r4, r0
 8001f76:	e9c0 3300 	strd	r3, r3, [r0]
 8001f7a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001f7e:	6083      	str	r3, [r0, #8]
 8001f80:	8181      	strh	r1, [r0, #12]
 8001f82:	6643      	str	r3, [r0, #100]	@ 0x64
 8001f84:	81c2      	strh	r2, [r0, #14]
 8001f86:	6183      	str	r3, [r0, #24]
 8001f88:	4619      	mov	r1, r3
 8001f8a:	2208      	movs	r2, #8
 8001f8c:	305c      	adds	r0, #92	@ 0x5c
 8001f8e:	f000 f8f4 	bl	800217a <memset>
 8001f92:	4b0d      	ldr	r3, [pc, #52]	@ (8001fc8 <std+0x58>)
 8001f94:	6263      	str	r3, [r4, #36]	@ 0x24
 8001f96:	4b0d      	ldr	r3, [pc, #52]	@ (8001fcc <std+0x5c>)
 8001f98:	62a3      	str	r3, [r4, #40]	@ 0x28
 8001f9a:	4b0d      	ldr	r3, [pc, #52]	@ (8001fd0 <std+0x60>)
 8001f9c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001f9e:	4b0d      	ldr	r3, [pc, #52]	@ (8001fd4 <std+0x64>)
 8001fa0:	6323      	str	r3, [r4, #48]	@ 0x30
 8001fa2:	4b0d      	ldr	r3, [pc, #52]	@ (8001fd8 <std+0x68>)
 8001fa4:	6224      	str	r4, [r4, #32]
 8001fa6:	429c      	cmp	r4, r3
 8001fa8:	d006      	beq.n	8001fb8 <std+0x48>
 8001faa:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8001fae:	4294      	cmp	r4, r2
 8001fb0:	d002      	beq.n	8001fb8 <std+0x48>
 8001fb2:	33d0      	adds	r3, #208	@ 0xd0
 8001fb4:	429c      	cmp	r4, r3
 8001fb6:	d105      	bne.n	8001fc4 <std+0x54>
 8001fb8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001fbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001fc0:	f000 b958 	b.w	8002274 <__retarget_lock_init_recursive>
 8001fc4:	bd10      	pop	{r4, pc}
 8001fc6:	bf00      	nop
 8001fc8:	080020f5 	.word	0x080020f5
 8001fcc:	08002117 	.word	0x08002117
 8001fd0:	0800214f 	.word	0x0800214f
 8001fd4:	08002173 	.word	0x08002173
 8001fd8:	2000028c 	.word	0x2000028c

08001fdc <stdio_exit_handler>:
 8001fdc:	4a02      	ldr	r2, [pc, #8]	@ (8001fe8 <stdio_exit_handler+0xc>)
 8001fde:	4903      	ldr	r1, [pc, #12]	@ (8001fec <stdio_exit_handler+0x10>)
 8001fe0:	4803      	ldr	r0, [pc, #12]	@ (8001ff0 <stdio_exit_handler+0x14>)
 8001fe2:	f000 b869 	b.w	80020b8 <_fwalk_sglue>
 8001fe6:	bf00      	nop
 8001fe8:	20000008 	.word	0x20000008
 8001fec:	08003921 	.word	0x08003921
 8001ff0:	20000018 	.word	0x20000018

08001ff4 <cleanup_stdio>:
 8001ff4:	6841      	ldr	r1, [r0, #4]
 8001ff6:	4b0c      	ldr	r3, [pc, #48]	@ (8002028 <cleanup_stdio+0x34>)
 8001ff8:	4299      	cmp	r1, r3
 8001ffa:	b510      	push	{r4, lr}
 8001ffc:	4604      	mov	r4, r0
 8001ffe:	d001      	beq.n	8002004 <cleanup_stdio+0x10>
 8002000:	f001 fc8e 	bl	8003920 <_fflush_r>
 8002004:	68a1      	ldr	r1, [r4, #8]
 8002006:	4b09      	ldr	r3, [pc, #36]	@ (800202c <cleanup_stdio+0x38>)
 8002008:	4299      	cmp	r1, r3
 800200a:	d002      	beq.n	8002012 <cleanup_stdio+0x1e>
 800200c:	4620      	mov	r0, r4
 800200e:	f001 fc87 	bl	8003920 <_fflush_r>
 8002012:	68e1      	ldr	r1, [r4, #12]
 8002014:	4b06      	ldr	r3, [pc, #24]	@ (8002030 <cleanup_stdio+0x3c>)
 8002016:	4299      	cmp	r1, r3
 8002018:	d004      	beq.n	8002024 <cleanup_stdio+0x30>
 800201a:	4620      	mov	r0, r4
 800201c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002020:	f001 bc7e 	b.w	8003920 <_fflush_r>
 8002024:	bd10      	pop	{r4, pc}
 8002026:	bf00      	nop
 8002028:	2000028c 	.word	0x2000028c
 800202c:	200002f4 	.word	0x200002f4
 8002030:	2000035c 	.word	0x2000035c

08002034 <global_stdio_init.part.0>:
 8002034:	b510      	push	{r4, lr}
 8002036:	4b0b      	ldr	r3, [pc, #44]	@ (8002064 <global_stdio_init.part.0+0x30>)
 8002038:	4c0b      	ldr	r4, [pc, #44]	@ (8002068 <global_stdio_init.part.0+0x34>)
 800203a:	4a0c      	ldr	r2, [pc, #48]	@ (800206c <global_stdio_init.part.0+0x38>)
 800203c:	601a      	str	r2, [r3, #0]
 800203e:	4620      	mov	r0, r4
 8002040:	2200      	movs	r2, #0
 8002042:	2104      	movs	r1, #4
 8002044:	f7ff ff94 	bl	8001f70 <std>
 8002048:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800204c:	2201      	movs	r2, #1
 800204e:	2109      	movs	r1, #9
 8002050:	f7ff ff8e 	bl	8001f70 <std>
 8002054:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002058:	2202      	movs	r2, #2
 800205a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800205e:	2112      	movs	r1, #18
 8002060:	f7ff bf86 	b.w	8001f70 <std>
 8002064:	200003c4 	.word	0x200003c4
 8002068:	2000028c 	.word	0x2000028c
 800206c:	08001fdd 	.word	0x08001fdd

08002070 <__sfp_lock_acquire>:
 8002070:	4801      	ldr	r0, [pc, #4]	@ (8002078 <__sfp_lock_acquire+0x8>)
 8002072:	f000 b900 	b.w	8002276 <__retarget_lock_acquire_recursive>
 8002076:	bf00      	nop
 8002078:	200003cd 	.word	0x200003cd

0800207c <__sfp_lock_release>:
 800207c:	4801      	ldr	r0, [pc, #4]	@ (8002084 <__sfp_lock_release+0x8>)
 800207e:	f000 b8fb 	b.w	8002278 <__retarget_lock_release_recursive>
 8002082:	bf00      	nop
 8002084:	200003cd 	.word	0x200003cd

08002088 <__sinit>:
 8002088:	b510      	push	{r4, lr}
 800208a:	4604      	mov	r4, r0
 800208c:	f7ff fff0 	bl	8002070 <__sfp_lock_acquire>
 8002090:	6a23      	ldr	r3, [r4, #32]
 8002092:	b11b      	cbz	r3, 800209c <__sinit+0x14>
 8002094:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002098:	f7ff bff0 	b.w	800207c <__sfp_lock_release>
 800209c:	4b04      	ldr	r3, [pc, #16]	@ (80020b0 <__sinit+0x28>)
 800209e:	6223      	str	r3, [r4, #32]
 80020a0:	4b04      	ldr	r3, [pc, #16]	@ (80020b4 <__sinit+0x2c>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d1f5      	bne.n	8002094 <__sinit+0xc>
 80020a8:	f7ff ffc4 	bl	8002034 <global_stdio_init.part.0>
 80020ac:	e7f2      	b.n	8002094 <__sinit+0xc>
 80020ae:	bf00      	nop
 80020b0:	08001ff5 	.word	0x08001ff5
 80020b4:	200003c4 	.word	0x200003c4

080020b8 <_fwalk_sglue>:
 80020b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80020bc:	4607      	mov	r7, r0
 80020be:	4688      	mov	r8, r1
 80020c0:	4614      	mov	r4, r2
 80020c2:	2600      	movs	r6, #0
 80020c4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80020c8:	f1b9 0901 	subs.w	r9, r9, #1
 80020cc:	d505      	bpl.n	80020da <_fwalk_sglue+0x22>
 80020ce:	6824      	ldr	r4, [r4, #0]
 80020d0:	2c00      	cmp	r4, #0
 80020d2:	d1f7      	bne.n	80020c4 <_fwalk_sglue+0xc>
 80020d4:	4630      	mov	r0, r6
 80020d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80020da:	89ab      	ldrh	r3, [r5, #12]
 80020dc:	2b01      	cmp	r3, #1
 80020de:	d907      	bls.n	80020f0 <_fwalk_sglue+0x38>
 80020e0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80020e4:	3301      	adds	r3, #1
 80020e6:	d003      	beq.n	80020f0 <_fwalk_sglue+0x38>
 80020e8:	4629      	mov	r1, r5
 80020ea:	4638      	mov	r0, r7
 80020ec:	47c0      	blx	r8
 80020ee:	4306      	orrs	r6, r0
 80020f0:	3568      	adds	r5, #104	@ 0x68
 80020f2:	e7e9      	b.n	80020c8 <_fwalk_sglue+0x10>

080020f4 <__sread>:
 80020f4:	b510      	push	{r4, lr}
 80020f6:	460c      	mov	r4, r1
 80020f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80020fc:	f000 f86c 	bl	80021d8 <_read_r>
 8002100:	2800      	cmp	r0, #0
 8002102:	bfab      	itete	ge
 8002104:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002106:	89a3      	ldrhlt	r3, [r4, #12]
 8002108:	181b      	addge	r3, r3, r0
 800210a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800210e:	bfac      	ite	ge
 8002110:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002112:	81a3      	strhlt	r3, [r4, #12]
 8002114:	bd10      	pop	{r4, pc}

08002116 <__swrite>:
 8002116:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800211a:	461f      	mov	r7, r3
 800211c:	898b      	ldrh	r3, [r1, #12]
 800211e:	05db      	lsls	r3, r3, #23
 8002120:	4605      	mov	r5, r0
 8002122:	460c      	mov	r4, r1
 8002124:	4616      	mov	r6, r2
 8002126:	d505      	bpl.n	8002134 <__swrite+0x1e>
 8002128:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800212c:	2302      	movs	r3, #2
 800212e:	2200      	movs	r2, #0
 8002130:	f000 f840 	bl	80021b4 <_lseek_r>
 8002134:	89a3      	ldrh	r3, [r4, #12]
 8002136:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800213a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800213e:	81a3      	strh	r3, [r4, #12]
 8002140:	4632      	mov	r2, r6
 8002142:	463b      	mov	r3, r7
 8002144:	4628      	mov	r0, r5
 8002146:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800214a:	f000 b857 	b.w	80021fc <_write_r>

0800214e <__sseek>:
 800214e:	b510      	push	{r4, lr}
 8002150:	460c      	mov	r4, r1
 8002152:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002156:	f000 f82d 	bl	80021b4 <_lseek_r>
 800215a:	1c43      	adds	r3, r0, #1
 800215c:	89a3      	ldrh	r3, [r4, #12]
 800215e:	bf15      	itete	ne
 8002160:	6560      	strne	r0, [r4, #84]	@ 0x54
 8002162:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002166:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800216a:	81a3      	strheq	r3, [r4, #12]
 800216c:	bf18      	it	ne
 800216e:	81a3      	strhne	r3, [r4, #12]
 8002170:	bd10      	pop	{r4, pc}

08002172 <__sclose>:
 8002172:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002176:	f000 b80d 	b.w	8002194 <_close_r>

0800217a <memset>:
 800217a:	4402      	add	r2, r0
 800217c:	4603      	mov	r3, r0
 800217e:	4293      	cmp	r3, r2
 8002180:	d100      	bne.n	8002184 <memset+0xa>
 8002182:	4770      	bx	lr
 8002184:	f803 1b01 	strb.w	r1, [r3], #1
 8002188:	e7f9      	b.n	800217e <memset+0x4>
	...

0800218c <_localeconv_r>:
 800218c:	4800      	ldr	r0, [pc, #0]	@ (8002190 <_localeconv_r+0x4>)
 800218e:	4770      	bx	lr
 8002190:	20000154 	.word	0x20000154

08002194 <_close_r>:
 8002194:	b538      	push	{r3, r4, r5, lr}
 8002196:	4d06      	ldr	r5, [pc, #24]	@ (80021b0 <_close_r+0x1c>)
 8002198:	2300      	movs	r3, #0
 800219a:	4604      	mov	r4, r0
 800219c:	4608      	mov	r0, r1
 800219e:	602b      	str	r3, [r5, #0]
 80021a0:	f7fe ffd7 	bl	8001152 <_close>
 80021a4:	1c43      	adds	r3, r0, #1
 80021a6:	d102      	bne.n	80021ae <_close_r+0x1a>
 80021a8:	682b      	ldr	r3, [r5, #0]
 80021aa:	b103      	cbz	r3, 80021ae <_close_r+0x1a>
 80021ac:	6023      	str	r3, [r4, #0]
 80021ae:	bd38      	pop	{r3, r4, r5, pc}
 80021b0:	200003c8 	.word	0x200003c8

080021b4 <_lseek_r>:
 80021b4:	b538      	push	{r3, r4, r5, lr}
 80021b6:	4d07      	ldr	r5, [pc, #28]	@ (80021d4 <_lseek_r+0x20>)
 80021b8:	4604      	mov	r4, r0
 80021ba:	4608      	mov	r0, r1
 80021bc:	4611      	mov	r1, r2
 80021be:	2200      	movs	r2, #0
 80021c0:	602a      	str	r2, [r5, #0]
 80021c2:	461a      	mov	r2, r3
 80021c4:	f7fe ffe9 	bl	800119a <_lseek>
 80021c8:	1c43      	adds	r3, r0, #1
 80021ca:	d102      	bne.n	80021d2 <_lseek_r+0x1e>
 80021cc:	682b      	ldr	r3, [r5, #0]
 80021ce:	b103      	cbz	r3, 80021d2 <_lseek_r+0x1e>
 80021d0:	6023      	str	r3, [r4, #0]
 80021d2:	bd38      	pop	{r3, r4, r5, pc}
 80021d4:	200003c8 	.word	0x200003c8

080021d8 <_read_r>:
 80021d8:	b538      	push	{r3, r4, r5, lr}
 80021da:	4d07      	ldr	r5, [pc, #28]	@ (80021f8 <_read_r+0x20>)
 80021dc:	4604      	mov	r4, r0
 80021de:	4608      	mov	r0, r1
 80021e0:	4611      	mov	r1, r2
 80021e2:	2200      	movs	r2, #0
 80021e4:	602a      	str	r2, [r5, #0]
 80021e6:	461a      	mov	r2, r3
 80021e8:	f7fe ff7a 	bl	80010e0 <_read>
 80021ec:	1c43      	adds	r3, r0, #1
 80021ee:	d102      	bne.n	80021f6 <_read_r+0x1e>
 80021f0:	682b      	ldr	r3, [r5, #0]
 80021f2:	b103      	cbz	r3, 80021f6 <_read_r+0x1e>
 80021f4:	6023      	str	r3, [r4, #0]
 80021f6:	bd38      	pop	{r3, r4, r5, pc}
 80021f8:	200003c8 	.word	0x200003c8

080021fc <_write_r>:
 80021fc:	b538      	push	{r3, r4, r5, lr}
 80021fe:	4d07      	ldr	r5, [pc, #28]	@ (800221c <_write_r+0x20>)
 8002200:	4604      	mov	r4, r0
 8002202:	4608      	mov	r0, r1
 8002204:	4611      	mov	r1, r2
 8002206:	2200      	movs	r2, #0
 8002208:	602a      	str	r2, [r5, #0]
 800220a:	461a      	mov	r2, r3
 800220c:	f7fe ff85 	bl	800111a <_write>
 8002210:	1c43      	adds	r3, r0, #1
 8002212:	d102      	bne.n	800221a <_write_r+0x1e>
 8002214:	682b      	ldr	r3, [r5, #0]
 8002216:	b103      	cbz	r3, 800221a <_write_r+0x1e>
 8002218:	6023      	str	r3, [r4, #0]
 800221a:	bd38      	pop	{r3, r4, r5, pc}
 800221c:	200003c8 	.word	0x200003c8

08002220 <__errno>:
 8002220:	4b01      	ldr	r3, [pc, #4]	@ (8002228 <__errno+0x8>)
 8002222:	6818      	ldr	r0, [r3, #0]
 8002224:	4770      	bx	lr
 8002226:	bf00      	nop
 8002228:	20000014 	.word	0x20000014

0800222c <__libc_init_array>:
 800222c:	b570      	push	{r4, r5, r6, lr}
 800222e:	4d0d      	ldr	r5, [pc, #52]	@ (8002264 <__libc_init_array+0x38>)
 8002230:	4c0d      	ldr	r4, [pc, #52]	@ (8002268 <__libc_init_array+0x3c>)
 8002232:	1b64      	subs	r4, r4, r5
 8002234:	10a4      	asrs	r4, r4, #2
 8002236:	2600      	movs	r6, #0
 8002238:	42a6      	cmp	r6, r4
 800223a:	d109      	bne.n	8002250 <__libc_init_array+0x24>
 800223c:	4d0b      	ldr	r5, [pc, #44]	@ (800226c <__libc_init_array+0x40>)
 800223e:	4c0c      	ldr	r4, [pc, #48]	@ (8002270 <__libc_init_array+0x44>)
 8002240:	f001 feba 	bl	8003fb8 <_init>
 8002244:	1b64      	subs	r4, r4, r5
 8002246:	10a4      	asrs	r4, r4, #2
 8002248:	2600      	movs	r6, #0
 800224a:	42a6      	cmp	r6, r4
 800224c:	d105      	bne.n	800225a <__libc_init_array+0x2e>
 800224e:	bd70      	pop	{r4, r5, r6, pc}
 8002250:	f855 3b04 	ldr.w	r3, [r5], #4
 8002254:	4798      	blx	r3
 8002256:	3601      	adds	r6, #1
 8002258:	e7ee      	b.n	8002238 <__libc_init_array+0xc>
 800225a:	f855 3b04 	ldr.w	r3, [r5], #4
 800225e:	4798      	blx	r3
 8002260:	3601      	adds	r6, #1
 8002262:	e7f2      	b.n	800224a <__libc_init_array+0x1e>
 8002264:	08004348 	.word	0x08004348
 8002268:	08004348 	.word	0x08004348
 800226c:	08004348 	.word	0x08004348
 8002270:	0800434c 	.word	0x0800434c

08002274 <__retarget_lock_init_recursive>:
 8002274:	4770      	bx	lr

08002276 <__retarget_lock_acquire_recursive>:
 8002276:	4770      	bx	lr

08002278 <__retarget_lock_release_recursive>:
 8002278:	4770      	bx	lr

0800227a <quorem>:
 800227a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800227e:	6903      	ldr	r3, [r0, #16]
 8002280:	690c      	ldr	r4, [r1, #16]
 8002282:	42a3      	cmp	r3, r4
 8002284:	4607      	mov	r7, r0
 8002286:	db7e      	blt.n	8002386 <quorem+0x10c>
 8002288:	3c01      	subs	r4, #1
 800228a:	f101 0814 	add.w	r8, r1, #20
 800228e:	00a3      	lsls	r3, r4, #2
 8002290:	f100 0514 	add.w	r5, r0, #20
 8002294:	9300      	str	r3, [sp, #0]
 8002296:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800229a:	9301      	str	r3, [sp, #4]
 800229c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80022a0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80022a4:	3301      	adds	r3, #1
 80022a6:	429a      	cmp	r2, r3
 80022a8:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80022ac:	fbb2 f6f3 	udiv	r6, r2, r3
 80022b0:	d32e      	bcc.n	8002310 <quorem+0x96>
 80022b2:	f04f 0a00 	mov.w	sl, #0
 80022b6:	46c4      	mov	ip, r8
 80022b8:	46ae      	mov	lr, r5
 80022ba:	46d3      	mov	fp, sl
 80022bc:	f85c 3b04 	ldr.w	r3, [ip], #4
 80022c0:	b298      	uxth	r0, r3
 80022c2:	fb06 a000 	mla	r0, r6, r0, sl
 80022c6:	0c02      	lsrs	r2, r0, #16
 80022c8:	0c1b      	lsrs	r3, r3, #16
 80022ca:	fb06 2303 	mla	r3, r6, r3, r2
 80022ce:	f8de 2000 	ldr.w	r2, [lr]
 80022d2:	b280      	uxth	r0, r0
 80022d4:	b292      	uxth	r2, r2
 80022d6:	1a12      	subs	r2, r2, r0
 80022d8:	445a      	add	r2, fp
 80022da:	f8de 0000 	ldr.w	r0, [lr]
 80022de:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80022e2:	b29b      	uxth	r3, r3
 80022e4:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80022e8:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80022ec:	b292      	uxth	r2, r2
 80022ee:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80022f2:	45e1      	cmp	r9, ip
 80022f4:	f84e 2b04 	str.w	r2, [lr], #4
 80022f8:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80022fc:	d2de      	bcs.n	80022bc <quorem+0x42>
 80022fe:	9b00      	ldr	r3, [sp, #0]
 8002300:	58eb      	ldr	r3, [r5, r3]
 8002302:	b92b      	cbnz	r3, 8002310 <quorem+0x96>
 8002304:	9b01      	ldr	r3, [sp, #4]
 8002306:	3b04      	subs	r3, #4
 8002308:	429d      	cmp	r5, r3
 800230a:	461a      	mov	r2, r3
 800230c:	d32f      	bcc.n	800236e <quorem+0xf4>
 800230e:	613c      	str	r4, [r7, #16]
 8002310:	4638      	mov	r0, r7
 8002312:	f001 f97f 	bl	8003614 <__mcmp>
 8002316:	2800      	cmp	r0, #0
 8002318:	db25      	blt.n	8002366 <quorem+0xec>
 800231a:	4629      	mov	r1, r5
 800231c:	2000      	movs	r0, #0
 800231e:	f858 2b04 	ldr.w	r2, [r8], #4
 8002322:	f8d1 c000 	ldr.w	ip, [r1]
 8002326:	fa1f fe82 	uxth.w	lr, r2
 800232a:	fa1f f38c 	uxth.w	r3, ip
 800232e:	eba3 030e 	sub.w	r3, r3, lr
 8002332:	4403      	add	r3, r0
 8002334:	0c12      	lsrs	r2, r2, #16
 8002336:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800233a:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800233e:	b29b      	uxth	r3, r3
 8002340:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002344:	45c1      	cmp	r9, r8
 8002346:	f841 3b04 	str.w	r3, [r1], #4
 800234a:	ea4f 4022 	mov.w	r0, r2, asr #16
 800234e:	d2e6      	bcs.n	800231e <quorem+0xa4>
 8002350:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002354:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002358:	b922      	cbnz	r2, 8002364 <quorem+0xea>
 800235a:	3b04      	subs	r3, #4
 800235c:	429d      	cmp	r5, r3
 800235e:	461a      	mov	r2, r3
 8002360:	d30b      	bcc.n	800237a <quorem+0x100>
 8002362:	613c      	str	r4, [r7, #16]
 8002364:	3601      	adds	r6, #1
 8002366:	4630      	mov	r0, r6
 8002368:	b003      	add	sp, #12
 800236a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800236e:	6812      	ldr	r2, [r2, #0]
 8002370:	3b04      	subs	r3, #4
 8002372:	2a00      	cmp	r2, #0
 8002374:	d1cb      	bne.n	800230e <quorem+0x94>
 8002376:	3c01      	subs	r4, #1
 8002378:	e7c6      	b.n	8002308 <quorem+0x8e>
 800237a:	6812      	ldr	r2, [r2, #0]
 800237c:	3b04      	subs	r3, #4
 800237e:	2a00      	cmp	r2, #0
 8002380:	d1ef      	bne.n	8002362 <quorem+0xe8>
 8002382:	3c01      	subs	r4, #1
 8002384:	e7ea      	b.n	800235c <quorem+0xe2>
 8002386:	2000      	movs	r0, #0
 8002388:	e7ee      	b.n	8002368 <quorem+0xee>
 800238a:	0000      	movs	r0, r0
 800238c:	0000      	movs	r0, r0
	...

08002390 <_dtoa_r>:
 8002390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002394:	69c7      	ldr	r7, [r0, #28]
 8002396:	b097      	sub	sp, #92	@ 0x5c
 8002398:	4614      	mov	r4, r2
 800239a:	461d      	mov	r5, r3
 800239c:	e9cd 4502 	strd	r4, r5, [sp, #8]
 80023a0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80023a2:	4683      	mov	fp, r0
 80023a4:	b97f      	cbnz	r7, 80023c6 <_dtoa_r+0x36>
 80023a6:	2010      	movs	r0, #16
 80023a8:	f000 fe04 	bl	8002fb4 <malloc>
 80023ac:	4602      	mov	r2, r0
 80023ae:	f8cb 001c 	str.w	r0, [fp, #28]
 80023b2:	b920      	cbnz	r0, 80023be <_dtoa_r+0x2e>
 80023b4:	4ba8      	ldr	r3, [pc, #672]	@ (8002658 <_dtoa_r+0x2c8>)
 80023b6:	21ef      	movs	r1, #239	@ 0xef
 80023b8:	48a8      	ldr	r0, [pc, #672]	@ (800265c <_dtoa_r+0x2cc>)
 80023ba:	f001 faf7 	bl	80039ac <__assert_func>
 80023be:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80023c2:	6007      	str	r7, [r0, #0]
 80023c4:	60c7      	str	r7, [r0, #12]
 80023c6:	f8db 301c 	ldr.w	r3, [fp, #28]
 80023ca:	6819      	ldr	r1, [r3, #0]
 80023cc:	b159      	cbz	r1, 80023e6 <_dtoa_r+0x56>
 80023ce:	685a      	ldr	r2, [r3, #4]
 80023d0:	604a      	str	r2, [r1, #4]
 80023d2:	2301      	movs	r3, #1
 80023d4:	4093      	lsls	r3, r2
 80023d6:	608b      	str	r3, [r1, #8]
 80023d8:	4658      	mov	r0, fp
 80023da:	f000 fee1 	bl	80031a0 <_Bfree>
 80023de:	f8db 301c 	ldr.w	r3, [fp, #28]
 80023e2:	2200      	movs	r2, #0
 80023e4:	601a      	str	r2, [r3, #0]
 80023e6:	1e2b      	subs	r3, r5, #0
 80023e8:	bfb9      	ittee	lt
 80023ea:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80023ee:	9303      	strlt	r3, [sp, #12]
 80023f0:	2300      	movge	r3, #0
 80023f2:	6033      	strge	r3, [r6, #0]
 80023f4:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80023f8:	4b99      	ldr	r3, [pc, #612]	@ (8002660 <_dtoa_r+0x2d0>)
 80023fa:	bfbc      	itt	lt
 80023fc:	2201      	movlt	r2, #1
 80023fe:	6032      	strlt	r2, [r6, #0]
 8002400:	ea33 0308 	bics.w	r3, r3, r8
 8002404:	d112      	bne.n	800242c <_dtoa_r+0x9c>
 8002406:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002408:	f242 730f 	movw	r3, #9999	@ 0x270f
 800240c:	6013      	str	r3, [r2, #0]
 800240e:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8002412:	4323      	orrs	r3, r4
 8002414:	f000 8551 	beq.w	8002eba <_dtoa_r+0xb2a>
 8002418:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800241a:	f8df a248 	ldr.w	sl, [pc, #584]	@ 8002664 <_dtoa_r+0x2d4>
 800241e:	2b00      	cmp	r3, #0
 8002420:	f000 8553 	beq.w	8002eca <_dtoa_r+0xb3a>
 8002424:	f10a 0303 	add.w	r3, sl, #3
 8002428:	f000 bd4d 	b.w	8002ec6 <_dtoa_r+0xb36>
 800242c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002430:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8002434:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002438:	2200      	movs	r2, #0
 800243a:	2300      	movs	r3, #0
 800243c:	f7fe fc00 	bl	8000c40 <__aeabi_dcmpeq>
 8002440:	4607      	mov	r7, r0
 8002442:	b158      	cbz	r0, 800245c <_dtoa_r+0xcc>
 8002444:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002446:	2301      	movs	r3, #1
 8002448:	6013      	str	r3, [r2, #0]
 800244a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800244c:	b113      	cbz	r3, 8002454 <_dtoa_r+0xc4>
 800244e:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8002450:	4b85      	ldr	r3, [pc, #532]	@ (8002668 <_dtoa_r+0x2d8>)
 8002452:	6013      	str	r3, [r2, #0]
 8002454:	f8df a214 	ldr.w	sl, [pc, #532]	@ 800266c <_dtoa_r+0x2dc>
 8002458:	f000 bd37 	b.w	8002eca <_dtoa_r+0xb3a>
 800245c:	ab14      	add	r3, sp, #80	@ 0x50
 800245e:	9301      	str	r3, [sp, #4]
 8002460:	ab15      	add	r3, sp, #84	@ 0x54
 8002462:	9300      	str	r3, [sp, #0]
 8002464:	4658      	mov	r0, fp
 8002466:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800246a:	f001 f981 	bl	8003770 <__d2b>
 800246e:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8002472:	4681      	mov	r9, r0
 8002474:	2e00      	cmp	r6, #0
 8002476:	d076      	beq.n	8002566 <_dtoa_r+0x1d6>
 8002478:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800247a:	9712      	str	r7, [sp, #72]	@ 0x48
 800247c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002480:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002484:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002488:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800248c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002490:	4619      	mov	r1, r3
 8002492:	2200      	movs	r2, #0
 8002494:	4b76      	ldr	r3, [pc, #472]	@ (8002670 <_dtoa_r+0x2e0>)
 8002496:	f7fd ffb3 	bl	8000400 <__aeabi_dsub>
 800249a:	a369      	add	r3, pc, #420	@ (adr r3, 8002640 <_dtoa_r+0x2b0>)
 800249c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024a0:	f7fe f966 	bl	8000770 <__aeabi_dmul>
 80024a4:	a368      	add	r3, pc, #416	@ (adr r3, 8002648 <_dtoa_r+0x2b8>)
 80024a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024aa:	f7fd ffab 	bl	8000404 <__adddf3>
 80024ae:	4604      	mov	r4, r0
 80024b0:	4630      	mov	r0, r6
 80024b2:	460d      	mov	r5, r1
 80024b4:	f7fe f8f2 	bl	800069c <__aeabi_i2d>
 80024b8:	a365      	add	r3, pc, #404	@ (adr r3, 8002650 <_dtoa_r+0x2c0>)
 80024ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024be:	f7fe f957 	bl	8000770 <__aeabi_dmul>
 80024c2:	4602      	mov	r2, r0
 80024c4:	460b      	mov	r3, r1
 80024c6:	4620      	mov	r0, r4
 80024c8:	4629      	mov	r1, r5
 80024ca:	f7fd ff9b 	bl	8000404 <__adddf3>
 80024ce:	4604      	mov	r4, r0
 80024d0:	460d      	mov	r5, r1
 80024d2:	f7fe fbfd 	bl	8000cd0 <__aeabi_d2iz>
 80024d6:	2200      	movs	r2, #0
 80024d8:	4607      	mov	r7, r0
 80024da:	2300      	movs	r3, #0
 80024dc:	4620      	mov	r0, r4
 80024de:	4629      	mov	r1, r5
 80024e0:	f7fe fbb8 	bl	8000c54 <__aeabi_dcmplt>
 80024e4:	b140      	cbz	r0, 80024f8 <_dtoa_r+0x168>
 80024e6:	4638      	mov	r0, r7
 80024e8:	f7fe f8d8 	bl	800069c <__aeabi_i2d>
 80024ec:	4622      	mov	r2, r4
 80024ee:	462b      	mov	r3, r5
 80024f0:	f7fe fba6 	bl	8000c40 <__aeabi_dcmpeq>
 80024f4:	b900      	cbnz	r0, 80024f8 <_dtoa_r+0x168>
 80024f6:	3f01      	subs	r7, #1
 80024f8:	2f16      	cmp	r7, #22
 80024fa:	d852      	bhi.n	80025a2 <_dtoa_r+0x212>
 80024fc:	4b5d      	ldr	r3, [pc, #372]	@ (8002674 <_dtoa_r+0x2e4>)
 80024fe:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002502:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002506:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800250a:	f7fe fba3 	bl	8000c54 <__aeabi_dcmplt>
 800250e:	2800      	cmp	r0, #0
 8002510:	d049      	beq.n	80025a6 <_dtoa_r+0x216>
 8002512:	3f01      	subs	r7, #1
 8002514:	2300      	movs	r3, #0
 8002516:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002518:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800251a:	1b9b      	subs	r3, r3, r6
 800251c:	1e5a      	subs	r2, r3, #1
 800251e:	bf44      	itt	mi
 8002520:	f1c3 0801 	rsbmi	r8, r3, #1
 8002524:	2300      	movmi	r3, #0
 8002526:	9209      	str	r2, [sp, #36]	@ 0x24
 8002528:	bf54      	ite	pl
 800252a:	f04f 0800 	movpl.w	r8, #0
 800252e:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8002530:	2f00      	cmp	r7, #0
 8002532:	db3a      	blt.n	80025aa <_dtoa_r+0x21a>
 8002534:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002536:	970e      	str	r7, [sp, #56]	@ 0x38
 8002538:	443b      	add	r3, r7
 800253a:	9309      	str	r3, [sp, #36]	@ 0x24
 800253c:	2300      	movs	r3, #0
 800253e:	930a      	str	r3, [sp, #40]	@ 0x28
 8002540:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002542:	2b09      	cmp	r3, #9
 8002544:	d865      	bhi.n	8002612 <_dtoa_r+0x282>
 8002546:	2b05      	cmp	r3, #5
 8002548:	bfc4      	itt	gt
 800254a:	3b04      	subgt	r3, #4
 800254c:	9320      	strgt	r3, [sp, #128]	@ 0x80
 800254e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002550:	f1a3 0302 	sub.w	r3, r3, #2
 8002554:	bfcc      	ite	gt
 8002556:	2400      	movgt	r4, #0
 8002558:	2401      	movle	r4, #1
 800255a:	2b03      	cmp	r3, #3
 800255c:	d864      	bhi.n	8002628 <_dtoa_r+0x298>
 800255e:	e8df f003 	tbb	[pc, r3]
 8002562:	382b      	.short	0x382b
 8002564:	5636      	.short	0x5636
 8002566:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800256a:	441e      	add	r6, r3
 800256c:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002570:	2b20      	cmp	r3, #32
 8002572:	bfc1      	itttt	gt
 8002574:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002578:	fa08 f803 	lslgt.w	r8, r8, r3
 800257c:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002580:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002584:	bfd6      	itet	le
 8002586:	f1c3 0320 	rsble	r3, r3, #32
 800258a:	ea48 0003 	orrgt.w	r0, r8, r3
 800258e:	fa04 f003 	lslle.w	r0, r4, r3
 8002592:	f7fe f873 	bl	800067c <__aeabi_ui2d>
 8002596:	2201      	movs	r2, #1
 8002598:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800259c:	3e01      	subs	r6, #1
 800259e:	9212      	str	r2, [sp, #72]	@ 0x48
 80025a0:	e776      	b.n	8002490 <_dtoa_r+0x100>
 80025a2:	2301      	movs	r3, #1
 80025a4:	e7b7      	b.n	8002516 <_dtoa_r+0x186>
 80025a6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80025a8:	e7b6      	b.n	8002518 <_dtoa_r+0x188>
 80025aa:	427b      	negs	r3, r7
 80025ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80025ae:	2300      	movs	r3, #0
 80025b0:	eba8 0807 	sub.w	r8, r8, r7
 80025b4:	930e      	str	r3, [sp, #56]	@ 0x38
 80025b6:	e7c3      	b.n	8002540 <_dtoa_r+0x1b0>
 80025b8:	2300      	movs	r3, #0
 80025ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 80025bc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80025be:	2b00      	cmp	r3, #0
 80025c0:	dc35      	bgt.n	800262e <_dtoa_r+0x29e>
 80025c2:	2301      	movs	r3, #1
 80025c4:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80025c8:	461a      	mov	r2, r3
 80025ca:	9221      	str	r2, [sp, #132]	@ 0x84
 80025cc:	e00b      	b.n	80025e6 <_dtoa_r+0x256>
 80025ce:	2301      	movs	r3, #1
 80025d0:	e7f3      	b.n	80025ba <_dtoa_r+0x22a>
 80025d2:	2300      	movs	r3, #0
 80025d4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80025d6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80025d8:	18fb      	adds	r3, r7, r3
 80025da:	9308      	str	r3, [sp, #32]
 80025dc:	3301      	adds	r3, #1
 80025de:	2b01      	cmp	r3, #1
 80025e0:	9307      	str	r3, [sp, #28]
 80025e2:	bfb8      	it	lt
 80025e4:	2301      	movlt	r3, #1
 80025e6:	f8db 001c 	ldr.w	r0, [fp, #28]
 80025ea:	2100      	movs	r1, #0
 80025ec:	2204      	movs	r2, #4
 80025ee:	f102 0514 	add.w	r5, r2, #20
 80025f2:	429d      	cmp	r5, r3
 80025f4:	d91f      	bls.n	8002636 <_dtoa_r+0x2a6>
 80025f6:	6041      	str	r1, [r0, #4]
 80025f8:	4658      	mov	r0, fp
 80025fa:	f000 fd91 	bl	8003120 <_Balloc>
 80025fe:	4682      	mov	sl, r0
 8002600:	2800      	cmp	r0, #0
 8002602:	d13b      	bne.n	800267c <_dtoa_r+0x2ec>
 8002604:	4b1c      	ldr	r3, [pc, #112]	@ (8002678 <_dtoa_r+0x2e8>)
 8002606:	4602      	mov	r2, r0
 8002608:	f240 11af 	movw	r1, #431	@ 0x1af
 800260c:	e6d4      	b.n	80023b8 <_dtoa_r+0x28>
 800260e:	2301      	movs	r3, #1
 8002610:	e7e0      	b.n	80025d4 <_dtoa_r+0x244>
 8002612:	2401      	movs	r4, #1
 8002614:	2300      	movs	r3, #0
 8002616:	9320      	str	r3, [sp, #128]	@ 0x80
 8002618:	940b      	str	r4, [sp, #44]	@ 0x2c
 800261a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800261e:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002622:	2200      	movs	r2, #0
 8002624:	2312      	movs	r3, #18
 8002626:	e7d0      	b.n	80025ca <_dtoa_r+0x23a>
 8002628:	2301      	movs	r3, #1
 800262a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800262c:	e7f5      	b.n	800261a <_dtoa_r+0x28a>
 800262e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002630:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002634:	e7d7      	b.n	80025e6 <_dtoa_r+0x256>
 8002636:	3101      	adds	r1, #1
 8002638:	0052      	lsls	r2, r2, #1
 800263a:	e7d8      	b.n	80025ee <_dtoa_r+0x25e>
 800263c:	f3af 8000 	nop.w
 8002640:	636f4361 	.word	0x636f4361
 8002644:	3fd287a7 	.word	0x3fd287a7
 8002648:	8b60c8b3 	.word	0x8b60c8b3
 800264c:	3fc68a28 	.word	0x3fc68a28
 8002650:	509f79fb 	.word	0x509f79fb
 8002654:	3fd34413 	.word	0x3fd34413
 8002658:	08004011 	.word	0x08004011
 800265c:	08004028 	.word	0x08004028
 8002660:	7ff00000 	.word	0x7ff00000
 8002664:	0800400d 	.word	0x0800400d
 8002668:	08003fe1 	.word	0x08003fe1
 800266c:	08003fe0 	.word	0x08003fe0
 8002670:	3ff80000 	.word	0x3ff80000
 8002674:	08004120 	.word	0x08004120
 8002678:	08004080 	.word	0x08004080
 800267c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002680:	6018      	str	r0, [r3, #0]
 8002682:	9b07      	ldr	r3, [sp, #28]
 8002684:	2b0e      	cmp	r3, #14
 8002686:	f200 80a4 	bhi.w	80027d2 <_dtoa_r+0x442>
 800268a:	2c00      	cmp	r4, #0
 800268c:	f000 80a1 	beq.w	80027d2 <_dtoa_r+0x442>
 8002690:	2f00      	cmp	r7, #0
 8002692:	dd33      	ble.n	80026fc <_dtoa_r+0x36c>
 8002694:	4b86      	ldr	r3, [pc, #536]	@ (80028b0 <_dtoa_r+0x520>)
 8002696:	f007 020f 	and.w	r2, r7, #15
 800269a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800269e:	e9d3 3400 	ldrd	r3, r4, [r3]
 80026a2:	05f8      	lsls	r0, r7, #23
 80026a4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80026a8:	ea4f 1427 	mov.w	r4, r7, asr #4
 80026ac:	d516      	bpl.n	80026dc <_dtoa_r+0x34c>
 80026ae:	4b81      	ldr	r3, [pc, #516]	@ (80028b4 <_dtoa_r+0x524>)
 80026b0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80026b4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80026b8:	f7fe f984 	bl	80009c4 <__aeabi_ddiv>
 80026bc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80026c0:	f004 040f 	and.w	r4, r4, #15
 80026c4:	2603      	movs	r6, #3
 80026c6:	4d7b      	ldr	r5, [pc, #492]	@ (80028b4 <_dtoa_r+0x524>)
 80026c8:	b954      	cbnz	r4, 80026e0 <_dtoa_r+0x350>
 80026ca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80026ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80026d2:	f7fe f977 	bl	80009c4 <__aeabi_ddiv>
 80026d6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80026da:	e028      	b.n	800272e <_dtoa_r+0x39e>
 80026dc:	2602      	movs	r6, #2
 80026de:	e7f2      	b.n	80026c6 <_dtoa_r+0x336>
 80026e0:	07e1      	lsls	r1, r4, #31
 80026e2:	d508      	bpl.n	80026f6 <_dtoa_r+0x366>
 80026e4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80026e8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80026ec:	f7fe f840 	bl	8000770 <__aeabi_dmul>
 80026f0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80026f4:	3601      	adds	r6, #1
 80026f6:	1064      	asrs	r4, r4, #1
 80026f8:	3508      	adds	r5, #8
 80026fa:	e7e5      	b.n	80026c8 <_dtoa_r+0x338>
 80026fc:	f000 80d2 	beq.w	80028a4 <_dtoa_r+0x514>
 8002700:	427c      	negs	r4, r7
 8002702:	4b6b      	ldr	r3, [pc, #428]	@ (80028b0 <_dtoa_r+0x520>)
 8002704:	4d6b      	ldr	r5, [pc, #428]	@ (80028b4 <_dtoa_r+0x524>)
 8002706:	f004 020f 	and.w	r2, r4, #15
 800270a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800270e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002712:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002716:	f7fe f82b 	bl	8000770 <__aeabi_dmul>
 800271a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800271e:	1124      	asrs	r4, r4, #4
 8002720:	2300      	movs	r3, #0
 8002722:	2602      	movs	r6, #2
 8002724:	2c00      	cmp	r4, #0
 8002726:	f040 80b2 	bne.w	800288e <_dtoa_r+0x4fe>
 800272a:	2b00      	cmp	r3, #0
 800272c:	d1d3      	bne.n	80026d6 <_dtoa_r+0x346>
 800272e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002730:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002734:	2b00      	cmp	r3, #0
 8002736:	f000 80b7 	beq.w	80028a8 <_dtoa_r+0x518>
 800273a:	4b5f      	ldr	r3, [pc, #380]	@ (80028b8 <_dtoa_r+0x528>)
 800273c:	2200      	movs	r2, #0
 800273e:	4620      	mov	r0, r4
 8002740:	4629      	mov	r1, r5
 8002742:	f7fe fa87 	bl	8000c54 <__aeabi_dcmplt>
 8002746:	2800      	cmp	r0, #0
 8002748:	f000 80ae 	beq.w	80028a8 <_dtoa_r+0x518>
 800274c:	9b07      	ldr	r3, [sp, #28]
 800274e:	2b00      	cmp	r3, #0
 8002750:	f000 80aa 	beq.w	80028a8 <_dtoa_r+0x518>
 8002754:	9b08      	ldr	r3, [sp, #32]
 8002756:	2b00      	cmp	r3, #0
 8002758:	dd37      	ble.n	80027ca <_dtoa_r+0x43a>
 800275a:	1e7b      	subs	r3, r7, #1
 800275c:	9304      	str	r3, [sp, #16]
 800275e:	4620      	mov	r0, r4
 8002760:	4b56      	ldr	r3, [pc, #344]	@ (80028bc <_dtoa_r+0x52c>)
 8002762:	2200      	movs	r2, #0
 8002764:	4629      	mov	r1, r5
 8002766:	f7fe f803 	bl	8000770 <__aeabi_dmul>
 800276a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800276e:	9c08      	ldr	r4, [sp, #32]
 8002770:	3601      	adds	r6, #1
 8002772:	4630      	mov	r0, r6
 8002774:	f7fd ff92 	bl	800069c <__aeabi_i2d>
 8002778:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800277c:	f7fd fff8 	bl	8000770 <__aeabi_dmul>
 8002780:	4b4f      	ldr	r3, [pc, #316]	@ (80028c0 <_dtoa_r+0x530>)
 8002782:	2200      	movs	r2, #0
 8002784:	f7fd fe3e 	bl	8000404 <__adddf3>
 8002788:	4605      	mov	r5, r0
 800278a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800278e:	2c00      	cmp	r4, #0
 8002790:	f040 809a 	bne.w	80028c8 <_dtoa_r+0x538>
 8002794:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002798:	4b4a      	ldr	r3, [pc, #296]	@ (80028c4 <_dtoa_r+0x534>)
 800279a:	2200      	movs	r2, #0
 800279c:	f7fd fe30 	bl	8000400 <__aeabi_dsub>
 80027a0:	4602      	mov	r2, r0
 80027a2:	460b      	mov	r3, r1
 80027a4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80027a8:	462a      	mov	r2, r5
 80027aa:	4633      	mov	r3, r6
 80027ac:	f7fe fa70 	bl	8000c90 <__aeabi_dcmpgt>
 80027b0:	2800      	cmp	r0, #0
 80027b2:	f040 828e 	bne.w	8002cd2 <_dtoa_r+0x942>
 80027b6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80027ba:	462a      	mov	r2, r5
 80027bc:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80027c0:	f7fe fa48 	bl	8000c54 <__aeabi_dcmplt>
 80027c4:	2800      	cmp	r0, #0
 80027c6:	f040 8127 	bne.w	8002a18 <_dtoa_r+0x688>
 80027ca:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80027ce:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80027d2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80027d4:	2b00      	cmp	r3, #0
 80027d6:	f2c0 8163 	blt.w	8002aa0 <_dtoa_r+0x710>
 80027da:	2f0e      	cmp	r7, #14
 80027dc:	f300 8160 	bgt.w	8002aa0 <_dtoa_r+0x710>
 80027e0:	4b33      	ldr	r3, [pc, #204]	@ (80028b0 <_dtoa_r+0x520>)
 80027e2:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80027e6:	e9d3 3400 	ldrd	r3, r4, [r3]
 80027ea:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80027ee:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80027f0:	2b00      	cmp	r3, #0
 80027f2:	da03      	bge.n	80027fc <_dtoa_r+0x46c>
 80027f4:	9b07      	ldr	r3, [sp, #28]
 80027f6:	2b00      	cmp	r3, #0
 80027f8:	f340 8100 	ble.w	80029fc <_dtoa_r+0x66c>
 80027fc:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002800:	4656      	mov	r6, sl
 8002802:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002806:	4620      	mov	r0, r4
 8002808:	4629      	mov	r1, r5
 800280a:	f7fe f8db 	bl	80009c4 <__aeabi_ddiv>
 800280e:	f7fe fa5f 	bl	8000cd0 <__aeabi_d2iz>
 8002812:	4680      	mov	r8, r0
 8002814:	f7fd ff42 	bl	800069c <__aeabi_i2d>
 8002818:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800281c:	f7fd ffa8 	bl	8000770 <__aeabi_dmul>
 8002820:	4602      	mov	r2, r0
 8002822:	460b      	mov	r3, r1
 8002824:	4620      	mov	r0, r4
 8002826:	4629      	mov	r1, r5
 8002828:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800282c:	f7fd fde8 	bl	8000400 <__aeabi_dsub>
 8002830:	f806 4b01 	strb.w	r4, [r6], #1
 8002834:	9d07      	ldr	r5, [sp, #28]
 8002836:	eba6 040a 	sub.w	r4, r6, sl
 800283a:	42a5      	cmp	r5, r4
 800283c:	4602      	mov	r2, r0
 800283e:	460b      	mov	r3, r1
 8002840:	f040 8116 	bne.w	8002a70 <_dtoa_r+0x6e0>
 8002844:	f7fd fdde 	bl	8000404 <__adddf3>
 8002848:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800284c:	4604      	mov	r4, r0
 800284e:	460d      	mov	r5, r1
 8002850:	f7fe fa1e 	bl	8000c90 <__aeabi_dcmpgt>
 8002854:	2800      	cmp	r0, #0
 8002856:	f040 80f8 	bne.w	8002a4a <_dtoa_r+0x6ba>
 800285a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800285e:	4620      	mov	r0, r4
 8002860:	4629      	mov	r1, r5
 8002862:	f7fe f9ed 	bl	8000c40 <__aeabi_dcmpeq>
 8002866:	b118      	cbz	r0, 8002870 <_dtoa_r+0x4e0>
 8002868:	f018 0f01 	tst.w	r8, #1
 800286c:	f040 80ed 	bne.w	8002a4a <_dtoa_r+0x6ba>
 8002870:	4649      	mov	r1, r9
 8002872:	4658      	mov	r0, fp
 8002874:	f000 fc94 	bl	80031a0 <_Bfree>
 8002878:	2300      	movs	r3, #0
 800287a:	7033      	strb	r3, [r6, #0]
 800287c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800287e:	3701      	adds	r7, #1
 8002880:	601f      	str	r7, [r3, #0]
 8002882:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002884:	2b00      	cmp	r3, #0
 8002886:	f000 8320 	beq.w	8002eca <_dtoa_r+0xb3a>
 800288a:	601e      	str	r6, [r3, #0]
 800288c:	e31d      	b.n	8002eca <_dtoa_r+0xb3a>
 800288e:	07e2      	lsls	r2, r4, #31
 8002890:	d505      	bpl.n	800289e <_dtoa_r+0x50e>
 8002892:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002896:	f7fd ff6b 	bl	8000770 <__aeabi_dmul>
 800289a:	3601      	adds	r6, #1
 800289c:	2301      	movs	r3, #1
 800289e:	1064      	asrs	r4, r4, #1
 80028a0:	3508      	adds	r5, #8
 80028a2:	e73f      	b.n	8002724 <_dtoa_r+0x394>
 80028a4:	2602      	movs	r6, #2
 80028a6:	e742      	b.n	800272e <_dtoa_r+0x39e>
 80028a8:	9c07      	ldr	r4, [sp, #28]
 80028aa:	9704      	str	r7, [sp, #16]
 80028ac:	e761      	b.n	8002772 <_dtoa_r+0x3e2>
 80028ae:	bf00      	nop
 80028b0:	08004120 	.word	0x08004120
 80028b4:	080040f8 	.word	0x080040f8
 80028b8:	3ff00000 	.word	0x3ff00000
 80028bc:	40240000 	.word	0x40240000
 80028c0:	401c0000 	.word	0x401c0000
 80028c4:	40140000 	.word	0x40140000
 80028c8:	4b70      	ldr	r3, [pc, #448]	@ (8002a8c <_dtoa_r+0x6fc>)
 80028ca:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80028cc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80028d0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80028d4:	4454      	add	r4, sl
 80028d6:	2900      	cmp	r1, #0
 80028d8:	d045      	beq.n	8002966 <_dtoa_r+0x5d6>
 80028da:	496d      	ldr	r1, [pc, #436]	@ (8002a90 <_dtoa_r+0x700>)
 80028dc:	2000      	movs	r0, #0
 80028de:	f7fe f871 	bl	80009c4 <__aeabi_ddiv>
 80028e2:	4633      	mov	r3, r6
 80028e4:	462a      	mov	r2, r5
 80028e6:	f7fd fd8b 	bl	8000400 <__aeabi_dsub>
 80028ea:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80028ee:	4656      	mov	r6, sl
 80028f0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80028f4:	f7fe f9ec 	bl	8000cd0 <__aeabi_d2iz>
 80028f8:	4605      	mov	r5, r0
 80028fa:	f7fd fecf 	bl	800069c <__aeabi_i2d>
 80028fe:	4602      	mov	r2, r0
 8002900:	460b      	mov	r3, r1
 8002902:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002906:	f7fd fd7b 	bl	8000400 <__aeabi_dsub>
 800290a:	3530      	adds	r5, #48	@ 0x30
 800290c:	4602      	mov	r2, r0
 800290e:	460b      	mov	r3, r1
 8002910:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002914:	f806 5b01 	strb.w	r5, [r6], #1
 8002918:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800291c:	f7fe f99a 	bl	8000c54 <__aeabi_dcmplt>
 8002920:	2800      	cmp	r0, #0
 8002922:	d163      	bne.n	80029ec <_dtoa_r+0x65c>
 8002924:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002928:	495a      	ldr	r1, [pc, #360]	@ (8002a94 <_dtoa_r+0x704>)
 800292a:	2000      	movs	r0, #0
 800292c:	f7fd fd68 	bl	8000400 <__aeabi_dsub>
 8002930:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002934:	f7fe f98e 	bl	8000c54 <__aeabi_dcmplt>
 8002938:	2800      	cmp	r0, #0
 800293a:	f040 8087 	bne.w	8002a4c <_dtoa_r+0x6bc>
 800293e:	42a6      	cmp	r6, r4
 8002940:	f43f af43 	beq.w	80027ca <_dtoa_r+0x43a>
 8002944:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002948:	4b53      	ldr	r3, [pc, #332]	@ (8002a98 <_dtoa_r+0x708>)
 800294a:	2200      	movs	r2, #0
 800294c:	f7fd ff10 	bl	8000770 <__aeabi_dmul>
 8002950:	4b51      	ldr	r3, [pc, #324]	@ (8002a98 <_dtoa_r+0x708>)
 8002952:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002956:	2200      	movs	r2, #0
 8002958:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800295c:	f7fd ff08 	bl	8000770 <__aeabi_dmul>
 8002960:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002964:	e7c4      	b.n	80028f0 <_dtoa_r+0x560>
 8002966:	4631      	mov	r1, r6
 8002968:	4628      	mov	r0, r5
 800296a:	f7fd ff01 	bl	8000770 <__aeabi_dmul>
 800296e:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002972:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002974:	4656      	mov	r6, sl
 8002976:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800297a:	f7fe f9a9 	bl	8000cd0 <__aeabi_d2iz>
 800297e:	4605      	mov	r5, r0
 8002980:	f7fd fe8c 	bl	800069c <__aeabi_i2d>
 8002984:	4602      	mov	r2, r0
 8002986:	460b      	mov	r3, r1
 8002988:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800298c:	f7fd fd38 	bl	8000400 <__aeabi_dsub>
 8002990:	3530      	adds	r5, #48	@ 0x30
 8002992:	f806 5b01 	strb.w	r5, [r6], #1
 8002996:	4602      	mov	r2, r0
 8002998:	460b      	mov	r3, r1
 800299a:	42a6      	cmp	r6, r4
 800299c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80029a0:	f04f 0200 	mov.w	r2, #0
 80029a4:	d124      	bne.n	80029f0 <_dtoa_r+0x660>
 80029a6:	4b3a      	ldr	r3, [pc, #232]	@ (8002a90 <_dtoa_r+0x700>)
 80029a8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80029ac:	f7fd fd2a 	bl	8000404 <__adddf3>
 80029b0:	4602      	mov	r2, r0
 80029b2:	460b      	mov	r3, r1
 80029b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029b8:	f7fe f96a 	bl	8000c90 <__aeabi_dcmpgt>
 80029bc:	2800      	cmp	r0, #0
 80029be:	d145      	bne.n	8002a4c <_dtoa_r+0x6bc>
 80029c0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80029c4:	4932      	ldr	r1, [pc, #200]	@ (8002a90 <_dtoa_r+0x700>)
 80029c6:	2000      	movs	r0, #0
 80029c8:	f7fd fd1a 	bl	8000400 <__aeabi_dsub>
 80029cc:	4602      	mov	r2, r0
 80029ce:	460b      	mov	r3, r1
 80029d0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029d4:	f7fe f93e 	bl	8000c54 <__aeabi_dcmplt>
 80029d8:	2800      	cmp	r0, #0
 80029da:	f43f aef6 	beq.w	80027ca <_dtoa_r+0x43a>
 80029de:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80029e0:	1e73      	subs	r3, r6, #1
 80029e2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80029e4:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80029e8:	2b30      	cmp	r3, #48	@ 0x30
 80029ea:	d0f8      	beq.n	80029de <_dtoa_r+0x64e>
 80029ec:	9f04      	ldr	r7, [sp, #16]
 80029ee:	e73f      	b.n	8002870 <_dtoa_r+0x4e0>
 80029f0:	4b29      	ldr	r3, [pc, #164]	@ (8002a98 <_dtoa_r+0x708>)
 80029f2:	f7fd febd 	bl	8000770 <__aeabi_dmul>
 80029f6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80029fa:	e7bc      	b.n	8002976 <_dtoa_r+0x5e6>
 80029fc:	d10c      	bne.n	8002a18 <_dtoa_r+0x688>
 80029fe:	4b27      	ldr	r3, [pc, #156]	@ (8002a9c <_dtoa_r+0x70c>)
 8002a00:	2200      	movs	r2, #0
 8002a02:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002a06:	f7fd feb3 	bl	8000770 <__aeabi_dmul>
 8002a0a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002a0e:	f7fe f935 	bl	8000c7c <__aeabi_dcmpge>
 8002a12:	2800      	cmp	r0, #0
 8002a14:	f000 815b 	beq.w	8002cce <_dtoa_r+0x93e>
 8002a18:	2400      	movs	r4, #0
 8002a1a:	4625      	mov	r5, r4
 8002a1c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002a1e:	43db      	mvns	r3, r3
 8002a20:	9304      	str	r3, [sp, #16]
 8002a22:	4656      	mov	r6, sl
 8002a24:	2700      	movs	r7, #0
 8002a26:	4621      	mov	r1, r4
 8002a28:	4658      	mov	r0, fp
 8002a2a:	f000 fbb9 	bl	80031a0 <_Bfree>
 8002a2e:	2d00      	cmp	r5, #0
 8002a30:	d0dc      	beq.n	80029ec <_dtoa_r+0x65c>
 8002a32:	b12f      	cbz	r7, 8002a40 <_dtoa_r+0x6b0>
 8002a34:	42af      	cmp	r7, r5
 8002a36:	d003      	beq.n	8002a40 <_dtoa_r+0x6b0>
 8002a38:	4639      	mov	r1, r7
 8002a3a:	4658      	mov	r0, fp
 8002a3c:	f000 fbb0 	bl	80031a0 <_Bfree>
 8002a40:	4629      	mov	r1, r5
 8002a42:	4658      	mov	r0, fp
 8002a44:	f000 fbac 	bl	80031a0 <_Bfree>
 8002a48:	e7d0      	b.n	80029ec <_dtoa_r+0x65c>
 8002a4a:	9704      	str	r7, [sp, #16]
 8002a4c:	4633      	mov	r3, r6
 8002a4e:	461e      	mov	r6, r3
 8002a50:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002a54:	2a39      	cmp	r2, #57	@ 0x39
 8002a56:	d107      	bne.n	8002a68 <_dtoa_r+0x6d8>
 8002a58:	459a      	cmp	sl, r3
 8002a5a:	d1f8      	bne.n	8002a4e <_dtoa_r+0x6be>
 8002a5c:	9a04      	ldr	r2, [sp, #16]
 8002a5e:	3201      	adds	r2, #1
 8002a60:	9204      	str	r2, [sp, #16]
 8002a62:	2230      	movs	r2, #48	@ 0x30
 8002a64:	f88a 2000 	strb.w	r2, [sl]
 8002a68:	781a      	ldrb	r2, [r3, #0]
 8002a6a:	3201      	adds	r2, #1
 8002a6c:	701a      	strb	r2, [r3, #0]
 8002a6e:	e7bd      	b.n	80029ec <_dtoa_r+0x65c>
 8002a70:	4b09      	ldr	r3, [pc, #36]	@ (8002a98 <_dtoa_r+0x708>)
 8002a72:	2200      	movs	r2, #0
 8002a74:	f7fd fe7c 	bl	8000770 <__aeabi_dmul>
 8002a78:	2200      	movs	r2, #0
 8002a7a:	2300      	movs	r3, #0
 8002a7c:	4604      	mov	r4, r0
 8002a7e:	460d      	mov	r5, r1
 8002a80:	f7fe f8de 	bl	8000c40 <__aeabi_dcmpeq>
 8002a84:	2800      	cmp	r0, #0
 8002a86:	f43f aebc 	beq.w	8002802 <_dtoa_r+0x472>
 8002a8a:	e6f1      	b.n	8002870 <_dtoa_r+0x4e0>
 8002a8c:	08004120 	.word	0x08004120
 8002a90:	3fe00000 	.word	0x3fe00000
 8002a94:	3ff00000 	.word	0x3ff00000
 8002a98:	40240000 	.word	0x40240000
 8002a9c:	40140000 	.word	0x40140000
 8002aa0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002aa2:	2a00      	cmp	r2, #0
 8002aa4:	f000 80db 	beq.w	8002c5e <_dtoa_r+0x8ce>
 8002aa8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8002aaa:	2a01      	cmp	r2, #1
 8002aac:	f300 80bf 	bgt.w	8002c2e <_dtoa_r+0x89e>
 8002ab0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002ab2:	2a00      	cmp	r2, #0
 8002ab4:	f000 80b7 	beq.w	8002c26 <_dtoa_r+0x896>
 8002ab8:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002abc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002abe:	4646      	mov	r6, r8
 8002ac0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002ac2:	2101      	movs	r1, #1
 8002ac4:	441a      	add	r2, r3
 8002ac6:	4658      	mov	r0, fp
 8002ac8:	4498      	add	r8, r3
 8002aca:	9209      	str	r2, [sp, #36]	@ 0x24
 8002acc:	f000 fc1c 	bl	8003308 <__i2b>
 8002ad0:	4605      	mov	r5, r0
 8002ad2:	b15e      	cbz	r6, 8002aec <_dtoa_r+0x75c>
 8002ad4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	dd08      	ble.n	8002aec <_dtoa_r+0x75c>
 8002ada:	42b3      	cmp	r3, r6
 8002adc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002ade:	bfa8      	it	ge
 8002ae0:	4633      	movge	r3, r6
 8002ae2:	eba8 0803 	sub.w	r8, r8, r3
 8002ae6:	1af6      	subs	r6, r6, r3
 8002ae8:	1ad3      	subs	r3, r2, r3
 8002aea:	9309      	str	r3, [sp, #36]	@ 0x24
 8002aec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002aee:	b1f3      	cbz	r3, 8002b2e <_dtoa_r+0x79e>
 8002af0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002af2:	2b00      	cmp	r3, #0
 8002af4:	f000 80b7 	beq.w	8002c66 <_dtoa_r+0x8d6>
 8002af8:	b18c      	cbz	r4, 8002b1e <_dtoa_r+0x78e>
 8002afa:	4629      	mov	r1, r5
 8002afc:	4622      	mov	r2, r4
 8002afe:	4658      	mov	r0, fp
 8002b00:	f000 fcc2 	bl	8003488 <__pow5mult>
 8002b04:	464a      	mov	r2, r9
 8002b06:	4601      	mov	r1, r0
 8002b08:	4605      	mov	r5, r0
 8002b0a:	4658      	mov	r0, fp
 8002b0c:	f000 fc12 	bl	8003334 <__multiply>
 8002b10:	4649      	mov	r1, r9
 8002b12:	9004      	str	r0, [sp, #16]
 8002b14:	4658      	mov	r0, fp
 8002b16:	f000 fb43 	bl	80031a0 <_Bfree>
 8002b1a:	9b04      	ldr	r3, [sp, #16]
 8002b1c:	4699      	mov	r9, r3
 8002b1e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002b20:	1b1a      	subs	r2, r3, r4
 8002b22:	d004      	beq.n	8002b2e <_dtoa_r+0x79e>
 8002b24:	4649      	mov	r1, r9
 8002b26:	4658      	mov	r0, fp
 8002b28:	f000 fcae 	bl	8003488 <__pow5mult>
 8002b2c:	4681      	mov	r9, r0
 8002b2e:	2101      	movs	r1, #1
 8002b30:	4658      	mov	r0, fp
 8002b32:	f000 fbe9 	bl	8003308 <__i2b>
 8002b36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002b38:	4604      	mov	r4, r0
 8002b3a:	2b00      	cmp	r3, #0
 8002b3c:	f000 81c9 	beq.w	8002ed2 <_dtoa_r+0xb42>
 8002b40:	461a      	mov	r2, r3
 8002b42:	4601      	mov	r1, r0
 8002b44:	4658      	mov	r0, fp
 8002b46:	f000 fc9f 	bl	8003488 <__pow5mult>
 8002b4a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002b4c:	2b01      	cmp	r3, #1
 8002b4e:	4604      	mov	r4, r0
 8002b50:	f300 808f 	bgt.w	8002c72 <_dtoa_r+0x8e2>
 8002b54:	9b02      	ldr	r3, [sp, #8]
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	f040 8087 	bne.w	8002c6a <_dtoa_r+0x8da>
 8002b5c:	9b03      	ldr	r3, [sp, #12]
 8002b5e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	f040 8083 	bne.w	8002c6e <_dtoa_r+0x8de>
 8002b68:	9b03      	ldr	r3, [sp, #12]
 8002b6a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002b6e:	0d1b      	lsrs	r3, r3, #20
 8002b70:	051b      	lsls	r3, r3, #20
 8002b72:	b12b      	cbz	r3, 8002b80 <_dtoa_r+0x7f0>
 8002b74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002b76:	3301      	adds	r3, #1
 8002b78:	9309      	str	r3, [sp, #36]	@ 0x24
 8002b7a:	f108 0801 	add.w	r8, r8, #1
 8002b7e:	2301      	movs	r3, #1
 8002b80:	930a      	str	r3, [sp, #40]	@ 0x28
 8002b82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002b84:	2b00      	cmp	r3, #0
 8002b86:	f000 81aa 	beq.w	8002ede <_dtoa_r+0xb4e>
 8002b8a:	6923      	ldr	r3, [r4, #16]
 8002b8c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002b90:	6918      	ldr	r0, [r3, #16]
 8002b92:	f000 fb6d 	bl	8003270 <__hi0bits>
 8002b96:	f1c0 0020 	rsb	r0, r0, #32
 8002b9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002b9c:	4418      	add	r0, r3
 8002b9e:	f010 001f 	ands.w	r0, r0, #31
 8002ba2:	d071      	beq.n	8002c88 <_dtoa_r+0x8f8>
 8002ba4:	f1c0 0320 	rsb	r3, r0, #32
 8002ba8:	2b04      	cmp	r3, #4
 8002baa:	dd65      	ble.n	8002c78 <_dtoa_r+0x8e8>
 8002bac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002bae:	f1c0 001c 	rsb	r0, r0, #28
 8002bb2:	4403      	add	r3, r0
 8002bb4:	4480      	add	r8, r0
 8002bb6:	4406      	add	r6, r0
 8002bb8:	9309      	str	r3, [sp, #36]	@ 0x24
 8002bba:	f1b8 0f00 	cmp.w	r8, #0
 8002bbe:	dd05      	ble.n	8002bcc <_dtoa_r+0x83c>
 8002bc0:	4649      	mov	r1, r9
 8002bc2:	4642      	mov	r2, r8
 8002bc4:	4658      	mov	r0, fp
 8002bc6:	f000 fcb9 	bl	800353c <__lshift>
 8002bca:	4681      	mov	r9, r0
 8002bcc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	dd05      	ble.n	8002bde <_dtoa_r+0x84e>
 8002bd2:	4621      	mov	r1, r4
 8002bd4:	461a      	mov	r2, r3
 8002bd6:	4658      	mov	r0, fp
 8002bd8:	f000 fcb0 	bl	800353c <__lshift>
 8002bdc:	4604      	mov	r4, r0
 8002bde:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002be0:	2b00      	cmp	r3, #0
 8002be2:	d053      	beq.n	8002c8c <_dtoa_r+0x8fc>
 8002be4:	4621      	mov	r1, r4
 8002be6:	4648      	mov	r0, r9
 8002be8:	f000 fd14 	bl	8003614 <__mcmp>
 8002bec:	2800      	cmp	r0, #0
 8002bee:	da4d      	bge.n	8002c8c <_dtoa_r+0x8fc>
 8002bf0:	1e7b      	subs	r3, r7, #1
 8002bf2:	9304      	str	r3, [sp, #16]
 8002bf4:	4649      	mov	r1, r9
 8002bf6:	2300      	movs	r3, #0
 8002bf8:	220a      	movs	r2, #10
 8002bfa:	4658      	mov	r0, fp
 8002bfc:	f000 faf2 	bl	80031e4 <__multadd>
 8002c00:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002c02:	4681      	mov	r9, r0
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	f000 816c 	beq.w	8002ee2 <_dtoa_r+0xb52>
 8002c0a:	2300      	movs	r3, #0
 8002c0c:	4629      	mov	r1, r5
 8002c0e:	220a      	movs	r2, #10
 8002c10:	4658      	mov	r0, fp
 8002c12:	f000 fae7 	bl	80031e4 <__multadd>
 8002c16:	9b08      	ldr	r3, [sp, #32]
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	4605      	mov	r5, r0
 8002c1c:	dc61      	bgt.n	8002ce2 <_dtoa_r+0x952>
 8002c1e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002c20:	2b02      	cmp	r3, #2
 8002c22:	dc3b      	bgt.n	8002c9c <_dtoa_r+0x90c>
 8002c24:	e05d      	b.n	8002ce2 <_dtoa_r+0x952>
 8002c26:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002c28:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002c2c:	e746      	b.n	8002abc <_dtoa_r+0x72c>
 8002c2e:	9b07      	ldr	r3, [sp, #28]
 8002c30:	1e5c      	subs	r4, r3, #1
 8002c32:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002c34:	42a3      	cmp	r3, r4
 8002c36:	bfbf      	itttt	lt
 8002c38:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8002c3a:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8002c3c:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8002c3e:	1ae3      	sublt	r3, r4, r3
 8002c40:	bfb4      	ite	lt
 8002c42:	18d2      	addlt	r2, r2, r3
 8002c44:	1b1c      	subge	r4, r3, r4
 8002c46:	9b07      	ldr	r3, [sp, #28]
 8002c48:	bfbc      	itt	lt
 8002c4a:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8002c4c:	2400      	movlt	r4, #0
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	bfb5      	itete	lt
 8002c52:	eba8 0603 	sublt.w	r6, r8, r3
 8002c56:	9b07      	ldrge	r3, [sp, #28]
 8002c58:	2300      	movlt	r3, #0
 8002c5a:	4646      	movge	r6, r8
 8002c5c:	e730      	b.n	8002ac0 <_dtoa_r+0x730>
 8002c5e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002c60:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8002c62:	4646      	mov	r6, r8
 8002c64:	e735      	b.n	8002ad2 <_dtoa_r+0x742>
 8002c66:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002c68:	e75c      	b.n	8002b24 <_dtoa_r+0x794>
 8002c6a:	2300      	movs	r3, #0
 8002c6c:	e788      	b.n	8002b80 <_dtoa_r+0x7f0>
 8002c6e:	9b02      	ldr	r3, [sp, #8]
 8002c70:	e786      	b.n	8002b80 <_dtoa_r+0x7f0>
 8002c72:	2300      	movs	r3, #0
 8002c74:	930a      	str	r3, [sp, #40]	@ 0x28
 8002c76:	e788      	b.n	8002b8a <_dtoa_r+0x7fa>
 8002c78:	d09f      	beq.n	8002bba <_dtoa_r+0x82a>
 8002c7a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002c7c:	331c      	adds	r3, #28
 8002c7e:	441a      	add	r2, r3
 8002c80:	4498      	add	r8, r3
 8002c82:	441e      	add	r6, r3
 8002c84:	9209      	str	r2, [sp, #36]	@ 0x24
 8002c86:	e798      	b.n	8002bba <_dtoa_r+0x82a>
 8002c88:	4603      	mov	r3, r0
 8002c8a:	e7f6      	b.n	8002c7a <_dtoa_r+0x8ea>
 8002c8c:	9b07      	ldr	r3, [sp, #28]
 8002c8e:	9704      	str	r7, [sp, #16]
 8002c90:	2b00      	cmp	r3, #0
 8002c92:	dc20      	bgt.n	8002cd6 <_dtoa_r+0x946>
 8002c94:	9308      	str	r3, [sp, #32]
 8002c96:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002c98:	2b02      	cmp	r3, #2
 8002c9a:	dd1e      	ble.n	8002cda <_dtoa_r+0x94a>
 8002c9c:	9b08      	ldr	r3, [sp, #32]
 8002c9e:	2b00      	cmp	r3, #0
 8002ca0:	f47f aebc 	bne.w	8002a1c <_dtoa_r+0x68c>
 8002ca4:	4621      	mov	r1, r4
 8002ca6:	2205      	movs	r2, #5
 8002ca8:	4658      	mov	r0, fp
 8002caa:	f000 fa9b 	bl	80031e4 <__multadd>
 8002cae:	4601      	mov	r1, r0
 8002cb0:	4604      	mov	r4, r0
 8002cb2:	4648      	mov	r0, r9
 8002cb4:	f000 fcae 	bl	8003614 <__mcmp>
 8002cb8:	2800      	cmp	r0, #0
 8002cba:	f77f aeaf 	ble.w	8002a1c <_dtoa_r+0x68c>
 8002cbe:	4656      	mov	r6, sl
 8002cc0:	2331      	movs	r3, #49	@ 0x31
 8002cc2:	f806 3b01 	strb.w	r3, [r6], #1
 8002cc6:	9b04      	ldr	r3, [sp, #16]
 8002cc8:	3301      	adds	r3, #1
 8002cca:	9304      	str	r3, [sp, #16]
 8002ccc:	e6aa      	b.n	8002a24 <_dtoa_r+0x694>
 8002cce:	9c07      	ldr	r4, [sp, #28]
 8002cd0:	9704      	str	r7, [sp, #16]
 8002cd2:	4625      	mov	r5, r4
 8002cd4:	e7f3      	b.n	8002cbe <_dtoa_r+0x92e>
 8002cd6:	9b07      	ldr	r3, [sp, #28]
 8002cd8:	9308      	str	r3, [sp, #32]
 8002cda:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002cdc:	2b00      	cmp	r3, #0
 8002cde:	f000 8104 	beq.w	8002eea <_dtoa_r+0xb5a>
 8002ce2:	2e00      	cmp	r6, #0
 8002ce4:	dd05      	ble.n	8002cf2 <_dtoa_r+0x962>
 8002ce6:	4629      	mov	r1, r5
 8002ce8:	4632      	mov	r2, r6
 8002cea:	4658      	mov	r0, fp
 8002cec:	f000 fc26 	bl	800353c <__lshift>
 8002cf0:	4605      	mov	r5, r0
 8002cf2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002cf4:	2b00      	cmp	r3, #0
 8002cf6:	d05a      	beq.n	8002dae <_dtoa_r+0xa1e>
 8002cf8:	6869      	ldr	r1, [r5, #4]
 8002cfa:	4658      	mov	r0, fp
 8002cfc:	f000 fa10 	bl	8003120 <_Balloc>
 8002d00:	4606      	mov	r6, r0
 8002d02:	b928      	cbnz	r0, 8002d10 <_dtoa_r+0x980>
 8002d04:	4b84      	ldr	r3, [pc, #528]	@ (8002f18 <_dtoa_r+0xb88>)
 8002d06:	4602      	mov	r2, r0
 8002d08:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002d0c:	f7ff bb54 	b.w	80023b8 <_dtoa_r+0x28>
 8002d10:	692a      	ldr	r2, [r5, #16]
 8002d12:	3202      	adds	r2, #2
 8002d14:	0092      	lsls	r2, r2, #2
 8002d16:	f105 010c 	add.w	r1, r5, #12
 8002d1a:	300c      	adds	r0, #12
 8002d1c:	f000 fe38 	bl	8003990 <memcpy>
 8002d20:	2201      	movs	r2, #1
 8002d22:	4631      	mov	r1, r6
 8002d24:	4658      	mov	r0, fp
 8002d26:	f000 fc09 	bl	800353c <__lshift>
 8002d2a:	f10a 0301 	add.w	r3, sl, #1
 8002d2e:	9307      	str	r3, [sp, #28]
 8002d30:	9b08      	ldr	r3, [sp, #32]
 8002d32:	4453      	add	r3, sl
 8002d34:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002d36:	9b02      	ldr	r3, [sp, #8]
 8002d38:	f003 0301 	and.w	r3, r3, #1
 8002d3c:	462f      	mov	r7, r5
 8002d3e:	930a      	str	r3, [sp, #40]	@ 0x28
 8002d40:	4605      	mov	r5, r0
 8002d42:	9b07      	ldr	r3, [sp, #28]
 8002d44:	4621      	mov	r1, r4
 8002d46:	3b01      	subs	r3, #1
 8002d48:	4648      	mov	r0, r9
 8002d4a:	9302      	str	r3, [sp, #8]
 8002d4c:	f7ff fa95 	bl	800227a <quorem>
 8002d50:	4639      	mov	r1, r7
 8002d52:	9008      	str	r0, [sp, #32]
 8002d54:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8002d58:	4648      	mov	r0, r9
 8002d5a:	f000 fc5b 	bl	8003614 <__mcmp>
 8002d5e:	462a      	mov	r2, r5
 8002d60:	9009      	str	r0, [sp, #36]	@ 0x24
 8002d62:	4621      	mov	r1, r4
 8002d64:	4658      	mov	r0, fp
 8002d66:	f000 fc71 	bl	800364c <__mdiff>
 8002d6a:	68c2      	ldr	r2, [r0, #12]
 8002d6c:	4606      	mov	r6, r0
 8002d6e:	bb02      	cbnz	r2, 8002db2 <_dtoa_r+0xa22>
 8002d70:	4601      	mov	r1, r0
 8002d72:	4648      	mov	r0, r9
 8002d74:	f000 fc4e 	bl	8003614 <__mcmp>
 8002d78:	4602      	mov	r2, r0
 8002d7a:	4631      	mov	r1, r6
 8002d7c:	4658      	mov	r0, fp
 8002d7e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002d80:	f000 fa0e 	bl	80031a0 <_Bfree>
 8002d84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002d86:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8002d88:	9e07      	ldr	r6, [sp, #28]
 8002d8a:	ea43 0102 	orr.w	r1, r3, r2
 8002d8e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002d90:	4319      	orrs	r1, r3
 8002d92:	d110      	bne.n	8002db6 <_dtoa_r+0xa26>
 8002d94:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002d98:	d029      	beq.n	8002dee <_dtoa_r+0xa5e>
 8002d9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002d9c:	2b00      	cmp	r3, #0
 8002d9e:	dd02      	ble.n	8002da6 <_dtoa_r+0xa16>
 8002da0:	9b08      	ldr	r3, [sp, #32]
 8002da2:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8002da6:	9b02      	ldr	r3, [sp, #8]
 8002da8:	f883 8000 	strb.w	r8, [r3]
 8002dac:	e63b      	b.n	8002a26 <_dtoa_r+0x696>
 8002dae:	4628      	mov	r0, r5
 8002db0:	e7bb      	b.n	8002d2a <_dtoa_r+0x99a>
 8002db2:	2201      	movs	r2, #1
 8002db4:	e7e1      	b.n	8002d7a <_dtoa_r+0x9ea>
 8002db6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	db04      	blt.n	8002dc6 <_dtoa_r+0xa36>
 8002dbc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8002dbe:	430b      	orrs	r3, r1
 8002dc0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8002dc2:	430b      	orrs	r3, r1
 8002dc4:	d120      	bne.n	8002e08 <_dtoa_r+0xa78>
 8002dc6:	2a00      	cmp	r2, #0
 8002dc8:	dded      	ble.n	8002da6 <_dtoa_r+0xa16>
 8002dca:	4649      	mov	r1, r9
 8002dcc:	2201      	movs	r2, #1
 8002dce:	4658      	mov	r0, fp
 8002dd0:	f000 fbb4 	bl	800353c <__lshift>
 8002dd4:	4621      	mov	r1, r4
 8002dd6:	4681      	mov	r9, r0
 8002dd8:	f000 fc1c 	bl	8003614 <__mcmp>
 8002ddc:	2800      	cmp	r0, #0
 8002dde:	dc03      	bgt.n	8002de8 <_dtoa_r+0xa58>
 8002de0:	d1e1      	bne.n	8002da6 <_dtoa_r+0xa16>
 8002de2:	f018 0f01 	tst.w	r8, #1
 8002de6:	d0de      	beq.n	8002da6 <_dtoa_r+0xa16>
 8002de8:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002dec:	d1d8      	bne.n	8002da0 <_dtoa_r+0xa10>
 8002dee:	9a02      	ldr	r2, [sp, #8]
 8002df0:	2339      	movs	r3, #57	@ 0x39
 8002df2:	7013      	strb	r3, [r2, #0]
 8002df4:	4633      	mov	r3, r6
 8002df6:	461e      	mov	r6, r3
 8002df8:	3b01      	subs	r3, #1
 8002dfa:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8002dfe:	2a39      	cmp	r2, #57	@ 0x39
 8002e00:	d052      	beq.n	8002ea8 <_dtoa_r+0xb18>
 8002e02:	3201      	adds	r2, #1
 8002e04:	701a      	strb	r2, [r3, #0]
 8002e06:	e60e      	b.n	8002a26 <_dtoa_r+0x696>
 8002e08:	2a00      	cmp	r2, #0
 8002e0a:	dd07      	ble.n	8002e1c <_dtoa_r+0xa8c>
 8002e0c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002e10:	d0ed      	beq.n	8002dee <_dtoa_r+0xa5e>
 8002e12:	9a02      	ldr	r2, [sp, #8]
 8002e14:	f108 0301 	add.w	r3, r8, #1
 8002e18:	7013      	strb	r3, [r2, #0]
 8002e1a:	e604      	b.n	8002a26 <_dtoa_r+0x696>
 8002e1c:	9b07      	ldr	r3, [sp, #28]
 8002e1e:	9a07      	ldr	r2, [sp, #28]
 8002e20:	f803 8c01 	strb.w	r8, [r3, #-1]
 8002e24:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002e26:	4293      	cmp	r3, r2
 8002e28:	d028      	beq.n	8002e7c <_dtoa_r+0xaec>
 8002e2a:	4649      	mov	r1, r9
 8002e2c:	2300      	movs	r3, #0
 8002e2e:	220a      	movs	r2, #10
 8002e30:	4658      	mov	r0, fp
 8002e32:	f000 f9d7 	bl	80031e4 <__multadd>
 8002e36:	42af      	cmp	r7, r5
 8002e38:	4681      	mov	r9, r0
 8002e3a:	f04f 0300 	mov.w	r3, #0
 8002e3e:	f04f 020a 	mov.w	r2, #10
 8002e42:	4639      	mov	r1, r7
 8002e44:	4658      	mov	r0, fp
 8002e46:	d107      	bne.n	8002e58 <_dtoa_r+0xac8>
 8002e48:	f000 f9cc 	bl	80031e4 <__multadd>
 8002e4c:	4607      	mov	r7, r0
 8002e4e:	4605      	mov	r5, r0
 8002e50:	9b07      	ldr	r3, [sp, #28]
 8002e52:	3301      	adds	r3, #1
 8002e54:	9307      	str	r3, [sp, #28]
 8002e56:	e774      	b.n	8002d42 <_dtoa_r+0x9b2>
 8002e58:	f000 f9c4 	bl	80031e4 <__multadd>
 8002e5c:	4629      	mov	r1, r5
 8002e5e:	4607      	mov	r7, r0
 8002e60:	2300      	movs	r3, #0
 8002e62:	220a      	movs	r2, #10
 8002e64:	4658      	mov	r0, fp
 8002e66:	f000 f9bd 	bl	80031e4 <__multadd>
 8002e6a:	4605      	mov	r5, r0
 8002e6c:	e7f0      	b.n	8002e50 <_dtoa_r+0xac0>
 8002e6e:	9b08      	ldr	r3, [sp, #32]
 8002e70:	2b00      	cmp	r3, #0
 8002e72:	bfcc      	ite	gt
 8002e74:	461e      	movgt	r6, r3
 8002e76:	2601      	movle	r6, #1
 8002e78:	4456      	add	r6, sl
 8002e7a:	2700      	movs	r7, #0
 8002e7c:	4649      	mov	r1, r9
 8002e7e:	2201      	movs	r2, #1
 8002e80:	4658      	mov	r0, fp
 8002e82:	f000 fb5b 	bl	800353c <__lshift>
 8002e86:	4621      	mov	r1, r4
 8002e88:	4681      	mov	r9, r0
 8002e8a:	f000 fbc3 	bl	8003614 <__mcmp>
 8002e8e:	2800      	cmp	r0, #0
 8002e90:	dcb0      	bgt.n	8002df4 <_dtoa_r+0xa64>
 8002e92:	d102      	bne.n	8002e9a <_dtoa_r+0xb0a>
 8002e94:	f018 0f01 	tst.w	r8, #1
 8002e98:	d1ac      	bne.n	8002df4 <_dtoa_r+0xa64>
 8002e9a:	4633      	mov	r3, r6
 8002e9c:	461e      	mov	r6, r3
 8002e9e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002ea2:	2a30      	cmp	r2, #48	@ 0x30
 8002ea4:	d0fa      	beq.n	8002e9c <_dtoa_r+0xb0c>
 8002ea6:	e5be      	b.n	8002a26 <_dtoa_r+0x696>
 8002ea8:	459a      	cmp	sl, r3
 8002eaa:	d1a4      	bne.n	8002df6 <_dtoa_r+0xa66>
 8002eac:	9b04      	ldr	r3, [sp, #16]
 8002eae:	3301      	adds	r3, #1
 8002eb0:	9304      	str	r3, [sp, #16]
 8002eb2:	2331      	movs	r3, #49	@ 0x31
 8002eb4:	f88a 3000 	strb.w	r3, [sl]
 8002eb8:	e5b5      	b.n	8002a26 <_dtoa_r+0x696>
 8002eba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002ebc:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8002f1c <_dtoa_r+0xb8c>
 8002ec0:	b11b      	cbz	r3, 8002eca <_dtoa_r+0xb3a>
 8002ec2:	f10a 0308 	add.w	r3, sl, #8
 8002ec6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8002ec8:	6013      	str	r3, [r2, #0]
 8002eca:	4650      	mov	r0, sl
 8002ecc:	b017      	add	sp, #92	@ 0x5c
 8002ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ed2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002ed4:	2b01      	cmp	r3, #1
 8002ed6:	f77f ae3d 	ble.w	8002b54 <_dtoa_r+0x7c4>
 8002eda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002edc:	930a      	str	r3, [sp, #40]	@ 0x28
 8002ede:	2001      	movs	r0, #1
 8002ee0:	e65b      	b.n	8002b9a <_dtoa_r+0x80a>
 8002ee2:	9b08      	ldr	r3, [sp, #32]
 8002ee4:	2b00      	cmp	r3, #0
 8002ee6:	f77f aed6 	ble.w	8002c96 <_dtoa_r+0x906>
 8002eea:	4656      	mov	r6, sl
 8002eec:	4621      	mov	r1, r4
 8002eee:	4648      	mov	r0, r9
 8002ef0:	f7ff f9c3 	bl	800227a <quorem>
 8002ef4:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8002ef8:	f806 8b01 	strb.w	r8, [r6], #1
 8002efc:	9b08      	ldr	r3, [sp, #32]
 8002efe:	eba6 020a 	sub.w	r2, r6, sl
 8002f02:	4293      	cmp	r3, r2
 8002f04:	ddb3      	ble.n	8002e6e <_dtoa_r+0xade>
 8002f06:	4649      	mov	r1, r9
 8002f08:	2300      	movs	r3, #0
 8002f0a:	220a      	movs	r2, #10
 8002f0c:	4658      	mov	r0, fp
 8002f0e:	f000 f969 	bl	80031e4 <__multadd>
 8002f12:	4681      	mov	r9, r0
 8002f14:	e7ea      	b.n	8002eec <_dtoa_r+0xb5c>
 8002f16:	bf00      	nop
 8002f18:	08004080 	.word	0x08004080
 8002f1c:	08004004 	.word	0x08004004

08002f20 <_free_r>:
 8002f20:	b538      	push	{r3, r4, r5, lr}
 8002f22:	4605      	mov	r5, r0
 8002f24:	2900      	cmp	r1, #0
 8002f26:	d041      	beq.n	8002fac <_free_r+0x8c>
 8002f28:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002f2c:	1f0c      	subs	r4, r1, #4
 8002f2e:	2b00      	cmp	r3, #0
 8002f30:	bfb8      	it	lt
 8002f32:	18e4      	addlt	r4, r4, r3
 8002f34:	f000 f8e8 	bl	8003108 <__malloc_lock>
 8002f38:	4a1d      	ldr	r2, [pc, #116]	@ (8002fb0 <_free_r+0x90>)
 8002f3a:	6813      	ldr	r3, [r2, #0]
 8002f3c:	b933      	cbnz	r3, 8002f4c <_free_r+0x2c>
 8002f3e:	6063      	str	r3, [r4, #4]
 8002f40:	6014      	str	r4, [r2, #0]
 8002f42:	4628      	mov	r0, r5
 8002f44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002f48:	f000 b8e4 	b.w	8003114 <__malloc_unlock>
 8002f4c:	42a3      	cmp	r3, r4
 8002f4e:	d908      	bls.n	8002f62 <_free_r+0x42>
 8002f50:	6820      	ldr	r0, [r4, #0]
 8002f52:	1821      	adds	r1, r4, r0
 8002f54:	428b      	cmp	r3, r1
 8002f56:	bf01      	itttt	eq
 8002f58:	6819      	ldreq	r1, [r3, #0]
 8002f5a:	685b      	ldreq	r3, [r3, #4]
 8002f5c:	1809      	addeq	r1, r1, r0
 8002f5e:	6021      	streq	r1, [r4, #0]
 8002f60:	e7ed      	b.n	8002f3e <_free_r+0x1e>
 8002f62:	461a      	mov	r2, r3
 8002f64:	685b      	ldr	r3, [r3, #4]
 8002f66:	b10b      	cbz	r3, 8002f6c <_free_r+0x4c>
 8002f68:	42a3      	cmp	r3, r4
 8002f6a:	d9fa      	bls.n	8002f62 <_free_r+0x42>
 8002f6c:	6811      	ldr	r1, [r2, #0]
 8002f6e:	1850      	adds	r0, r2, r1
 8002f70:	42a0      	cmp	r0, r4
 8002f72:	d10b      	bne.n	8002f8c <_free_r+0x6c>
 8002f74:	6820      	ldr	r0, [r4, #0]
 8002f76:	4401      	add	r1, r0
 8002f78:	1850      	adds	r0, r2, r1
 8002f7a:	4283      	cmp	r3, r0
 8002f7c:	6011      	str	r1, [r2, #0]
 8002f7e:	d1e0      	bne.n	8002f42 <_free_r+0x22>
 8002f80:	6818      	ldr	r0, [r3, #0]
 8002f82:	685b      	ldr	r3, [r3, #4]
 8002f84:	6053      	str	r3, [r2, #4]
 8002f86:	4408      	add	r0, r1
 8002f88:	6010      	str	r0, [r2, #0]
 8002f8a:	e7da      	b.n	8002f42 <_free_r+0x22>
 8002f8c:	d902      	bls.n	8002f94 <_free_r+0x74>
 8002f8e:	230c      	movs	r3, #12
 8002f90:	602b      	str	r3, [r5, #0]
 8002f92:	e7d6      	b.n	8002f42 <_free_r+0x22>
 8002f94:	6820      	ldr	r0, [r4, #0]
 8002f96:	1821      	adds	r1, r4, r0
 8002f98:	428b      	cmp	r3, r1
 8002f9a:	bf04      	itt	eq
 8002f9c:	6819      	ldreq	r1, [r3, #0]
 8002f9e:	685b      	ldreq	r3, [r3, #4]
 8002fa0:	6063      	str	r3, [r4, #4]
 8002fa2:	bf04      	itt	eq
 8002fa4:	1809      	addeq	r1, r1, r0
 8002fa6:	6021      	streq	r1, [r4, #0]
 8002fa8:	6054      	str	r4, [r2, #4]
 8002faa:	e7ca      	b.n	8002f42 <_free_r+0x22>
 8002fac:	bd38      	pop	{r3, r4, r5, pc}
 8002fae:	bf00      	nop
 8002fb0:	200003d4 	.word	0x200003d4

08002fb4 <malloc>:
 8002fb4:	4b02      	ldr	r3, [pc, #8]	@ (8002fc0 <malloc+0xc>)
 8002fb6:	4601      	mov	r1, r0
 8002fb8:	6818      	ldr	r0, [r3, #0]
 8002fba:	f000 b825 	b.w	8003008 <_malloc_r>
 8002fbe:	bf00      	nop
 8002fc0:	20000014 	.word	0x20000014

08002fc4 <sbrk_aligned>:
 8002fc4:	b570      	push	{r4, r5, r6, lr}
 8002fc6:	4e0f      	ldr	r6, [pc, #60]	@ (8003004 <sbrk_aligned+0x40>)
 8002fc8:	460c      	mov	r4, r1
 8002fca:	6831      	ldr	r1, [r6, #0]
 8002fcc:	4605      	mov	r5, r0
 8002fce:	b911      	cbnz	r1, 8002fd6 <sbrk_aligned+0x12>
 8002fd0:	f000 fcce 	bl	8003970 <_sbrk_r>
 8002fd4:	6030      	str	r0, [r6, #0]
 8002fd6:	4621      	mov	r1, r4
 8002fd8:	4628      	mov	r0, r5
 8002fda:	f000 fcc9 	bl	8003970 <_sbrk_r>
 8002fde:	1c43      	adds	r3, r0, #1
 8002fe0:	d103      	bne.n	8002fea <sbrk_aligned+0x26>
 8002fe2:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8002fe6:	4620      	mov	r0, r4
 8002fe8:	bd70      	pop	{r4, r5, r6, pc}
 8002fea:	1cc4      	adds	r4, r0, #3
 8002fec:	f024 0403 	bic.w	r4, r4, #3
 8002ff0:	42a0      	cmp	r0, r4
 8002ff2:	d0f8      	beq.n	8002fe6 <sbrk_aligned+0x22>
 8002ff4:	1a21      	subs	r1, r4, r0
 8002ff6:	4628      	mov	r0, r5
 8002ff8:	f000 fcba 	bl	8003970 <_sbrk_r>
 8002ffc:	3001      	adds	r0, #1
 8002ffe:	d1f2      	bne.n	8002fe6 <sbrk_aligned+0x22>
 8003000:	e7ef      	b.n	8002fe2 <sbrk_aligned+0x1e>
 8003002:	bf00      	nop
 8003004:	200003d0 	.word	0x200003d0

08003008 <_malloc_r>:
 8003008:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800300c:	1ccd      	adds	r5, r1, #3
 800300e:	f025 0503 	bic.w	r5, r5, #3
 8003012:	3508      	adds	r5, #8
 8003014:	2d0c      	cmp	r5, #12
 8003016:	bf38      	it	cc
 8003018:	250c      	movcc	r5, #12
 800301a:	2d00      	cmp	r5, #0
 800301c:	4606      	mov	r6, r0
 800301e:	db01      	blt.n	8003024 <_malloc_r+0x1c>
 8003020:	42a9      	cmp	r1, r5
 8003022:	d904      	bls.n	800302e <_malloc_r+0x26>
 8003024:	230c      	movs	r3, #12
 8003026:	6033      	str	r3, [r6, #0]
 8003028:	2000      	movs	r0, #0
 800302a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800302e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003104 <_malloc_r+0xfc>
 8003032:	f000 f869 	bl	8003108 <__malloc_lock>
 8003036:	f8d8 3000 	ldr.w	r3, [r8]
 800303a:	461c      	mov	r4, r3
 800303c:	bb44      	cbnz	r4, 8003090 <_malloc_r+0x88>
 800303e:	4629      	mov	r1, r5
 8003040:	4630      	mov	r0, r6
 8003042:	f7ff ffbf 	bl	8002fc4 <sbrk_aligned>
 8003046:	1c43      	adds	r3, r0, #1
 8003048:	4604      	mov	r4, r0
 800304a:	d158      	bne.n	80030fe <_malloc_r+0xf6>
 800304c:	f8d8 4000 	ldr.w	r4, [r8]
 8003050:	4627      	mov	r7, r4
 8003052:	2f00      	cmp	r7, #0
 8003054:	d143      	bne.n	80030de <_malloc_r+0xd6>
 8003056:	2c00      	cmp	r4, #0
 8003058:	d04b      	beq.n	80030f2 <_malloc_r+0xea>
 800305a:	6823      	ldr	r3, [r4, #0]
 800305c:	4639      	mov	r1, r7
 800305e:	4630      	mov	r0, r6
 8003060:	eb04 0903 	add.w	r9, r4, r3
 8003064:	f000 fc84 	bl	8003970 <_sbrk_r>
 8003068:	4581      	cmp	r9, r0
 800306a:	d142      	bne.n	80030f2 <_malloc_r+0xea>
 800306c:	6821      	ldr	r1, [r4, #0]
 800306e:	1a6d      	subs	r5, r5, r1
 8003070:	4629      	mov	r1, r5
 8003072:	4630      	mov	r0, r6
 8003074:	f7ff ffa6 	bl	8002fc4 <sbrk_aligned>
 8003078:	3001      	adds	r0, #1
 800307a:	d03a      	beq.n	80030f2 <_malloc_r+0xea>
 800307c:	6823      	ldr	r3, [r4, #0]
 800307e:	442b      	add	r3, r5
 8003080:	6023      	str	r3, [r4, #0]
 8003082:	f8d8 3000 	ldr.w	r3, [r8]
 8003086:	685a      	ldr	r2, [r3, #4]
 8003088:	bb62      	cbnz	r2, 80030e4 <_malloc_r+0xdc>
 800308a:	f8c8 7000 	str.w	r7, [r8]
 800308e:	e00f      	b.n	80030b0 <_malloc_r+0xa8>
 8003090:	6822      	ldr	r2, [r4, #0]
 8003092:	1b52      	subs	r2, r2, r5
 8003094:	d420      	bmi.n	80030d8 <_malloc_r+0xd0>
 8003096:	2a0b      	cmp	r2, #11
 8003098:	d917      	bls.n	80030ca <_malloc_r+0xc2>
 800309a:	1961      	adds	r1, r4, r5
 800309c:	42a3      	cmp	r3, r4
 800309e:	6025      	str	r5, [r4, #0]
 80030a0:	bf18      	it	ne
 80030a2:	6059      	strne	r1, [r3, #4]
 80030a4:	6863      	ldr	r3, [r4, #4]
 80030a6:	bf08      	it	eq
 80030a8:	f8c8 1000 	streq.w	r1, [r8]
 80030ac:	5162      	str	r2, [r4, r5]
 80030ae:	604b      	str	r3, [r1, #4]
 80030b0:	4630      	mov	r0, r6
 80030b2:	f000 f82f 	bl	8003114 <__malloc_unlock>
 80030b6:	f104 000b 	add.w	r0, r4, #11
 80030ba:	1d23      	adds	r3, r4, #4
 80030bc:	f020 0007 	bic.w	r0, r0, #7
 80030c0:	1ac2      	subs	r2, r0, r3
 80030c2:	bf1c      	itt	ne
 80030c4:	1a1b      	subne	r3, r3, r0
 80030c6:	50a3      	strne	r3, [r4, r2]
 80030c8:	e7af      	b.n	800302a <_malloc_r+0x22>
 80030ca:	6862      	ldr	r2, [r4, #4]
 80030cc:	42a3      	cmp	r3, r4
 80030ce:	bf0c      	ite	eq
 80030d0:	f8c8 2000 	streq.w	r2, [r8]
 80030d4:	605a      	strne	r2, [r3, #4]
 80030d6:	e7eb      	b.n	80030b0 <_malloc_r+0xa8>
 80030d8:	4623      	mov	r3, r4
 80030da:	6864      	ldr	r4, [r4, #4]
 80030dc:	e7ae      	b.n	800303c <_malloc_r+0x34>
 80030de:	463c      	mov	r4, r7
 80030e0:	687f      	ldr	r7, [r7, #4]
 80030e2:	e7b6      	b.n	8003052 <_malloc_r+0x4a>
 80030e4:	461a      	mov	r2, r3
 80030e6:	685b      	ldr	r3, [r3, #4]
 80030e8:	42a3      	cmp	r3, r4
 80030ea:	d1fb      	bne.n	80030e4 <_malloc_r+0xdc>
 80030ec:	2300      	movs	r3, #0
 80030ee:	6053      	str	r3, [r2, #4]
 80030f0:	e7de      	b.n	80030b0 <_malloc_r+0xa8>
 80030f2:	230c      	movs	r3, #12
 80030f4:	6033      	str	r3, [r6, #0]
 80030f6:	4630      	mov	r0, r6
 80030f8:	f000 f80c 	bl	8003114 <__malloc_unlock>
 80030fc:	e794      	b.n	8003028 <_malloc_r+0x20>
 80030fe:	6005      	str	r5, [r0, #0]
 8003100:	e7d6      	b.n	80030b0 <_malloc_r+0xa8>
 8003102:	bf00      	nop
 8003104:	200003d4 	.word	0x200003d4

08003108 <__malloc_lock>:
 8003108:	4801      	ldr	r0, [pc, #4]	@ (8003110 <__malloc_lock+0x8>)
 800310a:	f7ff b8b4 	b.w	8002276 <__retarget_lock_acquire_recursive>
 800310e:	bf00      	nop
 8003110:	200003cc 	.word	0x200003cc

08003114 <__malloc_unlock>:
 8003114:	4801      	ldr	r0, [pc, #4]	@ (800311c <__malloc_unlock+0x8>)
 8003116:	f7ff b8af 	b.w	8002278 <__retarget_lock_release_recursive>
 800311a:	bf00      	nop
 800311c:	200003cc 	.word	0x200003cc

08003120 <_Balloc>:
 8003120:	b570      	push	{r4, r5, r6, lr}
 8003122:	69c6      	ldr	r6, [r0, #28]
 8003124:	4604      	mov	r4, r0
 8003126:	460d      	mov	r5, r1
 8003128:	b976      	cbnz	r6, 8003148 <_Balloc+0x28>
 800312a:	2010      	movs	r0, #16
 800312c:	f7ff ff42 	bl	8002fb4 <malloc>
 8003130:	4602      	mov	r2, r0
 8003132:	61e0      	str	r0, [r4, #28]
 8003134:	b920      	cbnz	r0, 8003140 <_Balloc+0x20>
 8003136:	4b18      	ldr	r3, [pc, #96]	@ (8003198 <_Balloc+0x78>)
 8003138:	4818      	ldr	r0, [pc, #96]	@ (800319c <_Balloc+0x7c>)
 800313a:	216b      	movs	r1, #107	@ 0x6b
 800313c:	f000 fc36 	bl	80039ac <__assert_func>
 8003140:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003144:	6006      	str	r6, [r0, #0]
 8003146:	60c6      	str	r6, [r0, #12]
 8003148:	69e6      	ldr	r6, [r4, #28]
 800314a:	68f3      	ldr	r3, [r6, #12]
 800314c:	b183      	cbz	r3, 8003170 <_Balloc+0x50>
 800314e:	69e3      	ldr	r3, [r4, #28]
 8003150:	68db      	ldr	r3, [r3, #12]
 8003152:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003156:	b9b8      	cbnz	r0, 8003188 <_Balloc+0x68>
 8003158:	2101      	movs	r1, #1
 800315a:	fa01 f605 	lsl.w	r6, r1, r5
 800315e:	1d72      	adds	r2, r6, #5
 8003160:	0092      	lsls	r2, r2, #2
 8003162:	4620      	mov	r0, r4
 8003164:	f000 fc40 	bl	80039e8 <_calloc_r>
 8003168:	b160      	cbz	r0, 8003184 <_Balloc+0x64>
 800316a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800316e:	e00e      	b.n	800318e <_Balloc+0x6e>
 8003170:	2221      	movs	r2, #33	@ 0x21
 8003172:	2104      	movs	r1, #4
 8003174:	4620      	mov	r0, r4
 8003176:	f000 fc37 	bl	80039e8 <_calloc_r>
 800317a:	69e3      	ldr	r3, [r4, #28]
 800317c:	60f0      	str	r0, [r6, #12]
 800317e:	68db      	ldr	r3, [r3, #12]
 8003180:	2b00      	cmp	r3, #0
 8003182:	d1e4      	bne.n	800314e <_Balloc+0x2e>
 8003184:	2000      	movs	r0, #0
 8003186:	bd70      	pop	{r4, r5, r6, pc}
 8003188:	6802      	ldr	r2, [r0, #0]
 800318a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800318e:	2300      	movs	r3, #0
 8003190:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003194:	e7f7      	b.n	8003186 <_Balloc+0x66>
 8003196:	bf00      	nop
 8003198:	08004011 	.word	0x08004011
 800319c:	08004091 	.word	0x08004091

080031a0 <_Bfree>:
 80031a0:	b570      	push	{r4, r5, r6, lr}
 80031a2:	69c6      	ldr	r6, [r0, #28]
 80031a4:	4605      	mov	r5, r0
 80031a6:	460c      	mov	r4, r1
 80031a8:	b976      	cbnz	r6, 80031c8 <_Bfree+0x28>
 80031aa:	2010      	movs	r0, #16
 80031ac:	f7ff ff02 	bl	8002fb4 <malloc>
 80031b0:	4602      	mov	r2, r0
 80031b2:	61e8      	str	r0, [r5, #28]
 80031b4:	b920      	cbnz	r0, 80031c0 <_Bfree+0x20>
 80031b6:	4b09      	ldr	r3, [pc, #36]	@ (80031dc <_Bfree+0x3c>)
 80031b8:	4809      	ldr	r0, [pc, #36]	@ (80031e0 <_Bfree+0x40>)
 80031ba:	218f      	movs	r1, #143	@ 0x8f
 80031bc:	f000 fbf6 	bl	80039ac <__assert_func>
 80031c0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80031c4:	6006      	str	r6, [r0, #0]
 80031c6:	60c6      	str	r6, [r0, #12]
 80031c8:	b13c      	cbz	r4, 80031da <_Bfree+0x3a>
 80031ca:	69eb      	ldr	r3, [r5, #28]
 80031cc:	6862      	ldr	r2, [r4, #4]
 80031ce:	68db      	ldr	r3, [r3, #12]
 80031d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80031d4:	6021      	str	r1, [r4, #0]
 80031d6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80031da:	bd70      	pop	{r4, r5, r6, pc}
 80031dc:	08004011 	.word	0x08004011
 80031e0:	08004091 	.word	0x08004091

080031e4 <__multadd>:
 80031e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80031e8:	690d      	ldr	r5, [r1, #16]
 80031ea:	4607      	mov	r7, r0
 80031ec:	460c      	mov	r4, r1
 80031ee:	461e      	mov	r6, r3
 80031f0:	f101 0c14 	add.w	ip, r1, #20
 80031f4:	2000      	movs	r0, #0
 80031f6:	f8dc 3000 	ldr.w	r3, [ip]
 80031fa:	b299      	uxth	r1, r3
 80031fc:	fb02 6101 	mla	r1, r2, r1, r6
 8003200:	0c1e      	lsrs	r6, r3, #16
 8003202:	0c0b      	lsrs	r3, r1, #16
 8003204:	fb02 3306 	mla	r3, r2, r6, r3
 8003208:	b289      	uxth	r1, r1
 800320a:	3001      	adds	r0, #1
 800320c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003210:	4285      	cmp	r5, r0
 8003212:	f84c 1b04 	str.w	r1, [ip], #4
 8003216:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800321a:	dcec      	bgt.n	80031f6 <__multadd+0x12>
 800321c:	b30e      	cbz	r6, 8003262 <__multadd+0x7e>
 800321e:	68a3      	ldr	r3, [r4, #8]
 8003220:	42ab      	cmp	r3, r5
 8003222:	dc19      	bgt.n	8003258 <__multadd+0x74>
 8003224:	6861      	ldr	r1, [r4, #4]
 8003226:	4638      	mov	r0, r7
 8003228:	3101      	adds	r1, #1
 800322a:	f7ff ff79 	bl	8003120 <_Balloc>
 800322e:	4680      	mov	r8, r0
 8003230:	b928      	cbnz	r0, 800323e <__multadd+0x5a>
 8003232:	4602      	mov	r2, r0
 8003234:	4b0c      	ldr	r3, [pc, #48]	@ (8003268 <__multadd+0x84>)
 8003236:	480d      	ldr	r0, [pc, #52]	@ (800326c <__multadd+0x88>)
 8003238:	21ba      	movs	r1, #186	@ 0xba
 800323a:	f000 fbb7 	bl	80039ac <__assert_func>
 800323e:	6922      	ldr	r2, [r4, #16]
 8003240:	3202      	adds	r2, #2
 8003242:	f104 010c 	add.w	r1, r4, #12
 8003246:	0092      	lsls	r2, r2, #2
 8003248:	300c      	adds	r0, #12
 800324a:	f000 fba1 	bl	8003990 <memcpy>
 800324e:	4621      	mov	r1, r4
 8003250:	4638      	mov	r0, r7
 8003252:	f7ff ffa5 	bl	80031a0 <_Bfree>
 8003256:	4644      	mov	r4, r8
 8003258:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800325c:	3501      	adds	r5, #1
 800325e:	615e      	str	r6, [r3, #20]
 8003260:	6125      	str	r5, [r4, #16]
 8003262:	4620      	mov	r0, r4
 8003264:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003268:	08004080 	.word	0x08004080
 800326c:	08004091 	.word	0x08004091

08003270 <__hi0bits>:
 8003270:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003274:	4603      	mov	r3, r0
 8003276:	bf36      	itet	cc
 8003278:	0403      	lslcc	r3, r0, #16
 800327a:	2000      	movcs	r0, #0
 800327c:	2010      	movcc	r0, #16
 800327e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003282:	bf3c      	itt	cc
 8003284:	021b      	lslcc	r3, r3, #8
 8003286:	3008      	addcc	r0, #8
 8003288:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800328c:	bf3c      	itt	cc
 800328e:	011b      	lslcc	r3, r3, #4
 8003290:	3004      	addcc	r0, #4
 8003292:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003296:	bf3c      	itt	cc
 8003298:	009b      	lslcc	r3, r3, #2
 800329a:	3002      	addcc	r0, #2
 800329c:	2b00      	cmp	r3, #0
 800329e:	db05      	blt.n	80032ac <__hi0bits+0x3c>
 80032a0:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80032a4:	f100 0001 	add.w	r0, r0, #1
 80032a8:	bf08      	it	eq
 80032aa:	2020      	moveq	r0, #32
 80032ac:	4770      	bx	lr

080032ae <__lo0bits>:
 80032ae:	6803      	ldr	r3, [r0, #0]
 80032b0:	4602      	mov	r2, r0
 80032b2:	f013 0007 	ands.w	r0, r3, #7
 80032b6:	d00b      	beq.n	80032d0 <__lo0bits+0x22>
 80032b8:	07d9      	lsls	r1, r3, #31
 80032ba:	d421      	bmi.n	8003300 <__lo0bits+0x52>
 80032bc:	0798      	lsls	r0, r3, #30
 80032be:	bf49      	itett	mi
 80032c0:	085b      	lsrmi	r3, r3, #1
 80032c2:	089b      	lsrpl	r3, r3, #2
 80032c4:	2001      	movmi	r0, #1
 80032c6:	6013      	strmi	r3, [r2, #0]
 80032c8:	bf5c      	itt	pl
 80032ca:	6013      	strpl	r3, [r2, #0]
 80032cc:	2002      	movpl	r0, #2
 80032ce:	4770      	bx	lr
 80032d0:	b299      	uxth	r1, r3
 80032d2:	b909      	cbnz	r1, 80032d8 <__lo0bits+0x2a>
 80032d4:	0c1b      	lsrs	r3, r3, #16
 80032d6:	2010      	movs	r0, #16
 80032d8:	b2d9      	uxtb	r1, r3
 80032da:	b909      	cbnz	r1, 80032e0 <__lo0bits+0x32>
 80032dc:	3008      	adds	r0, #8
 80032de:	0a1b      	lsrs	r3, r3, #8
 80032e0:	0719      	lsls	r1, r3, #28
 80032e2:	bf04      	itt	eq
 80032e4:	091b      	lsreq	r3, r3, #4
 80032e6:	3004      	addeq	r0, #4
 80032e8:	0799      	lsls	r1, r3, #30
 80032ea:	bf04      	itt	eq
 80032ec:	089b      	lsreq	r3, r3, #2
 80032ee:	3002      	addeq	r0, #2
 80032f0:	07d9      	lsls	r1, r3, #31
 80032f2:	d403      	bmi.n	80032fc <__lo0bits+0x4e>
 80032f4:	085b      	lsrs	r3, r3, #1
 80032f6:	f100 0001 	add.w	r0, r0, #1
 80032fa:	d003      	beq.n	8003304 <__lo0bits+0x56>
 80032fc:	6013      	str	r3, [r2, #0]
 80032fe:	4770      	bx	lr
 8003300:	2000      	movs	r0, #0
 8003302:	4770      	bx	lr
 8003304:	2020      	movs	r0, #32
 8003306:	4770      	bx	lr

08003308 <__i2b>:
 8003308:	b510      	push	{r4, lr}
 800330a:	460c      	mov	r4, r1
 800330c:	2101      	movs	r1, #1
 800330e:	f7ff ff07 	bl	8003120 <_Balloc>
 8003312:	4602      	mov	r2, r0
 8003314:	b928      	cbnz	r0, 8003322 <__i2b+0x1a>
 8003316:	4b05      	ldr	r3, [pc, #20]	@ (800332c <__i2b+0x24>)
 8003318:	4805      	ldr	r0, [pc, #20]	@ (8003330 <__i2b+0x28>)
 800331a:	f240 1145 	movw	r1, #325	@ 0x145
 800331e:	f000 fb45 	bl	80039ac <__assert_func>
 8003322:	2301      	movs	r3, #1
 8003324:	6144      	str	r4, [r0, #20]
 8003326:	6103      	str	r3, [r0, #16]
 8003328:	bd10      	pop	{r4, pc}
 800332a:	bf00      	nop
 800332c:	08004080 	.word	0x08004080
 8003330:	08004091 	.word	0x08004091

08003334 <__multiply>:
 8003334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003338:	4614      	mov	r4, r2
 800333a:	690a      	ldr	r2, [r1, #16]
 800333c:	6923      	ldr	r3, [r4, #16]
 800333e:	429a      	cmp	r2, r3
 8003340:	bfa8      	it	ge
 8003342:	4623      	movge	r3, r4
 8003344:	460f      	mov	r7, r1
 8003346:	bfa4      	itt	ge
 8003348:	460c      	movge	r4, r1
 800334a:	461f      	movge	r7, r3
 800334c:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003350:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003354:	68a3      	ldr	r3, [r4, #8]
 8003356:	6861      	ldr	r1, [r4, #4]
 8003358:	eb0a 0609 	add.w	r6, sl, r9
 800335c:	42b3      	cmp	r3, r6
 800335e:	b085      	sub	sp, #20
 8003360:	bfb8      	it	lt
 8003362:	3101      	addlt	r1, #1
 8003364:	f7ff fedc 	bl	8003120 <_Balloc>
 8003368:	b930      	cbnz	r0, 8003378 <__multiply+0x44>
 800336a:	4602      	mov	r2, r0
 800336c:	4b44      	ldr	r3, [pc, #272]	@ (8003480 <__multiply+0x14c>)
 800336e:	4845      	ldr	r0, [pc, #276]	@ (8003484 <__multiply+0x150>)
 8003370:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003374:	f000 fb1a 	bl	80039ac <__assert_func>
 8003378:	f100 0514 	add.w	r5, r0, #20
 800337c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003380:	462b      	mov	r3, r5
 8003382:	2200      	movs	r2, #0
 8003384:	4543      	cmp	r3, r8
 8003386:	d321      	bcc.n	80033cc <__multiply+0x98>
 8003388:	f107 0114 	add.w	r1, r7, #20
 800338c:	f104 0214 	add.w	r2, r4, #20
 8003390:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003394:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003398:	9302      	str	r3, [sp, #8]
 800339a:	1b13      	subs	r3, r2, r4
 800339c:	3b15      	subs	r3, #21
 800339e:	f023 0303 	bic.w	r3, r3, #3
 80033a2:	3304      	adds	r3, #4
 80033a4:	f104 0715 	add.w	r7, r4, #21
 80033a8:	42ba      	cmp	r2, r7
 80033aa:	bf38      	it	cc
 80033ac:	2304      	movcc	r3, #4
 80033ae:	9301      	str	r3, [sp, #4]
 80033b0:	9b02      	ldr	r3, [sp, #8]
 80033b2:	9103      	str	r1, [sp, #12]
 80033b4:	428b      	cmp	r3, r1
 80033b6:	d80c      	bhi.n	80033d2 <__multiply+0x9e>
 80033b8:	2e00      	cmp	r6, #0
 80033ba:	dd03      	ble.n	80033c4 <__multiply+0x90>
 80033bc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80033c0:	2b00      	cmp	r3, #0
 80033c2:	d05a      	beq.n	800347a <__multiply+0x146>
 80033c4:	6106      	str	r6, [r0, #16]
 80033c6:	b005      	add	sp, #20
 80033c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033cc:	f843 2b04 	str.w	r2, [r3], #4
 80033d0:	e7d8      	b.n	8003384 <__multiply+0x50>
 80033d2:	f8b1 a000 	ldrh.w	sl, [r1]
 80033d6:	f1ba 0f00 	cmp.w	sl, #0
 80033da:	d023      	beq.n	8003424 <__multiply+0xf0>
 80033dc:	f104 0e14 	add.w	lr, r4, #20
 80033e0:	46a9      	mov	r9, r5
 80033e2:	f04f 0c00 	mov.w	ip, #0
 80033e6:	f85e 7b04 	ldr.w	r7, [lr], #4
 80033ea:	f8d9 3000 	ldr.w	r3, [r9]
 80033ee:	fa1f fb87 	uxth.w	fp, r7
 80033f2:	b29b      	uxth	r3, r3
 80033f4:	fb0a 330b 	mla	r3, sl, fp, r3
 80033f8:	4463      	add	r3, ip
 80033fa:	f8d9 c000 	ldr.w	ip, [r9]
 80033fe:	0c3f      	lsrs	r7, r7, #16
 8003400:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8003404:	fb0a c707 	mla	r7, sl, r7, ip
 8003408:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800340c:	b29b      	uxth	r3, r3
 800340e:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003412:	4572      	cmp	r2, lr
 8003414:	f849 3b04 	str.w	r3, [r9], #4
 8003418:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800341c:	d8e3      	bhi.n	80033e6 <__multiply+0xb2>
 800341e:	9b01      	ldr	r3, [sp, #4]
 8003420:	f845 c003 	str.w	ip, [r5, r3]
 8003424:	9b03      	ldr	r3, [sp, #12]
 8003426:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800342a:	3104      	adds	r1, #4
 800342c:	f1b9 0f00 	cmp.w	r9, #0
 8003430:	d021      	beq.n	8003476 <__multiply+0x142>
 8003432:	682b      	ldr	r3, [r5, #0]
 8003434:	f104 0c14 	add.w	ip, r4, #20
 8003438:	46ae      	mov	lr, r5
 800343a:	f04f 0a00 	mov.w	sl, #0
 800343e:	f8bc b000 	ldrh.w	fp, [ip]
 8003442:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003446:	fb09 770b 	mla	r7, r9, fp, r7
 800344a:	4457      	add	r7, sl
 800344c:	b29b      	uxth	r3, r3
 800344e:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003452:	f84e 3b04 	str.w	r3, [lr], #4
 8003456:	f85c 3b04 	ldr.w	r3, [ip], #4
 800345a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800345e:	f8be 3000 	ldrh.w	r3, [lr]
 8003462:	fb09 330a 	mla	r3, r9, sl, r3
 8003466:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800346a:	4562      	cmp	r2, ip
 800346c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003470:	d8e5      	bhi.n	800343e <__multiply+0x10a>
 8003472:	9f01      	ldr	r7, [sp, #4]
 8003474:	51eb      	str	r3, [r5, r7]
 8003476:	3504      	adds	r5, #4
 8003478:	e79a      	b.n	80033b0 <__multiply+0x7c>
 800347a:	3e01      	subs	r6, #1
 800347c:	e79c      	b.n	80033b8 <__multiply+0x84>
 800347e:	bf00      	nop
 8003480:	08004080 	.word	0x08004080
 8003484:	08004091 	.word	0x08004091

08003488 <__pow5mult>:
 8003488:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800348c:	4615      	mov	r5, r2
 800348e:	f012 0203 	ands.w	r2, r2, #3
 8003492:	4607      	mov	r7, r0
 8003494:	460e      	mov	r6, r1
 8003496:	d007      	beq.n	80034a8 <__pow5mult+0x20>
 8003498:	4c25      	ldr	r4, [pc, #148]	@ (8003530 <__pow5mult+0xa8>)
 800349a:	3a01      	subs	r2, #1
 800349c:	2300      	movs	r3, #0
 800349e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80034a2:	f7ff fe9f 	bl	80031e4 <__multadd>
 80034a6:	4606      	mov	r6, r0
 80034a8:	10ad      	asrs	r5, r5, #2
 80034aa:	d03d      	beq.n	8003528 <__pow5mult+0xa0>
 80034ac:	69fc      	ldr	r4, [r7, #28]
 80034ae:	b97c      	cbnz	r4, 80034d0 <__pow5mult+0x48>
 80034b0:	2010      	movs	r0, #16
 80034b2:	f7ff fd7f 	bl	8002fb4 <malloc>
 80034b6:	4602      	mov	r2, r0
 80034b8:	61f8      	str	r0, [r7, #28]
 80034ba:	b928      	cbnz	r0, 80034c8 <__pow5mult+0x40>
 80034bc:	4b1d      	ldr	r3, [pc, #116]	@ (8003534 <__pow5mult+0xac>)
 80034be:	481e      	ldr	r0, [pc, #120]	@ (8003538 <__pow5mult+0xb0>)
 80034c0:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80034c4:	f000 fa72 	bl	80039ac <__assert_func>
 80034c8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80034cc:	6004      	str	r4, [r0, #0]
 80034ce:	60c4      	str	r4, [r0, #12]
 80034d0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80034d4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80034d8:	b94c      	cbnz	r4, 80034ee <__pow5mult+0x66>
 80034da:	f240 2171 	movw	r1, #625	@ 0x271
 80034de:	4638      	mov	r0, r7
 80034e0:	f7ff ff12 	bl	8003308 <__i2b>
 80034e4:	2300      	movs	r3, #0
 80034e6:	f8c8 0008 	str.w	r0, [r8, #8]
 80034ea:	4604      	mov	r4, r0
 80034ec:	6003      	str	r3, [r0, #0]
 80034ee:	f04f 0900 	mov.w	r9, #0
 80034f2:	07eb      	lsls	r3, r5, #31
 80034f4:	d50a      	bpl.n	800350c <__pow5mult+0x84>
 80034f6:	4631      	mov	r1, r6
 80034f8:	4622      	mov	r2, r4
 80034fa:	4638      	mov	r0, r7
 80034fc:	f7ff ff1a 	bl	8003334 <__multiply>
 8003500:	4631      	mov	r1, r6
 8003502:	4680      	mov	r8, r0
 8003504:	4638      	mov	r0, r7
 8003506:	f7ff fe4b 	bl	80031a0 <_Bfree>
 800350a:	4646      	mov	r6, r8
 800350c:	106d      	asrs	r5, r5, #1
 800350e:	d00b      	beq.n	8003528 <__pow5mult+0xa0>
 8003510:	6820      	ldr	r0, [r4, #0]
 8003512:	b938      	cbnz	r0, 8003524 <__pow5mult+0x9c>
 8003514:	4622      	mov	r2, r4
 8003516:	4621      	mov	r1, r4
 8003518:	4638      	mov	r0, r7
 800351a:	f7ff ff0b 	bl	8003334 <__multiply>
 800351e:	6020      	str	r0, [r4, #0]
 8003520:	f8c0 9000 	str.w	r9, [r0]
 8003524:	4604      	mov	r4, r0
 8003526:	e7e4      	b.n	80034f2 <__pow5mult+0x6a>
 8003528:	4630      	mov	r0, r6
 800352a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800352e:	bf00      	nop
 8003530:	080040ec 	.word	0x080040ec
 8003534:	08004011 	.word	0x08004011
 8003538:	08004091 	.word	0x08004091

0800353c <__lshift>:
 800353c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003540:	460c      	mov	r4, r1
 8003542:	6849      	ldr	r1, [r1, #4]
 8003544:	6923      	ldr	r3, [r4, #16]
 8003546:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800354a:	68a3      	ldr	r3, [r4, #8]
 800354c:	4607      	mov	r7, r0
 800354e:	4691      	mov	r9, r2
 8003550:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003554:	f108 0601 	add.w	r6, r8, #1
 8003558:	42b3      	cmp	r3, r6
 800355a:	db0b      	blt.n	8003574 <__lshift+0x38>
 800355c:	4638      	mov	r0, r7
 800355e:	f7ff fddf 	bl	8003120 <_Balloc>
 8003562:	4605      	mov	r5, r0
 8003564:	b948      	cbnz	r0, 800357a <__lshift+0x3e>
 8003566:	4602      	mov	r2, r0
 8003568:	4b28      	ldr	r3, [pc, #160]	@ (800360c <__lshift+0xd0>)
 800356a:	4829      	ldr	r0, [pc, #164]	@ (8003610 <__lshift+0xd4>)
 800356c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003570:	f000 fa1c 	bl	80039ac <__assert_func>
 8003574:	3101      	adds	r1, #1
 8003576:	005b      	lsls	r3, r3, #1
 8003578:	e7ee      	b.n	8003558 <__lshift+0x1c>
 800357a:	2300      	movs	r3, #0
 800357c:	f100 0114 	add.w	r1, r0, #20
 8003580:	f100 0210 	add.w	r2, r0, #16
 8003584:	4618      	mov	r0, r3
 8003586:	4553      	cmp	r3, sl
 8003588:	db33      	blt.n	80035f2 <__lshift+0xb6>
 800358a:	6920      	ldr	r0, [r4, #16]
 800358c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003590:	f104 0314 	add.w	r3, r4, #20
 8003594:	f019 091f 	ands.w	r9, r9, #31
 8003598:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800359c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80035a0:	d02b      	beq.n	80035fa <__lshift+0xbe>
 80035a2:	f1c9 0e20 	rsb	lr, r9, #32
 80035a6:	468a      	mov	sl, r1
 80035a8:	2200      	movs	r2, #0
 80035aa:	6818      	ldr	r0, [r3, #0]
 80035ac:	fa00 f009 	lsl.w	r0, r0, r9
 80035b0:	4310      	orrs	r0, r2
 80035b2:	f84a 0b04 	str.w	r0, [sl], #4
 80035b6:	f853 2b04 	ldr.w	r2, [r3], #4
 80035ba:	459c      	cmp	ip, r3
 80035bc:	fa22 f20e 	lsr.w	r2, r2, lr
 80035c0:	d8f3      	bhi.n	80035aa <__lshift+0x6e>
 80035c2:	ebac 0304 	sub.w	r3, ip, r4
 80035c6:	3b15      	subs	r3, #21
 80035c8:	f023 0303 	bic.w	r3, r3, #3
 80035cc:	3304      	adds	r3, #4
 80035ce:	f104 0015 	add.w	r0, r4, #21
 80035d2:	4584      	cmp	ip, r0
 80035d4:	bf38      	it	cc
 80035d6:	2304      	movcc	r3, #4
 80035d8:	50ca      	str	r2, [r1, r3]
 80035da:	b10a      	cbz	r2, 80035e0 <__lshift+0xa4>
 80035dc:	f108 0602 	add.w	r6, r8, #2
 80035e0:	3e01      	subs	r6, #1
 80035e2:	4638      	mov	r0, r7
 80035e4:	612e      	str	r6, [r5, #16]
 80035e6:	4621      	mov	r1, r4
 80035e8:	f7ff fdda 	bl	80031a0 <_Bfree>
 80035ec:	4628      	mov	r0, r5
 80035ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80035f2:	f842 0f04 	str.w	r0, [r2, #4]!
 80035f6:	3301      	adds	r3, #1
 80035f8:	e7c5      	b.n	8003586 <__lshift+0x4a>
 80035fa:	3904      	subs	r1, #4
 80035fc:	f853 2b04 	ldr.w	r2, [r3], #4
 8003600:	f841 2f04 	str.w	r2, [r1, #4]!
 8003604:	459c      	cmp	ip, r3
 8003606:	d8f9      	bhi.n	80035fc <__lshift+0xc0>
 8003608:	e7ea      	b.n	80035e0 <__lshift+0xa4>
 800360a:	bf00      	nop
 800360c:	08004080 	.word	0x08004080
 8003610:	08004091 	.word	0x08004091

08003614 <__mcmp>:
 8003614:	690a      	ldr	r2, [r1, #16]
 8003616:	4603      	mov	r3, r0
 8003618:	6900      	ldr	r0, [r0, #16]
 800361a:	1a80      	subs	r0, r0, r2
 800361c:	b530      	push	{r4, r5, lr}
 800361e:	d10e      	bne.n	800363e <__mcmp+0x2a>
 8003620:	3314      	adds	r3, #20
 8003622:	3114      	adds	r1, #20
 8003624:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003628:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800362c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003630:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003634:	4295      	cmp	r5, r2
 8003636:	d003      	beq.n	8003640 <__mcmp+0x2c>
 8003638:	d205      	bcs.n	8003646 <__mcmp+0x32>
 800363a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800363e:	bd30      	pop	{r4, r5, pc}
 8003640:	42a3      	cmp	r3, r4
 8003642:	d3f3      	bcc.n	800362c <__mcmp+0x18>
 8003644:	e7fb      	b.n	800363e <__mcmp+0x2a>
 8003646:	2001      	movs	r0, #1
 8003648:	e7f9      	b.n	800363e <__mcmp+0x2a>
	...

0800364c <__mdiff>:
 800364c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003650:	4689      	mov	r9, r1
 8003652:	4606      	mov	r6, r0
 8003654:	4611      	mov	r1, r2
 8003656:	4648      	mov	r0, r9
 8003658:	4614      	mov	r4, r2
 800365a:	f7ff ffdb 	bl	8003614 <__mcmp>
 800365e:	1e05      	subs	r5, r0, #0
 8003660:	d112      	bne.n	8003688 <__mdiff+0x3c>
 8003662:	4629      	mov	r1, r5
 8003664:	4630      	mov	r0, r6
 8003666:	f7ff fd5b 	bl	8003120 <_Balloc>
 800366a:	4602      	mov	r2, r0
 800366c:	b928      	cbnz	r0, 800367a <__mdiff+0x2e>
 800366e:	4b3e      	ldr	r3, [pc, #248]	@ (8003768 <__mdiff+0x11c>)
 8003670:	f240 2137 	movw	r1, #567	@ 0x237
 8003674:	483d      	ldr	r0, [pc, #244]	@ (800376c <__mdiff+0x120>)
 8003676:	f000 f999 	bl	80039ac <__assert_func>
 800367a:	2301      	movs	r3, #1
 800367c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003680:	4610      	mov	r0, r2
 8003682:	b003      	add	sp, #12
 8003684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003688:	bfbc      	itt	lt
 800368a:	464b      	movlt	r3, r9
 800368c:	46a1      	movlt	r9, r4
 800368e:	4630      	mov	r0, r6
 8003690:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003694:	bfba      	itte	lt
 8003696:	461c      	movlt	r4, r3
 8003698:	2501      	movlt	r5, #1
 800369a:	2500      	movge	r5, #0
 800369c:	f7ff fd40 	bl	8003120 <_Balloc>
 80036a0:	4602      	mov	r2, r0
 80036a2:	b918      	cbnz	r0, 80036ac <__mdiff+0x60>
 80036a4:	4b30      	ldr	r3, [pc, #192]	@ (8003768 <__mdiff+0x11c>)
 80036a6:	f240 2145 	movw	r1, #581	@ 0x245
 80036aa:	e7e3      	b.n	8003674 <__mdiff+0x28>
 80036ac:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80036b0:	6926      	ldr	r6, [r4, #16]
 80036b2:	60c5      	str	r5, [r0, #12]
 80036b4:	f109 0310 	add.w	r3, r9, #16
 80036b8:	f109 0514 	add.w	r5, r9, #20
 80036bc:	f104 0e14 	add.w	lr, r4, #20
 80036c0:	f100 0b14 	add.w	fp, r0, #20
 80036c4:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80036c8:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80036cc:	9301      	str	r3, [sp, #4]
 80036ce:	46d9      	mov	r9, fp
 80036d0:	f04f 0c00 	mov.w	ip, #0
 80036d4:	9b01      	ldr	r3, [sp, #4]
 80036d6:	f85e 0b04 	ldr.w	r0, [lr], #4
 80036da:	f853 af04 	ldr.w	sl, [r3, #4]!
 80036de:	9301      	str	r3, [sp, #4]
 80036e0:	b281      	uxth	r1, r0
 80036e2:	fa1f f38a 	uxth.w	r3, sl
 80036e6:	1a5b      	subs	r3, r3, r1
 80036e8:	0c00      	lsrs	r0, r0, #16
 80036ea:	4463      	add	r3, ip
 80036ec:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80036f0:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80036f4:	b29b      	uxth	r3, r3
 80036f6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80036fa:	4576      	cmp	r6, lr
 80036fc:	f849 3b04 	str.w	r3, [r9], #4
 8003700:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003704:	d8e6      	bhi.n	80036d4 <__mdiff+0x88>
 8003706:	1b33      	subs	r3, r6, r4
 8003708:	3b15      	subs	r3, #21
 800370a:	f023 0303 	bic.w	r3, r3, #3
 800370e:	3415      	adds	r4, #21
 8003710:	3304      	adds	r3, #4
 8003712:	42a6      	cmp	r6, r4
 8003714:	bf38      	it	cc
 8003716:	2304      	movcc	r3, #4
 8003718:	441d      	add	r5, r3
 800371a:	445b      	add	r3, fp
 800371c:	461e      	mov	r6, r3
 800371e:	462c      	mov	r4, r5
 8003720:	4544      	cmp	r4, r8
 8003722:	d30e      	bcc.n	8003742 <__mdiff+0xf6>
 8003724:	f108 0103 	add.w	r1, r8, #3
 8003728:	1b49      	subs	r1, r1, r5
 800372a:	f021 0103 	bic.w	r1, r1, #3
 800372e:	3d03      	subs	r5, #3
 8003730:	45a8      	cmp	r8, r5
 8003732:	bf38      	it	cc
 8003734:	2100      	movcc	r1, #0
 8003736:	440b      	add	r3, r1
 8003738:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800373c:	b191      	cbz	r1, 8003764 <__mdiff+0x118>
 800373e:	6117      	str	r7, [r2, #16]
 8003740:	e79e      	b.n	8003680 <__mdiff+0x34>
 8003742:	f854 1b04 	ldr.w	r1, [r4], #4
 8003746:	46e6      	mov	lr, ip
 8003748:	0c08      	lsrs	r0, r1, #16
 800374a:	fa1c fc81 	uxtah	ip, ip, r1
 800374e:	4471      	add	r1, lr
 8003750:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003754:	b289      	uxth	r1, r1
 8003756:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800375a:	f846 1b04 	str.w	r1, [r6], #4
 800375e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003762:	e7dd      	b.n	8003720 <__mdiff+0xd4>
 8003764:	3f01      	subs	r7, #1
 8003766:	e7e7      	b.n	8003738 <__mdiff+0xec>
 8003768:	08004080 	.word	0x08004080
 800376c:	08004091 	.word	0x08004091

08003770 <__d2b>:
 8003770:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8003774:	2101      	movs	r1, #1
 8003776:	9e08      	ldr	r6, [sp, #32]
 8003778:	4690      	mov	r8, r2
 800377a:	4699      	mov	r9, r3
 800377c:	f7ff fcd0 	bl	8003120 <_Balloc>
 8003780:	4604      	mov	r4, r0
 8003782:	b930      	cbnz	r0, 8003792 <__d2b+0x22>
 8003784:	4602      	mov	r2, r0
 8003786:	4b24      	ldr	r3, [pc, #144]	@ (8003818 <__d2b+0xa8>)
 8003788:	4824      	ldr	r0, [pc, #144]	@ (800381c <__d2b+0xac>)
 800378a:	f240 310f 	movw	r1, #783	@ 0x30f
 800378e:	f000 f90d 	bl	80039ac <__assert_func>
 8003792:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003796:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800379a:	b10d      	cbz	r5, 80037a0 <__d2b+0x30>
 800379c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80037a0:	9301      	str	r3, [sp, #4]
 80037a2:	f1b8 0300 	subs.w	r3, r8, #0
 80037a6:	d024      	beq.n	80037f2 <__d2b+0x82>
 80037a8:	4668      	mov	r0, sp
 80037aa:	9300      	str	r3, [sp, #0]
 80037ac:	f7ff fd7f 	bl	80032ae <__lo0bits>
 80037b0:	e9dd 1200 	ldrd	r1, r2, [sp]
 80037b4:	b1d8      	cbz	r0, 80037ee <__d2b+0x7e>
 80037b6:	f1c0 0320 	rsb	r3, r0, #32
 80037ba:	fa02 f303 	lsl.w	r3, r2, r3
 80037be:	430b      	orrs	r3, r1
 80037c0:	40c2      	lsrs	r2, r0
 80037c2:	6163      	str	r3, [r4, #20]
 80037c4:	9201      	str	r2, [sp, #4]
 80037c6:	9b01      	ldr	r3, [sp, #4]
 80037c8:	61a3      	str	r3, [r4, #24]
 80037ca:	2b00      	cmp	r3, #0
 80037cc:	bf0c      	ite	eq
 80037ce:	2201      	moveq	r2, #1
 80037d0:	2202      	movne	r2, #2
 80037d2:	6122      	str	r2, [r4, #16]
 80037d4:	b1ad      	cbz	r5, 8003802 <__d2b+0x92>
 80037d6:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80037da:	4405      	add	r5, r0
 80037dc:	6035      	str	r5, [r6, #0]
 80037de:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80037e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80037e4:	6018      	str	r0, [r3, #0]
 80037e6:	4620      	mov	r0, r4
 80037e8:	b002      	add	sp, #8
 80037ea:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80037ee:	6161      	str	r1, [r4, #20]
 80037f0:	e7e9      	b.n	80037c6 <__d2b+0x56>
 80037f2:	a801      	add	r0, sp, #4
 80037f4:	f7ff fd5b 	bl	80032ae <__lo0bits>
 80037f8:	9b01      	ldr	r3, [sp, #4]
 80037fa:	6163      	str	r3, [r4, #20]
 80037fc:	3020      	adds	r0, #32
 80037fe:	2201      	movs	r2, #1
 8003800:	e7e7      	b.n	80037d2 <__d2b+0x62>
 8003802:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003806:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800380a:	6030      	str	r0, [r6, #0]
 800380c:	6918      	ldr	r0, [r3, #16]
 800380e:	f7ff fd2f 	bl	8003270 <__hi0bits>
 8003812:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003816:	e7e4      	b.n	80037e2 <__d2b+0x72>
 8003818:	08004080 	.word	0x08004080
 800381c:	08004091 	.word	0x08004091

08003820 <__sflush_r>:
 8003820:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003824:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003826:	0716      	lsls	r6, r2, #28
 8003828:	4605      	mov	r5, r0
 800382a:	460c      	mov	r4, r1
 800382c:	d454      	bmi.n	80038d8 <__sflush_r+0xb8>
 800382e:	684b      	ldr	r3, [r1, #4]
 8003830:	2b00      	cmp	r3, #0
 8003832:	dc02      	bgt.n	800383a <__sflush_r+0x1a>
 8003834:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003836:	2b00      	cmp	r3, #0
 8003838:	dd48      	ble.n	80038cc <__sflush_r+0xac>
 800383a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800383c:	2e00      	cmp	r6, #0
 800383e:	d045      	beq.n	80038cc <__sflush_r+0xac>
 8003840:	2300      	movs	r3, #0
 8003842:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003846:	682f      	ldr	r7, [r5, #0]
 8003848:	6a21      	ldr	r1, [r4, #32]
 800384a:	602b      	str	r3, [r5, #0]
 800384c:	d030      	beq.n	80038b0 <__sflush_r+0x90>
 800384e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003850:	89a3      	ldrh	r3, [r4, #12]
 8003852:	0759      	lsls	r1, r3, #29
 8003854:	d505      	bpl.n	8003862 <__sflush_r+0x42>
 8003856:	6863      	ldr	r3, [r4, #4]
 8003858:	1ad2      	subs	r2, r2, r3
 800385a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800385c:	b10b      	cbz	r3, 8003862 <__sflush_r+0x42>
 800385e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003860:	1ad2      	subs	r2, r2, r3
 8003862:	2300      	movs	r3, #0
 8003864:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003866:	6a21      	ldr	r1, [r4, #32]
 8003868:	4628      	mov	r0, r5
 800386a:	47b0      	blx	r6
 800386c:	1c43      	adds	r3, r0, #1
 800386e:	89a3      	ldrh	r3, [r4, #12]
 8003870:	d106      	bne.n	8003880 <__sflush_r+0x60>
 8003872:	6829      	ldr	r1, [r5, #0]
 8003874:	291d      	cmp	r1, #29
 8003876:	d82b      	bhi.n	80038d0 <__sflush_r+0xb0>
 8003878:	4a28      	ldr	r2, [pc, #160]	@ (800391c <__sflush_r+0xfc>)
 800387a:	410a      	asrs	r2, r1
 800387c:	07d6      	lsls	r6, r2, #31
 800387e:	d427      	bmi.n	80038d0 <__sflush_r+0xb0>
 8003880:	2200      	movs	r2, #0
 8003882:	6062      	str	r2, [r4, #4]
 8003884:	04d9      	lsls	r1, r3, #19
 8003886:	6922      	ldr	r2, [r4, #16]
 8003888:	6022      	str	r2, [r4, #0]
 800388a:	d504      	bpl.n	8003896 <__sflush_r+0x76>
 800388c:	1c42      	adds	r2, r0, #1
 800388e:	d101      	bne.n	8003894 <__sflush_r+0x74>
 8003890:	682b      	ldr	r3, [r5, #0]
 8003892:	b903      	cbnz	r3, 8003896 <__sflush_r+0x76>
 8003894:	6560      	str	r0, [r4, #84]	@ 0x54
 8003896:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003898:	602f      	str	r7, [r5, #0]
 800389a:	b1b9      	cbz	r1, 80038cc <__sflush_r+0xac>
 800389c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80038a0:	4299      	cmp	r1, r3
 80038a2:	d002      	beq.n	80038aa <__sflush_r+0x8a>
 80038a4:	4628      	mov	r0, r5
 80038a6:	f7ff fb3b 	bl	8002f20 <_free_r>
 80038aa:	2300      	movs	r3, #0
 80038ac:	6363      	str	r3, [r4, #52]	@ 0x34
 80038ae:	e00d      	b.n	80038cc <__sflush_r+0xac>
 80038b0:	2301      	movs	r3, #1
 80038b2:	4628      	mov	r0, r5
 80038b4:	47b0      	blx	r6
 80038b6:	4602      	mov	r2, r0
 80038b8:	1c50      	adds	r0, r2, #1
 80038ba:	d1c9      	bne.n	8003850 <__sflush_r+0x30>
 80038bc:	682b      	ldr	r3, [r5, #0]
 80038be:	2b00      	cmp	r3, #0
 80038c0:	d0c6      	beq.n	8003850 <__sflush_r+0x30>
 80038c2:	2b1d      	cmp	r3, #29
 80038c4:	d001      	beq.n	80038ca <__sflush_r+0xaa>
 80038c6:	2b16      	cmp	r3, #22
 80038c8:	d11d      	bne.n	8003906 <__sflush_r+0xe6>
 80038ca:	602f      	str	r7, [r5, #0]
 80038cc:	2000      	movs	r0, #0
 80038ce:	e021      	b.n	8003914 <__sflush_r+0xf4>
 80038d0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80038d4:	b21b      	sxth	r3, r3
 80038d6:	e01a      	b.n	800390e <__sflush_r+0xee>
 80038d8:	690f      	ldr	r7, [r1, #16]
 80038da:	2f00      	cmp	r7, #0
 80038dc:	d0f6      	beq.n	80038cc <__sflush_r+0xac>
 80038de:	0793      	lsls	r3, r2, #30
 80038e0:	680e      	ldr	r6, [r1, #0]
 80038e2:	bf08      	it	eq
 80038e4:	694b      	ldreq	r3, [r1, #20]
 80038e6:	600f      	str	r7, [r1, #0]
 80038e8:	bf18      	it	ne
 80038ea:	2300      	movne	r3, #0
 80038ec:	1bf6      	subs	r6, r6, r7
 80038ee:	608b      	str	r3, [r1, #8]
 80038f0:	2e00      	cmp	r6, #0
 80038f2:	ddeb      	ble.n	80038cc <__sflush_r+0xac>
 80038f4:	6a21      	ldr	r1, [r4, #32]
 80038f6:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80038fa:	4633      	mov	r3, r6
 80038fc:	463a      	mov	r2, r7
 80038fe:	4628      	mov	r0, r5
 8003900:	47e0      	blx	ip
 8003902:	2800      	cmp	r0, #0
 8003904:	dc07      	bgt.n	8003916 <__sflush_r+0xf6>
 8003906:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800390a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800390e:	81a3      	strh	r3, [r4, #12]
 8003910:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003914:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003916:	4407      	add	r7, r0
 8003918:	1a36      	subs	r6, r6, r0
 800391a:	e7e9      	b.n	80038f0 <__sflush_r+0xd0>
 800391c:	dfbffffe 	.word	0xdfbffffe

08003920 <_fflush_r>:
 8003920:	b538      	push	{r3, r4, r5, lr}
 8003922:	690b      	ldr	r3, [r1, #16]
 8003924:	4605      	mov	r5, r0
 8003926:	460c      	mov	r4, r1
 8003928:	b913      	cbnz	r3, 8003930 <_fflush_r+0x10>
 800392a:	2500      	movs	r5, #0
 800392c:	4628      	mov	r0, r5
 800392e:	bd38      	pop	{r3, r4, r5, pc}
 8003930:	b118      	cbz	r0, 800393a <_fflush_r+0x1a>
 8003932:	6a03      	ldr	r3, [r0, #32]
 8003934:	b90b      	cbnz	r3, 800393a <_fflush_r+0x1a>
 8003936:	f7fe fba7 	bl	8002088 <__sinit>
 800393a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800393e:	2b00      	cmp	r3, #0
 8003940:	d0f3      	beq.n	800392a <_fflush_r+0xa>
 8003942:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003944:	07d0      	lsls	r0, r2, #31
 8003946:	d404      	bmi.n	8003952 <_fflush_r+0x32>
 8003948:	0599      	lsls	r1, r3, #22
 800394a:	d402      	bmi.n	8003952 <_fflush_r+0x32>
 800394c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800394e:	f7fe fc92 	bl	8002276 <__retarget_lock_acquire_recursive>
 8003952:	4628      	mov	r0, r5
 8003954:	4621      	mov	r1, r4
 8003956:	f7ff ff63 	bl	8003820 <__sflush_r>
 800395a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800395c:	07da      	lsls	r2, r3, #31
 800395e:	4605      	mov	r5, r0
 8003960:	d4e4      	bmi.n	800392c <_fflush_r+0xc>
 8003962:	89a3      	ldrh	r3, [r4, #12]
 8003964:	059b      	lsls	r3, r3, #22
 8003966:	d4e1      	bmi.n	800392c <_fflush_r+0xc>
 8003968:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800396a:	f7fe fc85 	bl	8002278 <__retarget_lock_release_recursive>
 800396e:	e7dd      	b.n	800392c <_fflush_r+0xc>

08003970 <_sbrk_r>:
 8003970:	b538      	push	{r3, r4, r5, lr}
 8003972:	4d06      	ldr	r5, [pc, #24]	@ (800398c <_sbrk_r+0x1c>)
 8003974:	2300      	movs	r3, #0
 8003976:	4604      	mov	r4, r0
 8003978:	4608      	mov	r0, r1
 800397a:	602b      	str	r3, [r5, #0]
 800397c:	f7fd fc1a 	bl	80011b4 <_sbrk>
 8003980:	1c43      	adds	r3, r0, #1
 8003982:	d102      	bne.n	800398a <_sbrk_r+0x1a>
 8003984:	682b      	ldr	r3, [r5, #0]
 8003986:	b103      	cbz	r3, 800398a <_sbrk_r+0x1a>
 8003988:	6023      	str	r3, [r4, #0]
 800398a:	bd38      	pop	{r3, r4, r5, pc}
 800398c:	200003c8 	.word	0x200003c8

08003990 <memcpy>:
 8003990:	440a      	add	r2, r1
 8003992:	4291      	cmp	r1, r2
 8003994:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8003998:	d100      	bne.n	800399c <memcpy+0xc>
 800399a:	4770      	bx	lr
 800399c:	b510      	push	{r4, lr}
 800399e:	f811 4b01 	ldrb.w	r4, [r1], #1
 80039a2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80039a6:	4291      	cmp	r1, r2
 80039a8:	d1f9      	bne.n	800399e <memcpy+0xe>
 80039aa:	bd10      	pop	{r4, pc}

080039ac <__assert_func>:
 80039ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80039ae:	4614      	mov	r4, r2
 80039b0:	461a      	mov	r2, r3
 80039b2:	4b09      	ldr	r3, [pc, #36]	@ (80039d8 <__assert_func+0x2c>)
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	4605      	mov	r5, r0
 80039b8:	68d8      	ldr	r0, [r3, #12]
 80039ba:	b954      	cbnz	r4, 80039d2 <__assert_func+0x26>
 80039bc:	4b07      	ldr	r3, [pc, #28]	@ (80039dc <__assert_func+0x30>)
 80039be:	461c      	mov	r4, r3
 80039c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80039c4:	9100      	str	r1, [sp, #0]
 80039c6:	462b      	mov	r3, r5
 80039c8:	4905      	ldr	r1, [pc, #20]	@ (80039e0 <__assert_func+0x34>)
 80039ca:	f000 f841 	bl	8003a50 <fiprintf>
 80039ce:	f000 f851 	bl	8003a74 <abort>
 80039d2:	4b04      	ldr	r3, [pc, #16]	@ (80039e4 <__assert_func+0x38>)
 80039d4:	e7f4      	b.n	80039c0 <__assert_func+0x14>
 80039d6:	bf00      	nop
 80039d8:	20000014 	.word	0x20000014
 80039dc:	0800422d 	.word	0x0800422d
 80039e0:	080041ff 	.word	0x080041ff
 80039e4:	080041f2 	.word	0x080041f2

080039e8 <_calloc_r>:
 80039e8:	b570      	push	{r4, r5, r6, lr}
 80039ea:	fba1 5402 	umull	r5, r4, r1, r2
 80039ee:	b93c      	cbnz	r4, 8003a00 <_calloc_r+0x18>
 80039f0:	4629      	mov	r1, r5
 80039f2:	f7ff fb09 	bl	8003008 <_malloc_r>
 80039f6:	4606      	mov	r6, r0
 80039f8:	b928      	cbnz	r0, 8003a06 <_calloc_r+0x1e>
 80039fa:	2600      	movs	r6, #0
 80039fc:	4630      	mov	r0, r6
 80039fe:	bd70      	pop	{r4, r5, r6, pc}
 8003a00:	220c      	movs	r2, #12
 8003a02:	6002      	str	r2, [r0, #0]
 8003a04:	e7f9      	b.n	80039fa <_calloc_r+0x12>
 8003a06:	462a      	mov	r2, r5
 8003a08:	4621      	mov	r1, r4
 8003a0a:	f7fe fbb6 	bl	800217a <memset>
 8003a0e:	e7f5      	b.n	80039fc <_calloc_r+0x14>

08003a10 <__ascii_mbtowc>:
 8003a10:	b082      	sub	sp, #8
 8003a12:	b901      	cbnz	r1, 8003a16 <__ascii_mbtowc+0x6>
 8003a14:	a901      	add	r1, sp, #4
 8003a16:	b142      	cbz	r2, 8003a2a <__ascii_mbtowc+0x1a>
 8003a18:	b14b      	cbz	r3, 8003a2e <__ascii_mbtowc+0x1e>
 8003a1a:	7813      	ldrb	r3, [r2, #0]
 8003a1c:	600b      	str	r3, [r1, #0]
 8003a1e:	7812      	ldrb	r2, [r2, #0]
 8003a20:	1e10      	subs	r0, r2, #0
 8003a22:	bf18      	it	ne
 8003a24:	2001      	movne	r0, #1
 8003a26:	b002      	add	sp, #8
 8003a28:	4770      	bx	lr
 8003a2a:	4610      	mov	r0, r2
 8003a2c:	e7fb      	b.n	8003a26 <__ascii_mbtowc+0x16>
 8003a2e:	f06f 0001 	mvn.w	r0, #1
 8003a32:	e7f8      	b.n	8003a26 <__ascii_mbtowc+0x16>

08003a34 <__ascii_wctomb>:
 8003a34:	4603      	mov	r3, r0
 8003a36:	4608      	mov	r0, r1
 8003a38:	b141      	cbz	r1, 8003a4c <__ascii_wctomb+0x18>
 8003a3a:	2aff      	cmp	r2, #255	@ 0xff
 8003a3c:	d904      	bls.n	8003a48 <__ascii_wctomb+0x14>
 8003a3e:	228a      	movs	r2, #138	@ 0x8a
 8003a40:	601a      	str	r2, [r3, #0]
 8003a42:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003a46:	4770      	bx	lr
 8003a48:	700a      	strb	r2, [r1, #0]
 8003a4a:	2001      	movs	r0, #1
 8003a4c:	4770      	bx	lr
	...

08003a50 <fiprintf>:
 8003a50:	b40e      	push	{r1, r2, r3}
 8003a52:	b503      	push	{r0, r1, lr}
 8003a54:	4601      	mov	r1, r0
 8003a56:	ab03      	add	r3, sp, #12
 8003a58:	4805      	ldr	r0, [pc, #20]	@ (8003a70 <fiprintf+0x20>)
 8003a5a:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a5e:	6800      	ldr	r0, [r0, #0]
 8003a60:	9301      	str	r3, [sp, #4]
 8003a62:	f000 f835 	bl	8003ad0 <_vfiprintf_r>
 8003a66:	b002      	add	sp, #8
 8003a68:	f85d eb04 	ldr.w	lr, [sp], #4
 8003a6c:	b003      	add	sp, #12
 8003a6e:	4770      	bx	lr
 8003a70:	20000014 	.word	0x20000014

08003a74 <abort>:
 8003a74:	b508      	push	{r3, lr}
 8003a76:	2006      	movs	r0, #6
 8003a78:	f000 f9fe 	bl	8003e78 <raise>
 8003a7c:	2001      	movs	r0, #1
 8003a7e:	f7fd fb24 	bl	80010ca <_exit>

08003a82 <__sfputc_r>:
 8003a82:	6893      	ldr	r3, [r2, #8]
 8003a84:	3b01      	subs	r3, #1
 8003a86:	2b00      	cmp	r3, #0
 8003a88:	b410      	push	{r4}
 8003a8a:	6093      	str	r3, [r2, #8]
 8003a8c:	da07      	bge.n	8003a9e <__sfputc_r+0x1c>
 8003a8e:	6994      	ldr	r4, [r2, #24]
 8003a90:	42a3      	cmp	r3, r4
 8003a92:	db01      	blt.n	8003a98 <__sfputc_r+0x16>
 8003a94:	290a      	cmp	r1, #10
 8003a96:	d102      	bne.n	8003a9e <__sfputc_r+0x1c>
 8003a98:	bc10      	pop	{r4}
 8003a9a:	f000 b931 	b.w	8003d00 <__swbuf_r>
 8003a9e:	6813      	ldr	r3, [r2, #0]
 8003aa0:	1c58      	adds	r0, r3, #1
 8003aa2:	6010      	str	r0, [r2, #0]
 8003aa4:	7019      	strb	r1, [r3, #0]
 8003aa6:	4608      	mov	r0, r1
 8003aa8:	bc10      	pop	{r4}
 8003aaa:	4770      	bx	lr

08003aac <__sfputs_r>:
 8003aac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003aae:	4606      	mov	r6, r0
 8003ab0:	460f      	mov	r7, r1
 8003ab2:	4614      	mov	r4, r2
 8003ab4:	18d5      	adds	r5, r2, r3
 8003ab6:	42ac      	cmp	r4, r5
 8003ab8:	d101      	bne.n	8003abe <__sfputs_r+0x12>
 8003aba:	2000      	movs	r0, #0
 8003abc:	e007      	b.n	8003ace <__sfputs_r+0x22>
 8003abe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003ac2:	463a      	mov	r2, r7
 8003ac4:	4630      	mov	r0, r6
 8003ac6:	f7ff ffdc 	bl	8003a82 <__sfputc_r>
 8003aca:	1c43      	adds	r3, r0, #1
 8003acc:	d1f3      	bne.n	8003ab6 <__sfputs_r+0xa>
 8003ace:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08003ad0 <_vfiprintf_r>:
 8003ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ad4:	460d      	mov	r5, r1
 8003ad6:	b09d      	sub	sp, #116	@ 0x74
 8003ad8:	4614      	mov	r4, r2
 8003ada:	4698      	mov	r8, r3
 8003adc:	4606      	mov	r6, r0
 8003ade:	b118      	cbz	r0, 8003ae8 <_vfiprintf_r+0x18>
 8003ae0:	6a03      	ldr	r3, [r0, #32]
 8003ae2:	b90b      	cbnz	r3, 8003ae8 <_vfiprintf_r+0x18>
 8003ae4:	f7fe fad0 	bl	8002088 <__sinit>
 8003ae8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003aea:	07d9      	lsls	r1, r3, #31
 8003aec:	d405      	bmi.n	8003afa <_vfiprintf_r+0x2a>
 8003aee:	89ab      	ldrh	r3, [r5, #12]
 8003af0:	059a      	lsls	r2, r3, #22
 8003af2:	d402      	bmi.n	8003afa <_vfiprintf_r+0x2a>
 8003af4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003af6:	f7fe fbbe 	bl	8002276 <__retarget_lock_acquire_recursive>
 8003afa:	89ab      	ldrh	r3, [r5, #12]
 8003afc:	071b      	lsls	r3, r3, #28
 8003afe:	d501      	bpl.n	8003b04 <_vfiprintf_r+0x34>
 8003b00:	692b      	ldr	r3, [r5, #16]
 8003b02:	b99b      	cbnz	r3, 8003b2c <_vfiprintf_r+0x5c>
 8003b04:	4629      	mov	r1, r5
 8003b06:	4630      	mov	r0, r6
 8003b08:	f000 f938 	bl	8003d7c <__swsetup_r>
 8003b0c:	b170      	cbz	r0, 8003b2c <_vfiprintf_r+0x5c>
 8003b0e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003b10:	07dc      	lsls	r4, r3, #31
 8003b12:	d504      	bpl.n	8003b1e <_vfiprintf_r+0x4e>
 8003b14:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003b18:	b01d      	add	sp, #116	@ 0x74
 8003b1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b1e:	89ab      	ldrh	r3, [r5, #12]
 8003b20:	0598      	lsls	r0, r3, #22
 8003b22:	d4f7      	bmi.n	8003b14 <_vfiprintf_r+0x44>
 8003b24:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003b26:	f7fe fba7 	bl	8002278 <__retarget_lock_release_recursive>
 8003b2a:	e7f3      	b.n	8003b14 <_vfiprintf_r+0x44>
 8003b2c:	2300      	movs	r3, #0
 8003b2e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003b30:	2320      	movs	r3, #32
 8003b32:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003b36:	f8cd 800c 	str.w	r8, [sp, #12]
 8003b3a:	2330      	movs	r3, #48	@ 0x30
 8003b3c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8003cec <_vfiprintf_r+0x21c>
 8003b40:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003b44:	f04f 0901 	mov.w	r9, #1
 8003b48:	4623      	mov	r3, r4
 8003b4a:	469a      	mov	sl, r3
 8003b4c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003b50:	b10a      	cbz	r2, 8003b56 <_vfiprintf_r+0x86>
 8003b52:	2a25      	cmp	r2, #37	@ 0x25
 8003b54:	d1f9      	bne.n	8003b4a <_vfiprintf_r+0x7a>
 8003b56:	ebba 0b04 	subs.w	fp, sl, r4
 8003b5a:	d00b      	beq.n	8003b74 <_vfiprintf_r+0xa4>
 8003b5c:	465b      	mov	r3, fp
 8003b5e:	4622      	mov	r2, r4
 8003b60:	4629      	mov	r1, r5
 8003b62:	4630      	mov	r0, r6
 8003b64:	f7ff ffa2 	bl	8003aac <__sfputs_r>
 8003b68:	3001      	adds	r0, #1
 8003b6a:	f000 80a7 	beq.w	8003cbc <_vfiprintf_r+0x1ec>
 8003b6e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003b70:	445a      	add	r2, fp
 8003b72:	9209      	str	r2, [sp, #36]	@ 0x24
 8003b74:	f89a 3000 	ldrb.w	r3, [sl]
 8003b78:	2b00      	cmp	r3, #0
 8003b7a:	f000 809f 	beq.w	8003cbc <_vfiprintf_r+0x1ec>
 8003b7e:	2300      	movs	r3, #0
 8003b80:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003b84:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003b88:	f10a 0a01 	add.w	sl, sl, #1
 8003b8c:	9304      	str	r3, [sp, #16]
 8003b8e:	9307      	str	r3, [sp, #28]
 8003b90:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003b94:	931a      	str	r3, [sp, #104]	@ 0x68
 8003b96:	4654      	mov	r4, sl
 8003b98:	2205      	movs	r2, #5
 8003b9a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003b9e:	4853      	ldr	r0, [pc, #332]	@ (8003cec <_vfiprintf_r+0x21c>)
 8003ba0:	f7fc fb1e 	bl	80001e0 <memchr>
 8003ba4:	9a04      	ldr	r2, [sp, #16]
 8003ba6:	b9d8      	cbnz	r0, 8003be0 <_vfiprintf_r+0x110>
 8003ba8:	06d1      	lsls	r1, r2, #27
 8003baa:	bf44      	itt	mi
 8003bac:	2320      	movmi	r3, #32
 8003bae:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003bb2:	0713      	lsls	r3, r2, #28
 8003bb4:	bf44      	itt	mi
 8003bb6:	232b      	movmi	r3, #43	@ 0x2b
 8003bb8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003bbc:	f89a 3000 	ldrb.w	r3, [sl]
 8003bc0:	2b2a      	cmp	r3, #42	@ 0x2a
 8003bc2:	d015      	beq.n	8003bf0 <_vfiprintf_r+0x120>
 8003bc4:	9a07      	ldr	r2, [sp, #28]
 8003bc6:	4654      	mov	r4, sl
 8003bc8:	2000      	movs	r0, #0
 8003bca:	f04f 0c0a 	mov.w	ip, #10
 8003bce:	4621      	mov	r1, r4
 8003bd0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003bd4:	3b30      	subs	r3, #48	@ 0x30
 8003bd6:	2b09      	cmp	r3, #9
 8003bd8:	d94b      	bls.n	8003c72 <_vfiprintf_r+0x1a2>
 8003bda:	b1b0      	cbz	r0, 8003c0a <_vfiprintf_r+0x13a>
 8003bdc:	9207      	str	r2, [sp, #28]
 8003bde:	e014      	b.n	8003c0a <_vfiprintf_r+0x13a>
 8003be0:	eba0 0308 	sub.w	r3, r0, r8
 8003be4:	fa09 f303 	lsl.w	r3, r9, r3
 8003be8:	4313      	orrs	r3, r2
 8003bea:	9304      	str	r3, [sp, #16]
 8003bec:	46a2      	mov	sl, r4
 8003bee:	e7d2      	b.n	8003b96 <_vfiprintf_r+0xc6>
 8003bf0:	9b03      	ldr	r3, [sp, #12]
 8003bf2:	1d19      	adds	r1, r3, #4
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	9103      	str	r1, [sp, #12]
 8003bf8:	2b00      	cmp	r3, #0
 8003bfa:	bfbb      	ittet	lt
 8003bfc:	425b      	neglt	r3, r3
 8003bfe:	f042 0202 	orrlt.w	r2, r2, #2
 8003c02:	9307      	strge	r3, [sp, #28]
 8003c04:	9307      	strlt	r3, [sp, #28]
 8003c06:	bfb8      	it	lt
 8003c08:	9204      	strlt	r2, [sp, #16]
 8003c0a:	7823      	ldrb	r3, [r4, #0]
 8003c0c:	2b2e      	cmp	r3, #46	@ 0x2e
 8003c0e:	d10a      	bne.n	8003c26 <_vfiprintf_r+0x156>
 8003c10:	7863      	ldrb	r3, [r4, #1]
 8003c12:	2b2a      	cmp	r3, #42	@ 0x2a
 8003c14:	d132      	bne.n	8003c7c <_vfiprintf_r+0x1ac>
 8003c16:	9b03      	ldr	r3, [sp, #12]
 8003c18:	1d1a      	adds	r2, r3, #4
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	9203      	str	r2, [sp, #12]
 8003c1e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003c22:	3402      	adds	r4, #2
 8003c24:	9305      	str	r3, [sp, #20]
 8003c26:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8003cf0 <_vfiprintf_r+0x220>
 8003c2a:	7821      	ldrb	r1, [r4, #0]
 8003c2c:	2203      	movs	r2, #3
 8003c2e:	4650      	mov	r0, sl
 8003c30:	f7fc fad6 	bl	80001e0 <memchr>
 8003c34:	b138      	cbz	r0, 8003c46 <_vfiprintf_r+0x176>
 8003c36:	9b04      	ldr	r3, [sp, #16]
 8003c38:	eba0 000a 	sub.w	r0, r0, sl
 8003c3c:	2240      	movs	r2, #64	@ 0x40
 8003c3e:	4082      	lsls	r2, r0
 8003c40:	4313      	orrs	r3, r2
 8003c42:	3401      	adds	r4, #1
 8003c44:	9304      	str	r3, [sp, #16]
 8003c46:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c4a:	482a      	ldr	r0, [pc, #168]	@ (8003cf4 <_vfiprintf_r+0x224>)
 8003c4c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003c50:	2206      	movs	r2, #6
 8003c52:	f7fc fac5 	bl	80001e0 <memchr>
 8003c56:	2800      	cmp	r0, #0
 8003c58:	d03f      	beq.n	8003cda <_vfiprintf_r+0x20a>
 8003c5a:	4b27      	ldr	r3, [pc, #156]	@ (8003cf8 <_vfiprintf_r+0x228>)
 8003c5c:	bb1b      	cbnz	r3, 8003ca6 <_vfiprintf_r+0x1d6>
 8003c5e:	9b03      	ldr	r3, [sp, #12]
 8003c60:	3307      	adds	r3, #7
 8003c62:	f023 0307 	bic.w	r3, r3, #7
 8003c66:	3308      	adds	r3, #8
 8003c68:	9303      	str	r3, [sp, #12]
 8003c6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003c6c:	443b      	add	r3, r7
 8003c6e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c70:	e76a      	b.n	8003b48 <_vfiprintf_r+0x78>
 8003c72:	fb0c 3202 	mla	r2, ip, r2, r3
 8003c76:	460c      	mov	r4, r1
 8003c78:	2001      	movs	r0, #1
 8003c7a:	e7a8      	b.n	8003bce <_vfiprintf_r+0xfe>
 8003c7c:	2300      	movs	r3, #0
 8003c7e:	3401      	adds	r4, #1
 8003c80:	9305      	str	r3, [sp, #20]
 8003c82:	4619      	mov	r1, r3
 8003c84:	f04f 0c0a 	mov.w	ip, #10
 8003c88:	4620      	mov	r0, r4
 8003c8a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003c8e:	3a30      	subs	r2, #48	@ 0x30
 8003c90:	2a09      	cmp	r2, #9
 8003c92:	d903      	bls.n	8003c9c <_vfiprintf_r+0x1cc>
 8003c94:	2b00      	cmp	r3, #0
 8003c96:	d0c6      	beq.n	8003c26 <_vfiprintf_r+0x156>
 8003c98:	9105      	str	r1, [sp, #20]
 8003c9a:	e7c4      	b.n	8003c26 <_vfiprintf_r+0x156>
 8003c9c:	fb0c 2101 	mla	r1, ip, r1, r2
 8003ca0:	4604      	mov	r4, r0
 8003ca2:	2301      	movs	r3, #1
 8003ca4:	e7f0      	b.n	8003c88 <_vfiprintf_r+0x1b8>
 8003ca6:	ab03      	add	r3, sp, #12
 8003ca8:	9300      	str	r3, [sp, #0]
 8003caa:	462a      	mov	r2, r5
 8003cac:	4b13      	ldr	r3, [pc, #76]	@ (8003cfc <_vfiprintf_r+0x22c>)
 8003cae:	a904      	add	r1, sp, #16
 8003cb0:	4630      	mov	r0, r6
 8003cb2:	f7fd fda3 	bl	80017fc <_printf_float>
 8003cb6:	4607      	mov	r7, r0
 8003cb8:	1c78      	adds	r0, r7, #1
 8003cba:	d1d6      	bne.n	8003c6a <_vfiprintf_r+0x19a>
 8003cbc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003cbe:	07d9      	lsls	r1, r3, #31
 8003cc0:	d405      	bmi.n	8003cce <_vfiprintf_r+0x1fe>
 8003cc2:	89ab      	ldrh	r3, [r5, #12]
 8003cc4:	059a      	lsls	r2, r3, #22
 8003cc6:	d402      	bmi.n	8003cce <_vfiprintf_r+0x1fe>
 8003cc8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003cca:	f7fe fad5 	bl	8002278 <__retarget_lock_release_recursive>
 8003cce:	89ab      	ldrh	r3, [r5, #12]
 8003cd0:	065b      	lsls	r3, r3, #25
 8003cd2:	f53f af1f 	bmi.w	8003b14 <_vfiprintf_r+0x44>
 8003cd6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003cd8:	e71e      	b.n	8003b18 <_vfiprintf_r+0x48>
 8003cda:	ab03      	add	r3, sp, #12
 8003cdc:	9300      	str	r3, [sp, #0]
 8003cde:	462a      	mov	r2, r5
 8003ce0:	4b06      	ldr	r3, [pc, #24]	@ (8003cfc <_vfiprintf_r+0x22c>)
 8003ce2:	a904      	add	r1, sp, #16
 8003ce4:	4630      	mov	r0, r6
 8003ce6:	f7fe f823 	bl	8001d30 <_printf_i>
 8003cea:	e7e4      	b.n	8003cb6 <_vfiprintf_r+0x1e6>
 8003cec:	0800432f 	.word	0x0800432f
 8003cf0:	08004335 	.word	0x08004335
 8003cf4:	08004339 	.word	0x08004339
 8003cf8:	080017fd 	.word	0x080017fd
 8003cfc:	08003aad 	.word	0x08003aad

08003d00 <__swbuf_r>:
 8003d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d02:	460e      	mov	r6, r1
 8003d04:	4614      	mov	r4, r2
 8003d06:	4605      	mov	r5, r0
 8003d08:	b118      	cbz	r0, 8003d12 <__swbuf_r+0x12>
 8003d0a:	6a03      	ldr	r3, [r0, #32]
 8003d0c:	b90b      	cbnz	r3, 8003d12 <__swbuf_r+0x12>
 8003d0e:	f7fe f9bb 	bl	8002088 <__sinit>
 8003d12:	69a3      	ldr	r3, [r4, #24]
 8003d14:	60a3      	str	r3, [r4, #8]
 8003d16:	89a3      	ldrh	r3, [r4, #12]
 8003d18:	071a      	lsls	r2, r3, #28
 8003d1a:	d501      	bpl.n	8003d20 <__swbuf_r+0x20>
 8003d1c:	6923      	ldr	r3, [r4, #16]
 8003d1e:	b943      	cbnz	r3, 8003d32 <__swbuf_r+0x32>
 8003d20:	4621      	mov	r1, r4
 8003d22:	4628      	mov	r0, r5
 8003d24:	f000 f82a 	bl	8003d7c <__swsetup_r>
 8003d28:	b118      	cbz	r0, 8003d32 <__swbuf_r+0x32>
 8003d2a:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8003d2e:	4638      	mov	r0, r7
 8003d30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d32:	6823      	ldr	r3, [r4, #0]
 8003d34:	6922      	ldr	r2, [r4, #16]
 8003d36:	1a98      	subs	r0, r3, r2
 8003d38:	6963      	ldr	r3, [r4, #20]
 8003d3a:	b2f6      	uxtb	r6, r6
 8003d3c:	4283      	cmp	r3, r0
 8003d3e:	4637      	mov	r7, r6
 8003d40:	dc05      	bgt.n	8003d4e <__swbuf_r+0x4e>
 8003d42:	4621      	mov	r1, r4
 8003d44:	4628      	mov	r0, r5
 8003d46:	f7ff fdeb 	bl	8003920 <_fflush_r>
 8003d4a:	2800      	cmp	r0, #0
 8003d4c:	d1ed      	bne.n	8003d2a <__swbuf_r+0x2a>
 8003d4e:	68a3      	ldr	r3, [r4, #8]
 8003d50:	3b01      	subs	r3, #1
 8003d52:	60a3      	str	r3, [r4, #8]
 8003d54:	6823      	ldr	r3, [r4, #0]
 8003d56:	1c5a      	adds	r2, r3, #1
 8003d58:	6022      	str	r2, [r4, #0]
 8003d5a:	701e      	strb	r6, [r3, #0]
 8003d5c:	6962      	ldr	r2, [r4, #20]
 8003d5e:	1c43      	adds	r3, r0, #1
 8003d60:	429a      	cmp	r2, r3
 8003d62:	d004      	beq.n	8003d6e <__swbuf_r+0x6e>
 8003d64:	89a3      	ldrh	r3, [r4, #12]
 8003d66:	07db      	lsls	r3, r3, #31
 8003d68:	d5e1      	bpl.n	8003d2e <__swbuf_r+0x2e>
 8003d6a:	2e0a      	cmp	r6, #10
 8003d6c:	d1df      	bne.n	8003d2e <__swbuf_r+0x2e>
 8003d6e:	4621      	mov	r1, r4
 8003d70:	4628      	mov	r0, r5
 8003d72:	f7ff fdd5 	bl	8003920 <_fflush_r>
 8003d76:	2800      	cmp	r0, #0
 8003d78:	d0d9      	beq.n	8003d2e <__swbuf_r+0x2e>
 8003d7a:	e7d6      	b.n	8003d2a <__swbuf_r+0x2a>

08003d7c <__swsetup_r>:
 8003d7c:	b538      	push	{r3, r4, r5, lr}
 8003d7e:	4b29      	ldr	r3, [pc, #164]	@ (8003e24 <__swsetup_r+0xa8>)
 8003d80:	4605      	mov	r5, r0
 8003d82:	6818      	ldr	r0, [r3, #0]
 8003d84:	460c      	mov	r4, r1
 8003d86:	b118      	cbz	r0, 8003d90 <__swsetup_r+0x14>
 8003d88:	6a03      	ldr	r3, [r0, #32]
 8003d8a:	b90b      	cbnz	r3, 8003d90 <__swsetup_r+0x14>
 8003d8c:	f7fe f97c 	bl	8002088 <__sinit>
 8003d90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d94:	0719      	lsls	r1, r3, #28
 8003d96:	d422      	bmi.n	8003dde <__swsetup_r+0x62>
 8003d98:	06da      	lsls	r2, r3, #27
 8003d9a:	d407      	bmi.n	8003dac <__swsetup_r+0x30>
 8003d9c:	2209      	movs	r2, #9
 8003d9e:	602a      	str	r2, [r5, #0]
 8003da0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003da4:	81a3      	strh	r3, [r4, #12]
 8003da6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003daa:	e033      	b.n	8003e14 <__swsetup_r+0x98>
 8003dac:	0758      	lsls	r0, r3, #29
 8003dae:	d512      	bpl.n	8003dd6 <__swsetup_r+0x5a>
 8003db0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003db2:	b141      	cbz	r1, 8003dc6 <__swsetup_r+0x4a>
 8003db4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003db8:	4299      	cmp	r1, r3
 8003dba:	d002      	beq.n	8003dc2 <__swsetup_r+0x46>
 8003dbc:	4628      	mov	r0, r5
 8003dbe:	f7ff f8af 	bl	8002f20 <_free_r>
 8003dc2:	2300      	movs	r3, #0
 8003dc4:	6363      	str	r3, [r4, #52]	@ 0x34
 8003dc6:	89a3      	ldrh	r3, [r4, #12]
 8003dc8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8003dcc:	81a3      	strh	r3, [r4, #12]
 8003dce:	2300      	movs	r3, #0
 8003dd0:	6063      	str	r3, [r4, #4]
 8003dd2:	6923      	ldr	r3, [r4, #16]
 8003dd4:	6023      	str	r3, [r4, #0]
 8003dd6:	89a3      	ldrh	r3, [r4, #12]
 8003dd8:	f043 0308 	orr.w	r3, r3, #8
 8003ddc:	81a3      	strh	r3, [r4, #12]
 8003dde:	6923      	ldr	r3, [r4, #16]
 8003de0:	b94b      	cbnz	r3, 8003df6 <__swsetup_r+0x7a>
 8003de2:	89a3      	ldrh	r3, [r4, #12]
 8003de4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8003de8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003dec:	d003      	beq.n	8003df6 <__swsetup_r+0x7a>
 8003dee:	4621      	mov	r1, r4
 8003df0:	4628      	mov	r0, r5
 8003df2:	f000 f883 	bl	8003efc <__smakebuf_r>
 8003df6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003dfa:	f013 0201 	ands.w	r2, r3, #1
 8003dfe:	d00a      	beq.n	8003e16 <__swsetup_r+0x9a>
 8003e00:	2200      	movs	r2, #0
 8003e02:	60a2      	str	r2, [r4, #8]
 8003e04:	6962      	ldr	r2, [r4, #20]
 8003e06:	4252      	negs	r2, r2
 8003e08:	61a2      	str	r2, [r4, #24]
 8003e0a:	6922      	ldr	r2, [r4, #16]
 8003e0c:	b942      	cbnz	r2, 8003e20 <__swsetup_r+0xa4>
 8003e0e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8003e12:	d1c5      	bne.n	8003da0 <__swsetup_r+0x24>
 8003e14:	bd38      	pop	{r3, r4, r5, pc}
 8003e16:	0799      	lsls	r1, r3, #30
 8003e18:	bf58      	it	pl
 8003e1a:	6962      	ldrpl	r2, [r4, #20]
 8003e1c:	60a2      	str	r2, [r4, #8]
 8003e1e:	e7f4      	b.n	8003e0a <__swsetup_r+0x8e>
 8003e20:	2000      	movs	r0, #0
 8003e22:	e7f7      	b.n	8003e14 <__swsetup_r+0x98>
 8003e24:	20000014 	.word	0x20000014

08003e28 <_raise_r>:
 8003e28:	291f      	cmp	r1, #31
 8003e2a:	b538      	push	{r3, r4, r5, lr}
 8003e2c:	4605      	mov	r5, r0
 8003e2e:	460c      	mov	r4, r1
 8003e30:	d904      	bls.n	8003e3c <_raise_r+0x14>
 8003e32:	2316      	movs	r3, #22
 8003e34:	6003      	str	r3, [r0, #0]
 8003e36:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003e3a:	bd38      	pop	{r3, r4, r5, pc}
 8003e3c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8003e3e:	b112      	cbz	r2, 8003e46 <_raise_r+0x1e>
 8003e40:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003e44:	b94b      	cbnz	r3, 8003e5a <_raise_r+0x32>
 8003e46:	4628      	mov	r0, r5
 8003e48:	f000 f830 	bl	8003eac <_getpid_r>
 8003e4c:	4622      	mov	r2, r4
 8003e4e:	4601      	mov	r1, r0
 8003e50:	4628      	mov	r0, r5
 8003e52:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003e56:	f000 b817 	b.w	8003e88 <_kill_r>
 8003e5a:	2b01      	cmp	r3, #1
 8003e5c:	d00a      	beq.n	8003e74 <_raise_r+0x4c>
 8003e5e:	1c59      	adds	r1, r3, #1
 8003e60:	d103      	bne.n	8003e6a <_raise_r+0x42>
 8003e62:	2316      	movs	r3, #22
 8003e64:	6003      	str	r3, [r0, #0]
 8003e66:	2001      	movs	r0, #1
 8003e68:	e7e7      	b.n	8003e3a <_raise_r+0x12>
 8003e6a:	2100      	movs	r1, #0
 8003e6c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8003e70:	4620      	mov	r0, r4
 8003e72:	4798      	blx	r3
 8003e74:	2000      	movs	r0, #0
 8003e76:	e7e0      	b.n	8003e3a <_raise_r+0x12>

08003e78 <raise>:
 8003e78:	4b02      	ldr	r3, [pc, #8]	@ (8003e84 <raise+0xc>)
 8003e7a:	4601      	mov	r1, r0
 8003e7c:	6818      	ldr	r0, [r3, #0]
 8003e7e:	f7ff bfd3 	b.w	8003e28 <_raise_r>
 8003e82:	bf00      	nop
 8003e84:	20000014 	.word	0x20000014

08003e88 <_kill_r>:
 8003e88:	b538      	push	{r3, r4, r5, lr}
 8003e8a:	4d07      	ldr	r5, [pc, #28]	@ (8003ea8 <_kill_r+0x20>)
 8003e8c:	2300      	movs	r3, #0
 8003e8e:	4604      	mov	r4, r0
 8003e90:	4608      	mov	r0, r1
 8003e92:	4611      	mov	r1, r2
 8003e94:	602b      	str	r3, [r5, #0]
 8003e96:	f7fd f908 	bl	80010aa <_kill>
 8003e9a:	1c43      	adds	r3, r0, #1
 8003e9c:	d102      	bne.n	8003ea4 <_kill_r+0x1c>
 8003e9e:	682b      	ldr	r3, [r5, #0]
 8003ea0:	b103      	cbz	r3, 8003ea4 <_kill_r+0x1c>
 8003ea2:	6023      	str	r3, [r4, #0]
 8003ea4:	bd38      	pop	{r3, r4, r5, pc}
 8003ea6:	bf00      	nop
 8003ea8:	200003c8 	.word	0x200003c8

08003eac <_getpid_r>:
 8003eac:	f7fd b8f6 	b.w	800109c <_getpid>

08003eb0 <__swhatbuf_r>:
 8003eb0:	b570      	push	{r4, r5, r6, lr}
 8003eb2:	460c      	mov	r4, r1
 8003eb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003eb8:	2900      	cmp	r1, #0
 8003eba:	b096      	sub	sp, #88	@ 0x58
 8003ebc:	4615      	mov	r5, r2
 8003ebe:	461e      	mov	r6, r3
 8003ec0:	da0d      	bge.n	8003ede <__swhatbuf_r+0x2e>
 8003ec2:	89a3      	ldrh	r3, [r4, #12]
 8003ec4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8003ec8:	f04f 0100 	mov.w	r1, #0
 8003ecc:	bf14      	ite	ne
 8003ece:	2340      	movne	r3, #64	@ 0x40
 8003ed0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8003ed4:	2000      	movs	r0, #0
 8003ed6:	6031      	str	r1, [r6, #0]
 8003ed8:	602b      	str	r3, [r5, #0]
 8003eda:	b016      	add	sp, #88	@ 0x58
 8003edc:	bd70      	pop	{r4, r5, r6, pc}
 8003ede:	466a      	mov	r2, sp
 8003ee0:	f000 f848 	bl	8003f74 <_fstat_r>
 8003ee4:	2800      	cmp	r0, #0
 8003ee6:	dbec      	blt.n	8003ec2 <__swhatbuf_r+0x12>
 8003ee8:	9901      	ldr	r1, [sp, #4]
 8003eea:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8003eee:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8003ef2:	4259      	negs	r1, r3
 8003ef4:	4159      	adcs	r1, r3
 8003ef6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003efa:	e7eb      	b.n	8003ed4 <__swhatbuf_r+0x24>

08003efc <__smakebuf_r>:
 8003efc:	898b      	ldrh	r3, [r1, #12]
 8003efe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003f00:	079d      	lsls	r5, r3, #30
 8003f02:	4606      	mov	r6, r0
 8003f04:	460c      	mov	r4, r1
 8003f06:	d507      	bpl.n	8003f18 <__smakebuf_r+0x1c>
 8003f08:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8003f0c:	6023      	str	r3, [r4, #0]
 8003f0e:	6123      	str	r3, [r4, #16]
 8003f10:	2301      	movs	r3, #1
 8003f12:	6163      	str	r3, [r4, #20]
 8003f14:	b003      	add	sp, #12
 8003f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f18:	ab01      	add	r3, sp, #4
 8003f1a:	466a      	mov	r2, sp
 8003f1c:	f7ff ffc8 	bl	8003eb0 <__swhatbuf_r>
 8003f20:	9f00      	ldr	r7, [sp, #0]
 8003f22:	4605      	mov	r5, r0
 8003f24:	4639      	mov	r1, r7
 8003f26:	4630      	mov	r0, r6
 8003f28:	f7ff f86e 	bl	8003008 <_malloc_r>
 8003f2c:	b948      	cbnz	r0, 8003f42 <__smakebuf_r+0x46>
 8003f2e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003f32:	059a      	lsls	r2, r3, #22
 8003f34:	d4ee      	bmi.n	8003f14 <__smakebuf_r+0x18>
 8003f36:	f023 0303 	bic.w	r3, r3, #3
 8003f3a:	f043 0302 	orr.w	r3, r3, #2
 8003f3e:	81a3      	strh	r3, [r4, #12]
 8003f40:	e7e2      	b.n	8003f08 <__smakebuf_r+0xc>
 8003f42:	89a3      	ldrh	r3, [r4, #12]
 8003f44:	6020      	str	r0, [r4, #0]
 8003f46:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003f4a:	81a3      	strh	r3, [r4, #12]
 8003f4c:	9b01      	ldr	r3, [sp, #4]
 8003f4e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8003f52:	b15b      	cbz	r3, 8003f6c <__smakebuf_r+0x70>
 8003f54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003f58:	4630      	mov	r0, r6
 8003f5a:	f000 f81d 	bl	8003f98 <_isatty_r>
 8003f5e:	b128      	cbz	r0, 8003f6c <__smakebuf_r+0x70>
 8003f60:	89a3      	ldrh	r3, [r4, #12]
 8003f62:	f023 0303 	bic.w	r3, r3, #3
 8003f66:	f043 0301 	orr.w	r3, r3, #1
 8003f6a:	81a3      	strh	r3, [r4, #12]
 8003f6c:	89a3      	ldrh	r3, [r4, #12]
 8003f6e:	431d      	orrs	r5, r3
 8003f70:	81a5      	strh	r5, [r4, #12]
 8003f72:	e7cf      	b.n	8003f14 <__smakebuf_r+0x18>

08003f74 <_fstat_r>:
 8003f74:	b538      	push	{r3, r4, r5, lr}
 8003f76:	4d07      	ldr	r5, [pc, #28]	@ (8003f94 <_fstat_r+0x20>)
 8003f78:	2300      	movs	r3, #0
 8003f7a:	4604      	mov	r4, r0
 8003f7c:	4608      	mov	r0, r1
 8003f7e:	4611      	mov	r1, r2
 8003f80:	602b      	str	r3, [r5, #0]
 8003f82:	f7fd f8f1 	bl	8001168 <_fstat>
 8003f86:	1c43      	adds	r3, r0, #1
 8003f88:	d102      	bne.n	8003f90 <_fstat_r+0x1c>
 8003f8a:	682b      	ldr	r3, [r5, #0]
 8003f8c:	b103      	cbz	r3, 8003f90 <_fstat_r+0x1c>
 8003f8e:	6023      	str	r3, [r4, #0]
 8003f90:	bd38      	pop	{r3, r4, r5, pc}
 8003f92:	bf00      	nop
 8003f94:	200003c8 	.word	0x200003c8

08003f98 <_isatty_r>:
 8003f98:	b538      	push	{r3, r4, r5, lr}
 8003f9a:	4d06      	ldr	r5, [pc, #24]	@ (8003fb4 <_isatty_r+0x1c>)
 8003f9c:	2300      	movs	r3, #0
 8003f9e:	4604      	mov	r4, r0
 8003fa0:	4608      	mov	r0, r1
 8003fa2:	602b      	str	r3, [r5, #0]
 8003fa4:	f7fd f8ef 	bl	8001186 <_isatty>
 8003fa8:	1c43      	adds	r3, r0, #1
 8003faa:	d102      	bne.n	8003fb2 <_isatty_r+0x1a>
 8003fac:	682b      	ldr	r3, [r5, #0]
 8003fae:	b103      	cbz	r3, 8003fb2 <_isatty_r+0x1a>
 8003fb0:	6023      	str	r3, [r4, #0]
 8003fb2:	bd38      	pop	{r3, r4, r5, pc}
 8003fb4:	200003c8 	.word	0x200003c8

08003fb8 <_init>:
 8003fb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003fba:	bf00      	nop
 8003fbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003fbe:	bc08      	pop	{r3}
 8003fc0:	469e      	mov	lr, r3
 8003fc2:	4770      	bx	lr

08003fc4 <_fini>:
 8003fc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003fc6:	bf00      	nop
 8003fc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003fca:	bc08      	pop	{r3}
 8003fcc:	469e      	mov	lr, r3
 8003fce:	4770      	bx	lr
